digraph "code-charta-edges-converted" { 
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.HelloWorldTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.SwitchCaseTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedMethodsTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.HelloWorldTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedMethodsTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LocalClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedClassTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.TryCatchFinallyTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericMethodsTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LambdasTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.AnonymousClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.ConstructorAndInitializerTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LocalClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.TryCatchFinallyTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DoubleColonTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LocalClassTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericMethodsTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedMethodsTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.InnerClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LambdasTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.HelloWorldTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.TryCatchFinallyTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DoubleColonTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericClassTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LambdasTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.TryCatchFinallyTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DoubleColonTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedInterfaceTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DefaultInterfaceMethodTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedMethodsTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LambdasTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedMethodsTest";
"root.analysis.import.SCMLogParser.src.test.resources.codecharta_git_numstat_raw" -> "root.analysis.import.SCMLogParser.src.test.resources.codecharta_git_raw";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.HelloWorldTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedInterfaceTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DefaultInterfaceMethodTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.TryCatchFinallyTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DoubleColonTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.TryCatchFinallyTest";
"root.analysis.import.SCMLogParser.src.test.resources.codecharta_git" -> "root.analysis.import.SCMLogParser.src.test.resources.codecharta_git_numstat_raw";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.InnerClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedMethodsTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedMethodsTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.SwitchCaseTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.InnerClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.SwitchCaseTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedInterfaceTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DefaultInterfaceMethodTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.InnerClassTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.InnerClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedInterfaceTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.SwitchCaseTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedClassTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericMethodsTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.SwitchCaseTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DefaultInterfaceMethodTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericClassTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedMethodsTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.TryCatchFinallyTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DefaultInterfaceMethodTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DoubleColonTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LocalClassTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.HelloWorldTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedClassTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DefaultInterfaceMethodTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.HelloWorldTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericMethodsTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LocalClassTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DefaultInterfaceMethodTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedClassTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LambdasTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DoubleColonTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.HelloWorldTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DefaultInterfaceMethodTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericMethodsTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LocalClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedInterfaceTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericMethodsTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.InnerClassTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedInterfaceTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedMethodsTest";
"root.analysis.import.SCMLogParser.src.test.resources.codecharta_git" -> "root.analysis.import.SCMLogParser.src.test.resources.codecharta_git_numstat";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LocalClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.SwitchCaseTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DefaultInterfaceMethodTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.SwitchCaseTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.InnerClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LocalClassTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.HelloWorldTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LambdasTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericMethodsTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedClassTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LambdasTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedClassTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.HelloWorldTest";
"root.analysis.import.SCMLogParser.src.test.resources.codecharta_git_numstat" -> "root.analysis.import.SCMLogParser.src.test.resources.codecharta_git_raw";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.SwitchCaseTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.TryCatchFinallyTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericMethodsTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedInterfaceTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.TryCatchFinallyTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DoubleColonTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedClassTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.HelloWorldTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.InnerClassTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DoubleColonTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.InnerClassTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericMethodsTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.HelloWorldTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DefaultInterfaceMethodTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LambdasTest";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.input.metrics.NumberOfAuthors" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.input.metrics.NumberOfOccurencesInCommits";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.SwitchCaseTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedInterfaceTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.SwitchCaseTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedMethodsTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DoubleColonTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.SwitchCaseTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedInterfaceTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LambdasTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LocalClassTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.InnerClassTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericMethodsTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericMethodsTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.TryCatchFinallyTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.InnerClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.TryCatchFinallyTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DefaultInterfaceMethodTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LocalClassTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LambdasTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedInterfaceTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DoubleColonTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LambdasTest";
"root.analysis.import.SCMLogParser.src.test.resources.codecharta_git_numstat" -> "root.analysis.import.SCMLogParser.src.test.resources.codecharta_git_numstat_raw";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedInterfaceTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.TryCatchFinallyTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DefaultInterfaceMethodTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedInterfaceTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DoubleColonTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedMethodsTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.HelloWorldTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LocalClassTest";
"root.analysis.import.SCMLogParser.src.test.resources.codecharta_git" -> "root.analysis.import.SCMLogParser.src.test.resources.codecharta_git_raw";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LocalClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedMethodsTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.InnerClassTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.NestedClassTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.LambdasTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.SwitchCaseTest";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.DoubleColonTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.GenericMethodsTest";
"root.analysis.filter.MergeFilter.build" -> "root.analysis.tools.ValidationTool.build";
"root.analysis.noderapper.packageLock" -> "root.analysis.nodeWrapper.package";
"root.visualization.app.codeCharta.ui.aggregateSettingsPanel.aggregateSettingsPanel.component" -> "root.visualization.app.codeCharta.ui.aggregateSettingsPanel.aggregateSettingsPanel.component";
"root.analysis.import.CSVImporter.src.main.kotlin.de.maibornwolff.codecharta.importer.csv.CSVImporter" -> "root.analysis.import.CSVImporter.src.main.kotlin.de.maibornwolff.codecharta.importer.csv.SourceMonitorImporter";
"root.visualization.app.codeCharta.ui.revisionChooser.revisionChooserFileDropDown" -> "root.visualization.app.codeCharta.ui.revisionChooser.revisionChooserFileDropDown";
"root.visualization.app.codeCharta.core.aggregate.aggregate.service" -> "root.visualization.app.codeCharta.core.aggregate.aggregate.service";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.EnumTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.MetricExtractorSimpleClassTest";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.input.metrics.LinesOfCode" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.input.metrics.NumberOfOccurencesInCommits";
"root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.AnnotationTest" -> "root.analysis.import.SourceCodeParser.src.test.kotlin.de.maibornwolff.codecharta.importer.sourcecodeparser.oop.core.extract.EnumTest";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.input.metrics.LinesOfCode" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.input.metrics.NumberOfAuthors";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogNumstatRawParserStrategy" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogRawParserStrategy";
"root.visualization.app.codeCharta.ui.ribbonBar.ribbonBar.component" -> "root.visualization.app.codeCharta.ui.ribbonBar.ribbonBar.component";
"root.visualization.app.codecharta.ui.nodeContextMenu.nodeContextMenu.component" -> "root.visualization.app.codecharta.ui.nodeContextMenu.nodeContextMenu.component";
"root.visualization.app.codecharta.ui.nodeContextMenu.nodeContextMenu.component" -> "root.visualization.app.codecharta.ui.nodeContextMenu.nodeContextMenu.component";
"root.visualization.app.codeCharta.core.aggregate.aggregate.service" -> "root.visualization.app.codeCharta.ui.aggregateSettingsPanel.aggregateSettingsPanel.component";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogNumstatParserStrategy" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogNumstatRawParserStrategy";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogParserStrategy" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.svn.SVNLogParserStrategy";
"root.visualization.app.codeCharta.codeMap.rendering.codeMapBuilding" -> "root.visualization.app.codeCharta.codeMap.rendering.codeMapMesh";
"root.visualization.app.codeCharta.codeMap.rendering.codeMapBuilding" -> "root.visualization.app.codeCharta.codeMap.rendering.codeMapGeometricDescription";
"root.analysis.gradle" -> "root.analysis.nodeWrapper.package";
"root.analysis.import.SCMLogParser.src.test.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.CommitCollectorTest" -> "root.analysis.import.SCMLogParser.src.test.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.ParserStrategyContractTest";
"root.analysis.build" -> "root.analysis.filter.MergeFilter.build";
"root.analysis.import.CSVImporter.build" -> "root.analysis.tools.ValidationTool.build";
"root.visualization.app.codeCharta.core.aggregate.aggregate.service" -> "root.visualization.app.codeCharta.ui.aggregateSettingsPanel.aggregateSettingsPanel.component";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogParserStrategy" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogRawParserStrategy";
"root.analysis.gradle" -> "root.analysis.nodeWrapper.packageLock";
"root.visualization.app.codeCharta.ui.mapTreeView.mapTreeViewLevel" -> "root.visualization.app.codeCharta.ui.mapTreeView.mapTreeViewLevelComponent";
"root.visualization.packageLock" -> "root.visualization.package";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogNumstatParserStrategy" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogRawParserStrategy";
"root.visualization.app.codeCharta.core.aggregate.aggregate.service" -> "root.visualization.app.codeCharta.ui.aggregateSettingsPanel.aggregateSettingsPanel.component";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogRawParserStrategy" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.svn.SVNLogParserStrategy";
"root.analysis.filter.MergeFilter.build" -> "root.analysis.import.CSVImporter.build";
"root.analysis.import.CSVImporter.build" -> "root.analysis.import.SonarImporter.build";
"root.analysis.import.CSVImporter.src.main.kotlin.de.maibornwolff.codecharta.importer.csv.SourceMonitorImporter" -> "root.analysis.import.CSVImporter.src.test.kotlin.de.maibornwolff.codecharta.importer.csv.CSVProjectAdapterTest";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.LogParserStrategy" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.svn.SVNLogParserStrategy";
"root.analysis.build" -> "root.analysis.model.build";
"root.visualization.app.codeCharta.core.data.data.deltaCalculator.service" -> "root.visualization.app.codeCharta.core.data.data.deltaCalculator.service";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogNumstatParserStrategy" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogParserStrategy";
"root.visualization.app.codeCharta.core.aggregate.aggregate.service" -> "root.visualization.app.codeCharta.ui.aggregateSettingsPanel.aggregateSettingsPanel.component";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogNumstatRawParserStrategy" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.svn.SVNLogParserStrategy";
"root.analysis.import.CSVImporter.build" -> "root.analysis.import.SCMLogParser.build";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.model.input.VersionControlledFile" -> "root.analysis.import.SCMLogParser.src.test.java.de.maibornwolff.codecharta.model.input.VersionControlledFileTest";
"root.visualization.app.codeCharta.codeMap.rendering.codeMapGeometricDescription" -> "root.visualization.app.codeCharta.codeMap.rendering.codeMapMesh";
"root.analysis.settings" -> "root.analysis.tools.ccsh.build";
"root.analysis.build" -> "root.analysis.tools.ValidationTool.build";
"root.visualization.app.app" -> "root.visualization.app.index";
"root.visualization.app.codeCharta.ui.aggregateSettingsPanel.aggregateSettingsPanel.component" -> "root.visualization.app.codeCharta.ui.aggregateSettingsPanel.aggregateSettingsPanel.component";
"root.visualization.app.codeCharta.core.aggregate.aggregate.service" -> "root.visualization.app.codeCharta.ui.aggregateSettingsPanel.aggregateSettingsPanel.component";
"root.visualization.app.codeCharta.ui.aggregateSettingsPanel.aggregateSettingsPanel.component" -> "root.visualization.app.codeCharta.ui.aggregateSettingsPanel.aggregateSettingsPanel.component";
"root.visualization.app.codeCharta.ui.codeMap.rendering.geometryGenerator" -> "root.visualization.app.codeCharta.ui.codeMap.rendering.renderSettings";
"root.visualization.app.codeCharta.codeCharta.component" -> "root.visualization.app.codeCharta.codeCharta.component";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogNumstatRawParserStrategy" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogParserStrategy";
"root.visualization.app.codeCharta.core.data.data.decorator.service" -> "root.visualization.app.codeCharta.core.data.data.decorator.service";
"root.analysis.import.SCMLogParser.src.test.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.ParserStrategyContractTest" -> "root.analysis.import.SCMLogParser.src.test.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogParserStrategyTest";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.input.metrics.MetricsFactory" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.input.metrics.RelativeCodeChurn";
"root.visualization.app.codeCharta.codeMap.rendering.codeMapBuilding" -> "root.visualization.app.codeCharta.codeMap.rendering.geometryGenerator";
"root.analysis.build" -> "root.analysis.import.CSVImporter.build";
"root.analysis.build" -> "root.analysis.import.SonarImporter.build";
"root.visualization.app.codeCharta.core.aggregate.aggregate.service" -> "root.visualization.app.codeCharta.core.aggregate.aggregate.service";
"root.analysis.tools.ccsh.build" -> "root.analysis.tools.ccsh.src.main.kotlin.de.maibornwolff.codecharta.tools.ccsh.Ccsh";
"root.visualization.app.codeCharta.core.scenario.scenario.data" -> "root.visualization.app.codeCharta.core.scenario.scenarios";
"root.visualization.app.codeCharta.codeMap.rendering.codeMapMesh" -> "root.visualization.app.codeCharta.codeMap.rendering.labelManager";
"root.analysis.tools.ValidationTool.build" -> "root.analysis.tools.ccsh.build";
"root.analysis.import.SCMLogParser.build" -> "root.analysis.tools.ValidationTool.build";
"root.analysis.import.SCMLogParser.src.test.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.LogParserTest" -> "root.analysis.import.SCMLogParser.src.test.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.ParserStrategyContractTest";
"root.visualization.app.codeCharta.codeMap.codeMapService" -> "root.visualization.app.codeCharta.codeMap.rendering.labelManager";
"root.analysis.build" -> "root.analysis.import.SCMLogParser.build";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.input.metrics.LinesOfCode" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.input.metrics.MetricsFactory";
"root.analysis.nodeWrapper.packageLock" -> "root.visualization.packageLock";
"root.visualization.app.codeCharta.core.aggregate.aggregate.service" -> "root.visualization.app.codeCharta.core.aggregate.aggregate.service";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogNumstatParserStrategy" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.svn.SVNLogParserStrategy";
"root.visualization.app.codeCharta.ui.metricChooser.metricChooser.component" -> "root.visualization.app.codeCharta.ui.metricChooser.metricChooser.horizontal.component";
"root.visualization.app.codeCharta.codeMap.rendering.codeMapMesh" -> "root.visualization.app.codeCharta.codeMap.rendering.geometryGenerator";
"root.visualization.app.codeCharta.codeMap.rendering.codeMapGeometricDescription" -> "root.visualization.app.codeCharta.codeMap.rendering.geometryGenerator";
"root.visualization.app.codeCharta.codeMap.codeMapService" -> "root.visualization.app.codeCharta.codeMap.rendering.geometryGenerator";
"root.analysis.filter.MergeFilter.build" -> "root.analysis.tools.ccsh.build";
"root.analysis.import.SCMLogParser.build" -> "root.analysis.import.SonarImporter.build";
"root.visualization.app.codeCharta.core.aggregate.aggregate.service" -> "root.visualization.app.codeCharta.core.aggregate.aggregate.service";
"root.analysis.import.CSVImporter.build" -> "root.analysis.tools.ccsh.build";
"root.analysis.filter.MergeFilter.build" -> "root.analysis.import.SCMLogParser.build";
"root.analysis.nodeWrapper.package" -> "root.visualization.packageLock";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.input.metrics.MetricsFactory" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogNumstatParserStrategy";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.SCMLogParser" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.SCMLogParserParameter";
"root.visualization.app.codeCharta.core.data.data.deltaCalculator.service" -> "root.visualization.app.codeCharta.core.data.data.service";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.LogParserStrategy" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogParserStrategy";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.input.metrics.MetricsFactory" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogNumstatRawParserStrategy";
"root.analysis.gradle" -> "root.visualization.package";
"root.visualization.app.codeCharta.core.aggregate.aggregate.service" -> "root.visualization.app.codeCharta.ui.aggregateSettingsPanel.aggregateSettingsPanel.component";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogParserStrategy" -> "root.analysis.import.SCMLogParser.src.test.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.ParserStrategyContractTest";
"root.visualization.Gruntfile" -> "root.visualization.conf.grunt.nwjs.config";
"root.visualization.app.codeCharta.codeMap.rendering.geometryGenerator" -> "root.visualization.app.codeCharta.codeMap.rendering.labelManager";
"root.visualization.app.codeCharta.core.aggregate.aggregate.service" -> "root.visualization.app.codeCharta.core.aggregate.aggregate.service";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogNumstatParserStrategy" -> "root.analysis.import.SCMLogParser.src.test.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogNumstatParserStrategyTest";
"root.analysis.nodeWrapper.package" -> "root.visualization.package";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogNumstatParserStrategy" -> "root.analysis.import.SCMLogParser.src.test.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.ParserStrategyContractTest";
"root.analysis.gradle" -> "root.visualization.packageLock";
"root.analysis.import.SCMLogParser.README" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.SCMLogParserParameter";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogParserStrategy" -> "root.analysis.import.SCMLogParser.src.test.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogParserStrategyTest";
"root.visualization.app.app" -> "root.visualization.app.app";
"root.visualization.app.codeCharta.core.aggregate.aggregate.service" -> "root.visualization.app.codeCharta.ui.aggregateSettingsPanel.aggregateSettingsPanel.component";
"root.visualization.app.codeCharta.ui.ribbonBar.ribbonBar.component" -> "root.visualization.app.codeCharta.ui.ribbonBar.ribbonBar.component";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogNumstatParserStrategy" -> "root.analysis.import.SCMLogParser.src.test.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.CommitCollectorTest";
"root.visualization.app.codeCharta.ui.aggregateSettingsPanel.aggregateSettingsPanel.component" -> "root.visualization.app.codeCharta.ui.aggregateSettingsPanel.aggregateSettingsPanel.component";
"root.visualization.app.codeCharta.ui.metricChooser.metricChooser.component" -> "root.visualization.app.codeCharta.ui.metricChooser.metricChooser.component";
"root.visualization.app.codeCharta.ui.metricChooser.metricChooser.component" -> "root.visualization.app.codeCharta.ui.metricChooser.metricChooser.component";
"root.visualization.app.codeCharta.core.data.data.deltaCalculator.service" -> "root.visualization.app.codeCharta.core.data.data.service";
"root.visualization.app.codeCharta.core.aggregate.aggregate.service" -> "root.visualization.app.codeCharta.core.aggregate.aggregate.service";
"root.visualization.app.codeCharta.ui.legendPanel.legendPanel" -> "root.visualization.app.codeCharta.ui.legendPanel.legendPanel";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogParserStrategy" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.model.input.VersionControlledFile";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.SCMLogParserParameter" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.converter.ProjectConverter";
"root.analysis.nodeWrapper.packageLock" -> "root.visualization.package";
"root.visualization.app.codeCharta.ui.legendPanel.legendPanel" -> "root.visualization.app.codeCharta.ui.legendPanel.legendPanelComponent";
"root.visualization.app.codeCharta.core.aggregate.aggregate.service" -> "root.visualization.app.codeCharta.ui.aggregateSettingsPanel.aggregateSettingsPanel.component";
"root.visualization.app.codeCharta.ui.metricChooser.metricChooser.component" -> "root.visualization.app.codeCharta.ui.metricChooser.metricChooser.horizontal.component";
"root.visualization.app.codeCharta.core.data.data.deltaCalculator.service" -> "root.visualization.app.codeCharta.core.data.data.service";
"root.CHANGELOG" -> "root.analysis.gradle";
"root.CHANGELOG" -> "root.analysis.nodeWrapper.package";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.SCMLogParserParameter" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogParserStrategy";
"root.visualization.app.codeCharta.ui.legendPanel.legendPanel" -> "root.visualization.app.codeCharta.ui.legendPanel.legendPanelComponent";
"root.visualization.app.codeCharta.core.aggregate.aggregate.service" -> "root.visualization.app.codeCharta.ui.aggregateSettingsPanel.aggregateSettingsPanel.component";
"root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.SCMLogParserParameter" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.parser.git.GitLogNumstatParserStrategy";
"root.analysis.import.SCMLogParser.build" -> "root.analysis.import.SCMLogParser.src.main.java.de.maibornwolff.codecharta.importer.scmlogparser.SCMLogParserParameter";
"root.visualization.app.codeCharta.core.scenario.scenario.data" -> "root.visualization.app.codeCharta.core.scenario.scenario.service";
"root.visualization.app.codeCharta.core.treemap.treemap.service" -> "root.visualization.app.codeCharta.ui.codeMap.codeMap.render.service";
"root.visualization.app.codeCharta.core.data.data.service" -> "root.visualization.app.codeCharta.core.data.data.service";
"root.visualization.app.codeCharta.ui.displaySettingsPanel.displaySettingsPanel.component" -> "root.visualization.app.codeCharta.ui.experimentalSettingsPanel.experimentalSettingsPanel.component";
"root.visualization.app.codeCharta.ui.aggregateSettingsPanel.aggregateSettingsPanel.component" -> "root.visualization.app.codeCharta.ui.revisionChooser.revisionChooserComponent";
"root.visualization.app.codeCharta.codeCharta.component" -> "root.visualization.app.codeCharta.ui.fileChooser.fileChooser";
"root.CHANGELOG" -> "root.visualization.package";
"root.visualization.app.codeCharta.codeCharta.component" -> "root.visualization.app.codeCharta.ui.metricChooser.metricChooser.component";
"root.visualization.app.codeCharta.ui.metricChooser.metricChooser.component" -> "root.visualization.app.codeCharta.ui.ribbonBar.ribbonBar.component";
"root.CHANGELOG" -> "root.analysis.nodeWrapper.packageLock";
"root.visualization.app.codeCharta.ui.settingsPanel.settingsPanel" -> "root.visualization.app.codeCharta.ui.ui";
"root.visualization.app.codeCharta.codeCharta.component" -> "root.visualization.app.codeCharta.codeCharta.component";
"root.visualization.app.codeCharta.codeCharta.component" -> "root.visualization.app.codeCharta.ui.legendPanel.legendPanel";
"root.travis" -> "root.visualization.script.travisBuild";
}