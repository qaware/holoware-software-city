digraph "zipkin.jar" {
    // Path: zipkin.jar
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.Collection (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "org.springframework.boot.loader.Launcher (zipkin.jar)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "org.springframework.boot.loader.archive.Archive (zipkin.jar)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "org.springframework.boot.loader.archive.Archive$Entry (zipkin.jar)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "org.springframework.boot.loader.archive.Archive$EntryFilter (zipkin.jar)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "org.springframework.boot.loader.ExecutableArchiveLauncher (zipkin.jar)";
   "org.springframework.boot.loader.JarLauncher"      -> "org.springframework.boot.loader.archive.Archive (zipkin.jar)";
   "org.springframework.boot.loader.JarLauncher"      -> "org.springframework.boot.loader.archive.Archive$Entry (zipkin.jar)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.AssertionError (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.ClassNotFoundException (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Package (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.net.JarURLConnection (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.net.URLClassLoader (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.security.AccessControlContext (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.security.AccessController (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.security.PrivilegedActionException (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.security.PrivilegedExceptionAction (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.util.jar.JarFile (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration (zipkin.jar)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "org.springframework.boot.loader.jar.Handler (zipkin.jar)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "org.springframework.boot.loader.jar.JarFile (zipkin.jar)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "org.springframework.boot.loader.LaunchedURLClassLoader (zipkin.jar)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "org.springframework.boot.loader.jar.Handler (zipkin.jar)";
   "org.springframework.boot.loader.Launcher"         -> "java.io.File (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Thread (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.security.CodeSource (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.security.ProtectionDomain (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.util.List (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "org.springframework.boot.loader.LaunchedURLClassLoader (zipkin.jar)";
   "org.springframework.boot.loader.Launcher"         -> "org.springframework.boot.loader.MainMethodRunner (zipkin.jar)";
   "org.springframework.boot.loader.Launcher"         -> "org.springframework.boot.loader.archive.Archive (zipkin.jar)";
   "org.springframework.boot.loader.Launcher"         -> "org.springframework.boot.loader.archive.ExplodedArchive (zipkin.jar)";
   "org.springframework.boot.loader.Launcher"         -> "org.springframework.boot.loader.archive.JarFileArchive (zipkin.jar)";
   "org.springframework.boot.loader.Launcher"         -> "org.springframework.boot.loader.jar.JarFile (zipkin.jar)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.Thread (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.reflect.Method (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.FileInputStream (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.PrintStream (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.UnsupportedEncodingException (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Boolean (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Character (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.NoSuchMethodException (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.reflect.Constructor (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.HttpURLConnection (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.URLDecoder (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Collection (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.LinkedHashSet (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Locale (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Properties (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Set (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.regex.Matcher (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.regex.Pattern (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.JarLauncher (zipkin.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.LaunchedURLClassLoader (zipkin.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.Launcher (zipkin.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.PropertiesLauncher$1 (zipkin.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter (zipkin.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter (zipkin.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.archive.Archive (zipkin.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.archive.Archive$Entry (zipkin.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.archive.Archive$EntryFilter (zipkin.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.archive.ExplodedArchive (zipkin.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.archive.JarFileArchive (zipkin.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.util.SystemPropertyUtils (zipkin.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.util.Assert (not found)";
   "org.springframework.boot.loader.PropertiesLauncher$1" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$1" -> "org.springframework.boot.loader.PropertiesLauncher (zipkin.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "org.springframework.boot.loader.PropertiesLauncher (zipkin.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "org.springframework.boot.loader.PropertiesLauncher$1 (zipkin.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "org.springframework.boot.loader.archive.Archive (zipkin.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "org.springframework.boot.loader.archive.Archive$Entry (zipkin.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "org.springframework.boot.loader.archive.Archive$EntryFilter (zipkin.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "org.springframework.boot.loader.PropertiesLauncher (zipkin.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "org.springframework.boot.loader.PropertiesLauncher$1 (zipkin.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter (zipkin.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "org.springframework.boot.loader.archive.Archive (zipkin.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "org.springframework.boot.loader.archive.Archive$Entry (zipkin.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "org.springframework.boot.loader.archive.Archive$EntryFilter (zipkin.jar)";
   "org.springframework.boot.loader.WarLauncher"      -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.WarLauncher"      -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.WarLauncher"      -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.WarLauncher"      -> "org.springframework.boot.loader.ExecutableArchiveLauncher (zipkin.jar)";
   "org.springframework.boot.loader.WarLauncher"      -> "org.springframework.boot.loader.archive.Archive (zipkin.jar)";
   "org.springframework.boot.loader.WarLauncher"      -> "org.springframework.boot.loader.archive.Archive$Entry (zipkin.jar)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.AutoCloseable (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.Iterable (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.util.List (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "org.springframework.boot.loader.archive.Archive$Entry (zipkin.jar)";
   "org.springframework.boot.loader.archive.Archive"  -> "org.springframework.boot.loader.archive.Archive$EntryFilter (zipkin.jar)";
   "org.springframework.boot.loader.archive.Archive$Entry" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.Archive$Entry" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.Archive$Entry" -> "org.springframework.boot.loader.archive.Archive (zipkin.jar)";
   "org.springframework.boot.loader.archive.Archive$EntryFilter" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.Archive$EntryFilter" -> "org.springframework.boot.loader.archive.Archive (zipkin.jar)";
   "org.springframework.boot.loader.archive.Archive$EntryFilter" -> "org.springframework.boot.loader.archive.Archive$Entry (zipkin.jar)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.io.FileInputStream (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.Arrays (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.Collection (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.HashSet (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.Set (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "org.springframework.boot.loader.archive.Archive (zipkin.jar)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "org.springframework.boot.loader.archive.Archive$Entry (zipkin.jar)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "org.springframework.boot.loader.archive.Archive$EntryFilter (zipkin.jar)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "org.springframework.boot.loader.archive.ExplodedArchive$1 (zipkin.jar)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry (zipkin.jar)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator (zipkin.jar)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "org.springframework.boot.loader.archive.JarFileArchive (zipkin.jar)";
   "org.springframework.boot.loader.archive.ExplodedArchive$1" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$1" -> "org.springframework.boot.loader.archive.ExplodedArchive (zipkin.jar)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry" -> "org.springframework.boot.loader.archive.Archive (zipkin.jar)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry" -> "org.springframework.boot.loader.archive.Archive$Entry (zipkin.jar)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry" -> "org.springframework.boot.loader.archive.ExplodedArchive (zipkin.jar)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator" -> "java.lang.UnsupportedOperationException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator" -> "java.util.Arrays (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator" -> "java.util.Comparator (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator" -> "java.util.Deque (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator" -> "java.util.LinkedList (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator" -> "java.util.NoSuchElementException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator" -> "java.util.Set (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator" -> "org.springframework.boot.loader.archive.Archive (zipkin.jar)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator" -> "org.springframework.boot.loader.archive.Archive$Entry (zipkin.jar)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator" -> "org.springframework.boot.loader.archive.ExplodedArchive (zipkin.jar)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator" -> "org.springframework.boot.loader.archive.ExplodedArchive$1 (zipkin.jar)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator" -> "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry (zipkin.jar)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator" -> "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator$EntryComparator (zipkin.jar)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator$EntryComparator" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator$EntryComparator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator$EntryComparator" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator$EntryComparator" -> "java.util.Comparator (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator$EntryComparator" -> "org.springframework.boot.loader.archive.ExplodedArchive (zipkin.jar)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator$EntryComparator" -> "org.springframework.boot.loader.archive.ExplodedArchive$1 (zipkin.jar)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator$EntryComparator" -> "org.springframework.boot.loader.archive.ExplodedArchive$FileEntryIterator (zipkin.jar)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.FileOutputStream (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.OutputStream (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.UUID (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "org.springframework.boot.loader.archive.Archive (zipkin.jar)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "org.springframework.boot.loader.archive.Archive$Entry (zipkin.jar)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "org.springframework.boot.loader.archive.Archive$EntryFilter (zipkin.jar)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "org.springframework.boot.loader.archive.JarFileArchive$EntryIterator (zipkin.jar)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "org.springframework.boot.loader.archive.JarFileArchive$JarFileEntry (zipkin.jar)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "org.springframework.boot.loader.jar.JarFile (zipkin.jar)";
   "org.springframework.boot.loader.archive.JarFileArchive$EntryIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$EntryIterator" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$EntryIterator" -> "java.lang.UnsupportedOperationException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$EntryIterator" -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$EntryIterator" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$EntryIterator" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$EntryIterator" -> "org.springframework.boot.loader.archive.Archive (zipkin.jar)";
   "org.springframework.boot.loader.archive.JarFileArchive$EntryIterator" -> "org.springframework.boot.loader.archive.Archive$Entry (zipkin.jar)";
   "org.springframework.boot.loader.archive.JarFileArchive$EntryIterator" -> "org.springframework.boot.loader.archive.JarFileArchive (zipkin.jar)";
   "org.springframework.boot.loader.archive.JarFileArchive$EntryIterator" -> "org.springframework.boot.loader.archive.JarFileArchive$JarFileEntry (zipkin.jar)";
   "org.springframework.boot.loader.archive.JarFileArchive$JarFileEntry" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$JarFileEntry" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$JarFileEntry" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$JarFileEntry" -> "org.springframework.boot.loader.archive.Archive (zipkin.jar)";
   "org.springframework.boot.loader.archive.JarFileArchive$JarFileEntry" -> "org.springframework.boot.loader.archive.Archive$Entry (zipkin.jar)";
   "org.springframework.boot.loader.archive.JarFileArchive$JarFileEntry" -> "org.springframework.boot.loader.archive.JarFileArchive (zipkin.jar)";
   "org.springframework.boot.loader.data.RandomAccessData" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessData" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.data.RandomAccessData" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.io.EOFException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.lang.IndexOutOfBoundsException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "org.springframework.boot.loader.data.RandomAccessData (zipkin.jar)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "org.springframework.boot.loader.data.RandomAccessDataFile$1 (zipkin.jar)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream (zipkin.jar)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess (zipkin.jar)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$1" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$1" -> "org.springframework.boot.loader.data.RandomAccessDataFile (zipkin.jar)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.lang.Math (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.lang.NullPointerException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "org.springframework.boot.loader.data.RandomAccessDataFile (zipkin.jar)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "org.springframework.boot.loader.data.RandomAccessDataFile$1 (zipkin.jar)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.io.FileNotFoundException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.io.RandomAccessFile (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "org.springframework.boot.loader.data.RandomAccessDataFile (zipkin.jar)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "org.springframework.boot.loader.data.RandomAccessDataFile$1 (zipkin.jar)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.IndexOutOfBoundsException (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.nio.charset.Charset (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.nio.charset.StandardCharsets (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "org.springframework.boot.loader.jar.StringSequence (zipkin.jar)";
   "org.springframework.boot.loader.jar.Bytes"        -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.lang.Math (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "org.springframework.boot.loader.data.RandomAccessData (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "org.springframework.boot.loader.jar.AsciiBytes (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "org.springframework.boot.loader.jar.Bytes (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$1 (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64End (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64Locator (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$1" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$1" -> "org.springframework.boot.loader.jar.CentralDirectoryEndRecord (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64End" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64End" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64End" -> "org.springframework.boot.loader.data.RandomAccessData (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64End" -> "org.springframework.boot.loader.jar.Bytes (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64End" -> "org.springframework.boot.loader.jar.CentralDirectoryEndRecord (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64End" -> "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$1 (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64End" -> "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64Locator (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64Locator" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64Locator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64Locator" -> "org.springframework.boot.loader.data.RandomAccessData (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64Locator" -> "org.springframework.boot.loader.jar.Bytes (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64Locator" -> "org.springframework.boot.loader.jar.CentralDirectoryEndRecord (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64Locator" -> "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$1 (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.CloneNotSupportedException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.Math (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.Instant (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.ZoneId (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.ZonedDateTime (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.temporal.ChronoField (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.temporal.ChronoUnit (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.temporal.TemporalUnit (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.temporal.ValueRange (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "org.springframework.boot.loader.data.RandomAccessData (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "org.springframework.boot.loader.jar.AsciiBytes (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "org.springframework.boot.loader.jar.Bytes (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "org.springframework.boot.loader.jar.FileHeader (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "org.springframework.boot.loader.jar.JarEntryFilter (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "org.springframework.boot.loader.data.RandomAccessData (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "org.springframework.boot.loader.jar.AsciiBytes (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "org.springframework.boot.loader.jar.CentralDirectoryEndRecord (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "org.springframework.boot.loader.jar.CentralDirectoryFileHeader (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "org.springframework.boot.loader.jar.CentralDirectoryVisitor (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "org.springframework.boot.loader.jar.JarEntryFilter (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryVisitor" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryVisitor" -> "org.springframework.boot.loader.data.RandomAccessData (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryVisitor" -> "org.springframework.boot.loader.jar.CentralDirectoryEndRecord (zipkin.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryVisitor" -> "org.springframework.boot.loader.jar.CentralDirectoryFileHeader (zipkin.jar)";
   "org.springframework.boot.loader.jar.FileHeader"   -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.FileHeader"   -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.io.File (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.io.PrintStream (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.RuntimeException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.ref.SoftReference (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.URLStreamHandler (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.Map (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.concurrent.ConcurrentHashMap (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.logging.Level (java.logging)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.logging.Logger (java.logging)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.regex.Matcher (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.regex.Pattern (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "org.springframework.boot.loader.jar.JarFile (zipkin.jar)";
   "org.springframework.boot.loader.jar.Handler"      -> "org.springframework.boot.loader.jar.JarURLConnection (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.security.CodeSigner (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.security.cert.Certificate (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "org.springframework.boot.loader.jar.AsciiBytes (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "org.springframework.boot.loader.jar.CentralDirectoryFileHeader (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "org.springframework.boot.loader.jar.FileHeader (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "org.springframework.boot.loader.jar.JarFile (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarEntryFilter" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarEntryFilter" -> "org.springframework.boot.loader.jar.AsciiBytes (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.io.File (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Error (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.RuntimeException (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.ref.SoftReference (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.URLStreamHandler (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.URLStreamHandlerFactory (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.function.Supplier (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.jar.JarFile (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.jar.JarInputStream (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "org.springframework.boot.loader.data.RandomAccessData (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFile"      -> "org.springframework.boot.loader.data.RandomAccessDataFile (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFile"      -> "org.springframework.boot.loader.jar.AsciiBytes (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFile"      -> "org.springframework.boot.loader.jar.CentralDirectoryParser (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFile"      -> "org.springframework.boot.loader.jar.CentralDirectoryVisitor (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFile"      -> "org.springframework.boot.loader.jar.FileHeader (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFile"      -> "org.springframework.boot.loader.jar.Handler (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFile"      -> "org.springframework.boot.loader.jar.JarEntry (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFile"      -> "org.springframework.boot.loader.jar.JarEntryFilter (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFile"      -> "org.springframework.boot.loader.jar.JarFile$1 (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFile"      -> "org.springframework.boot.loader.jar.JarFile$2 (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFile"      -> "org.springframework.boot.loader.jar.JarFile$JarFileType (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFile"      -> "org.springframework.boot.loader.jar.JarFileEntries (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFile$1"    -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile$1"    -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarFile$1"    -> "org.springframework.boot.loader.data.RandomAccessData (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFile$1"    -> "org.springframework.boot.loader.jar.AsciiBytes (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFile$1"    -> "org.springframework.boot.loader.jar.CentralDirectoryEndRecord (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFile$1"    -> "org.springframework.boot.loader.jar.CentralDirectoryFileHeader (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFile$1"    -> "org.springframework.boot.loader.jar.CentralDirectoryVisitor (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFile$1"    -> "org.springframework.boot.loader.jar.JarFile (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFile$2"    -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile$2"    -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.jar.JarFile$2"    -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.JarFile$2"    -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.jar.JarFile$2"    -> "org.springframework.boot.loader.jar.JarFile (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFile$JarFileType" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarFileType" -> "java.lang.Enum (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarFileType" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarFileType" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarFileType" -> "org.springframework.boot.loader.jar.JarFile (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Boolean (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Integer (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Iterable (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Runtime (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.reflect.Method (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.Arrays (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.Map (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.jar.Attributes$Name (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "org.springframework.boot.loader.data.RandomAccessData (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "org.springframework.boot.loader.jar.AsciiBytes (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "org.springframework.boot.loader.jar.Bytes (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "org.springframework.boot.loader.jar.CentralDirectoryEndRecord (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "org.springframework.boot.loader.jar.CentralDirectoryFileHeader (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "org.springframework.boot.loader.jar.CentralDirectoryVisitor (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "org.springframework.boot.loader.jar.FileHeader (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "org.springframework.boot.loader.jar.JarEntry (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "org.springframework.boot.loader.jar.JarEntryFilter (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "org.springframework.boot.loader.jar.JarFile (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "org.springframework.boot.loader.jar.JarFileEntries$1 (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "org.springframework.boot.loader.jar.ZipInflaterInputStream (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries$1" -> "java.lang.Integer (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$1" -> "java.util.LinkedHashMap (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$1" -> "java.util.Map (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$1" -> "java.util.Map$Entry (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$1" -> "org.springframework.boot.loader.jar.FileHeader (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries$1" -> "org.springframework.boot.loader.jar.JarFile (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries$1" -> "org.springframework.boot.loader.jar.JarFileEntries (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.util.NoSuchElementException (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "org.springframework.boot.loader.jar.AsciiBytes (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "org.springframework.boot.loader.jar.FileHeader (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "org.springframework.boot.loader.jar.JarEntry (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "org.springframework.boot.loader.jar.JarFileEntries (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "org.springframework.boot.loader.jar.JarFileEntries$1 (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.FileNotFoundException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.FilePermission (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.Boolean (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.Integer (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.ThreadLocal (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.net.JarURLConnection (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.net.URLStreamHandler (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.security.Permission (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.util.jar.JarFile (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "org.springframework.boot.loader.data.RandomAccessData (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "org.springframework.boot.loader.data.RandomAccessDataFile (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "org.springframework.boot.loader.jar.JarEntry (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "org.springframework.boot.loader.jar.JarFile (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "org.springframework.boot.loader.jar.JarFile$JarFileType (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "org.springframework.boot.loader.jar.JarURLConnection$1 (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "org.springframework.boot.loader.jar.JarURLConnection$2 (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "org.springframework.boot.loader.jar.JarURLConnection$CloseAction (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "org.springframework.boot.loader.jar.StringSequence (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection$1" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$1" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$1" -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$1" -> "java.net.URLStreamHandler (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$1" -> "org.springframework.boot.loader.jar.JarURLConnection (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection$2" -> "java.io.FilterInputStream (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$2" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$2" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$2" -> "org.springframework.boot.loader.jar.JarURLConnection (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection$2" -> "org.springframework.boot.loader.jar.JarURLConnection$CloseAction (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection$CloseAction" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$CloseAction" -> "java.lang.FunctionalInterface (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$CloseAction" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$CloseAction" -> "org.springframework.boot.loader.jar.JarURLConnection (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.io.ByteArrayOutputStream (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.io.UnsupportedEncodingException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.Character (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.net.URLEncoder (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "org.springframework.boot.loader.jar.AsciiBytes (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "org.springframework.boot.loader.jar.JarURLConnection (zipkin.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "org.springframework.boot.loader.jar.StringSequence (zipkin.jar)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.lang.StringIndexOutOfBoundsException (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.util.Objects (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.io.EOFException (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.util.zip.Inflater (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.util.zip.InflaterInputStream (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.io.PrintStream (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.util.HashSet (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.util.Locale (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.util.Properties (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.util.Set (java.base)";
   "zipkin.server.EnableZipkinServer"                 -> "java.lang.Deprecated (java.base)";
   "zipkin.server.EnableZipkinServer"                 -> "java.lang.Object (java.base)";
   "zipkin.server.EnableZipkinServer"                 -> "java.lang.annotation.Annotation (java.base)";
   "zipkin.server.EnableZipkinServer"                 -> "java.lang.annotation.Documented (java.base)";
   "zipkin.server.EnableZipkinServer"                 -> "java.lang.annotation.Retention (java.base)";
   "zipkin.server.EnableZipkinServer"                 -> "java.lang.annotation.Target (java.base)";
   "zipkin.server.EnableZipkinServer"                 -> "org.springframework.context.annotation.Import (not found)";
   "zipkin.server.ZipkinServer"                       -> "java.lang.Class (java.base)";
   "zipkin.server.ZipkinServer"                       -> "java.lang.Object (java.base)";
   "zipkin.server.ZipkinServer"                       -> "java.lang.String (java.base)";
   "zipkin.server.ZipkinServer"                       -> "org.slf4j.bridge.SLF4JBridgeHandler (not found)";
   "zipkin.server.ZipkinServer"                       -> "org.springframework.boot.Banner (not found)";
   "zipkin.server.ZipkinServer"                       -> "org.springframework.boot.SpringBootConfiguration (not found)";
   "zipkin.server.ZipkinServer"                       -> "org.springframework.boot.autoconfigure.EnableAutoConfiguration (not found)";
   "zipkin.server.ZipkinServer"                       -> "org.springframework.boot.builder.SpringApplicationBuilder (not found)";
   "zipkin.server.ZipkinServer"                       -> "org.springframework.context.ApplicationContextInitializer (not found)";
   "zipkin.server.ZipkinServer"                       -> "org.springframework.context.ConfigurableApplicationContext (not found)";
   "zipkin.server.ZipkinServer"                       -> "zipkin2.server.internal.EnableZipkinServer (zipkin.jar)";
   "zipkin.server.ZipkinServer"                       -> "zipkin2.server.internal.ZipkinActuatorImporter (zipkin.jar)";
   "zipkin.server.ZipkinServer"                       -> "zipkin2.server.internal.ZipkinModuleImporter (zipkin.jar)";
   "zipkin.server.ZipkinServer"                       -> "zipkin2.server.internal.banner.ZipkinBanner (zipkin.jar)";
   "zipkin2.server.internal.BodyIsExceptionMessage"   -> "com.linecorp.armeria.common.HttpMethod (not found)";
   "zipkin2.server.internal.BodyIsExceptionMessage"   -> "com.linecorp.armeria.common.HttpRequest (not found)";
   "zipkin2.server.internal.BodyIsExceptionMessage"   -> "com.linecorp.armeria.common.HttpResponse (not found)";
   "zipkin2.server.internal.BodyIsExceptionMessage"   -> "com.linecorp.armeria.common.HttpStatus (not found)";
   "zipkin2.server.internal.BodyIsExceptionMessage"   -> "com.linecorp.armeria.common.MediaType (not found)";
   "zipkin2.server.internal.BodyIsExceptionMessage"   -> "com.linecorp.armeria.server.ServiceRequestContext (not found)";
   "zipkin2.server.internal.BodyIsExceptionMessage"   -> "com.linecorp.armeria.server.annotation.ExceptionHandlerFunction (not found)";
   "zipkin2.server.internal.BodyIsExceptionMessage"   -> "java.lang.Class (java.base)";
   "zipkin2.server.internal.BodyIsExceptionMessage"   -> "java.lang.IllegalArgumentException (java.base)";
   "zipkin2.server.internal.BodyIsExceptionMessage"   -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.BodyIsExceptionMessage"   -> "java.lang.String (java.base)";
   "zipkin2.server.internal.BodyIsExceptionMessage"   -> "java.lang.Throwable (java.base)";
   "zipkin2.server.internal.BodyIsExceptionMessage"   -> "org.slf4j.Logger (not found)";
   "zipkin2.server.internal.BodyIsExceptionMessage"   -> "org.slf4j.LoggerFactory (not found)";
   "zipkin2.server.internal.BodyIsExceptionMessage"   -> "zipkin2.collector.CollectorMetrics (not found)";
   "zipkin2.server.internal.BodyIsExceptionMessage"   -> "zipkin2.server.internal.ZipkinHttpCollector (zipkin.jar)";
   "zipkin2.server.internal.CompletableCallback"      -> "com.linecorp.armeria.common.HttpResponse (not found)";
   "zipkin2.server.internal.CompletableCallback"      -> "com.linecorp.armeria.common.HttpStatus (not found)";
   "zipkin2.server.internal.CompletableCallback"      -> "com.linecorp.armeria.common.ResponseHeaders (not found)";
   "zipkin2.server.internal.CompletableCallback"      -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.CompletableCallback"      -> "java.lang.Throwable (java.base)";
   "zipkin2.server.internal.CompletableCallback"      -> "java.lang.Void (java.base)";
   "zipkin2.server.internal.CompletableCallback"      -> "java.util.concurrent.CompletableFuture (java.base)";
   "zipkin2.server.internal.CompletableCallback"      -> "zipkin2.Callback (not found)";
   "zipkin2.server.internal.ConditionalOnSelfTracing" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.ConditionalOnSelfTracing" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.ConditionalOnSelfTracing" -> "java.lang.annotation.Annotation (java.base)";
   "zipkin2.server.internal.ConditionalOnSelfTracing" -> "java.lang.annotation.Retention (java.base)";
   "zipkin2.server.internal.ConditionalOnSelfTracing" -> "java.lang.annotation.Target (java.base)";
   "zipkin2.server.internal.ConditionalOnSelfTracing" -> "org.springframework.context.annotation.Conditional (not found)";
   "zipkin2.server.internal.ConditionalOnSelfTracing" -> "zipkin2.server.internal.ConditionalOnSelfTracing$SelfTracingCondition (zipkin.jar)";
   "zipkin2.server.internal.ConditionalOnSelfTracing$SelfTracingCondition" -> "java.lang.Boolean (java.base)";
   "zipkin2.server.internal.ConditionalOnSelfTracing$SelfTracingCondition" -> "java.lang.Class (java.base)";
   "zipkin2.server.internal.ConditionalOnSelfTracing$SelfTracingCondition" -> "java.lang.ClassNotFoundException (java.base)";
   "zipkin2.server.internal.ConditionalOnSelfTracing$SelfTracingCondition" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.ConditionalOnSelfTracing$SelfTracingCondition" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.ConditionalOnSelfTracing$SelfTracingCondition" -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.ConditionalOnSelfTracing$SelfTracingCondition" -> "java.util.Map (java.base)";
   "zipkin2.server.internal.ConditionalOnSelfTracing$SelfTracingCondition" -> "org.springframework.boot.autoconfigure.condition.ConditionOutcome (not found)";
   "zipkin2.server.internal.ConditionalOnSelfTracing$SelfTracingCondition" -> "org.springframework.boot.autoconfigure.condition.SpringBootCondition (not found)";
   "zipkin2.server.internal.ConditionalOnSelfTracing$SelfTracingCondition" -> "org.springframework.context.annotation.ConditionContext (not found)";
   "zipkin2.server.internal.ConditionalOnSelfTracing$SelfTracingCondition" -> "org.springframework.core.annotation.AnnotationAttributes (not found)";
   "zipkin2.server.internal.ConditionalOnSelfTracing$SelfTracingCondition" -> "org.springframework.core.env.Environment (not found)";
   "zipkin2.server.internal.ConditionalOnSelfTracing$SelfTracingCondition" -> "org.springframework.core.type.AnnotatedTypeMetadata (not found)";
   "zipkin2.server.internal.ConditionalOnSelfTracing$SelfTracingCondition" -> "zipkin2.server.internal.ConditionalOnSelfTracing (zipkin.jar)";
   "zipkin2.server.internal.ConditionalOnThrottledStorage" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.ConditionalOnThrottledStorage" -> "java.lang.annotation.Annotation (java.base)";
   "zipkin2.server.internal.ConditionalOnThrottledStorage" -> "java.lang.annotation.Retention (java.base)";
   "zipkin2.server.internal.ConditionalOnThrottledStorage" -> "java.lang.annotation.Target (java.base)";
   "zipkin2.server.internal.ConditionalOnThrottledStorage" -> "org.springframework.context.annotation.Conditional (not found)";
   "zipkin2.server.internal.ConditionalOnThrottledStorage" -> "zipkin2.server.internal.ConditionalOnThrottledStorage$ThrottledStorageCondition (zipkin.jar)";
   "zipkin2.server.internal.ConditionalOnThrottledStorage$ThrottledStorageCondition" -> "java.lang.Boolean (java.base)";
   "zipkin2.server.internal.ConditionalOnThrottledStorage$ThrottledStorageCondition" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.ConditionalOnThrottledStorage$ThrottledStorageCondition" -> "org.springframework.boot.autoconfigure.condition.ConditionOutcome (not found)";
   "zipkin2.server.internal.ConditionalOnThrottledStorage$ThrottledStorageCondition" -> "org.springframework.boot.autoconfigure.condition.SpringBootCondition (not found)";
   "zipkin2.server.internal.ConditionalOnThrottledStorage$ThrottledStorageCondition" -> "org.springframework.context.annotation.ConditionContext (not found)";
   "zipkin2.server.internal.ConditionalOnThrottledStorage$ThrottledStorageCondition" -> "org.springframework.core.env.Environment (not found)";
   "zipkin2.server.internal.ConditionalOnThrottledStorage$ThrottledStorageCondition" -> "org.springframework.core.type.AnnotatedTypeMetadata (not found)";
   "zipkin2.server.internal.ConditionalOnThrottledStorage$ThrottledStorageCondition" -> "zipkin2.server.internal.ConditionalOnThrottledStorage (zipkin.jar)";
   "zipkin2.server.internal.ConsumesProtobuf"         -> "com.linecorp.armeria.server.annotation.Consumes (not found)";
   "zipkin2.server.internal.ConsumesProtobuf"         -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.ConsumesProtobuf"         -> "java.lang.annotation.Annotation (java.base)";
   "zipkin2.server.internal.ConsumesProtobuf"         -> "java.lang.annotation.Retention (java.base)";
   "zipkin2.server.internal.ConsumesProtobuf"         -> "java.lang.annotation.Target (java.base)";
   "zipkin2.server.internal.ConsumesThrift"           -> "com.linecorp.armeria.server.annotation.Consumes (not found)";
   "zipkin2.server.internal.ConsumesThrift"           -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.ConsumesThrift"           -> "java.lang.annotation.Annotation (java.base)";
   "zipkin2.server.internal.ConsumesThrift"           -> "java.lang.annotation.Retention (java.base)";
   "zipkin2.server.internal.ConsumesThrift"           -> "java.lang.annotation.Target (java.base)";
   "zipkin2.server.internal.EnableZipkinServer"       -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.EnableZipkinServer"       -> "java.lang.annotation.Annotation (java.base)";
   "zipkin2.server.internal.EnableZipkinServer"       -> "java.lang.annotation.Documented (java.base)";
   "zipkin2.server.internal.EnableZipkinServer"       -> "java.lang.annotation.Retention (java.base)";
   "zipkin2.server.internal.EnableZipkinServer"       -> "java.lang.annotation.Target (java.base)";
   "zipkin2.server.internal.EnableZipkinServer"       -> "org.springframework.context.annotation.Import (not found)";
   "zipkin2.server.internal.InternalZipkinConfiguration" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.InternalZipkinConfiguration" -> "org.springframework.context.annotation.Import (not found)";
   "zipkin2.server.internal.JsonUtil"                 -> "com.fasterxml.jackson.core.JsonFactory (not found)";
   "zipkin2.server.internal.JsonUtil"                 -> "com.fasterxml.jackson.core.JsonGenerator (not found)";
   "zipkin2.server.internal.JsonUtil"                 -> "com.fasterxml.jackson.core.PrettyPrinter (not found)";
   "zipkin2.server.internal.JsonUtil"                 -> "com.fasterxml.jackson.core.util.DefaultIndenter (not found)";
   "zipkin2.server.internal.JsonUtil"                 -> "com.fasterxml.jackson.core.util.DefaultPrettyPrinter (not found)";
   "zipkin2.server.internal.JsonUtil"                 -> "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter (not found)";
   "zipkin2.server.internal.JsonUtil"                 -> "java.io.IOException (java.base)";
   "zipkin2.server.internal.JsonUtil"                 -> "java.io.Writer (java.base)";
   "zipkin2.server.internal.JsonUtil"                 -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.JsonUtil"                 -> "java.lang.String (java.base)";
   "zipkin2.server.internal.MicrometerCollectorMetrics" -> "io.micrometer.core.instrument.Counter (not found)";
   "zipkin2.server.internal.MicrometerCollectorMetrics" -> "io.micrometer.core.instrument.Counter$Builder (not found)";
   "zipkin2.server.internal.MicrometerCollectorMetrics" -> "io.micrometer.core.instrument.Gauge (not found)";
   "zipkin2.server.internal.MicrometerCollectorMetrics" -> "io.micrometer.core.instrument.Gauge$Builder (not found)";
   "zipkin2.server.internal.MicrometerCollectorMetrics" -> "io.micrometer.core.instrument.MeterRegistry (not found)";
   "zipkin2.server.internal.MicrometerCollectorMetrics" -> "java.lang.IllegalStateException (java.base)";
   "zipkin2.server.internal.MicrometerCollectorMetrics" -> "java.lang.NullPointerException (java.base)";
   "zipkin2.server.internal.MicrometerCollectorMetrics" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.MicrometerCollectorMetrics" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.MicrometerCollectorMetrics" -> "java.lang.invoke.CallSite (java.base)";
   "zipkin2.server.internal.MicrometerCollectorMetrics" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "zipkin2.server.internal.MicrometerCollectorMetrics" -> "java.lang.invoke.MethodHandle (java.base)";
   "zipkin2.server.internal.MicrometerCollectorMetrics" -> "java.lang.invoke.MethodHandles (java.base)";
   "zipkin2.server.internal.MicrometerCollectorMetrics" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "zipkin2.server.internal.MicrometerCollectorMetrics" -> "java.lang.invoke.MethodType (java.base)";
   "zipkin2.server.internal.MicrometerCollectorMetrics" -> "java.util.concurrent.atomic.AtomicInteger (java.base)";
   "zipkin2.server.internal.MicrometerCollectorMetrics" -> "java.util.function.ToDoubleFunction (java.base)";
   "zipkin2.server.internal.MicrometerCollectorMetrics" -> "zipkin2.collector.CollectorMetrics (not found)";
   "zipkin2.server.internal.MicrometerCollectorMetrics" -> "zipkin2.internal.Nullable (not found)";
   "zipkin2.server.internal.UnzippingBytesRequestConverter" -> "com.linecorp.armeria.client.encoding.StreamDecoder (not found)";
   "zipkin2.server.internal.UnzippingBytesRequestConverter" -> "com.linecorp.armeria.client.encoding.StreamDecoderFactory (not found)";
   "zipkin2.server.internal.UnzippingBytesRequestConverter" -> "com.linecorp.armeria.common.AggregatedHttpRequest (not found)";
   "zipkin2.server.internal.UnzippingBytesRequestConverter" -> "com.linecorp.armeria.common.HttpData (not found)";
   "zipkin2.server.internal.UnzippingBytesRequestConverter" -> "com.linecorp.armeria.common.HttpHeaderNames (not found)";
   "zipkin2.server.internal.UnzippingBytesRequestConverter" -> "com.linecorp.armeria.common.RequestHeaders (not found)";
   "zipkin2.server.internal.UnzippingBytesRequestConverter" -> "com.linecorp.armeria.server.ServiceRequestContext (not found)";
   "zipkin2.server.internal.UnzippingBytesRequestConverter" -> "io.netty.buffer.ByteBufAllocator (not found)";
   "zipkin2.server.internal.UnzippingBytesRequestConverter" -> "io.netty.util.AsciiString (not found)";
   "zipkin2.server.internal.UnzippingBytesRequestConverter" -> "io.netty.util.ReferenceCountUtil (not found)";
   "zipkin2.server.internal.UnzippingBytesRequestConverter" -> "java.lang.CharSequence (java.base)";
   "zipkin2.server.internal.UnzippingBytesRequestConverter" -> "java.lang.IllegalArgumentException (java.base)";
   "zipkin2.server.internal.UnzippingBytesRequestConverter" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.UnzippingBytesRequestConverter" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.UnzippingBytesRequestConverter" -> "zipkin2.collector.CollectorMetrics (not found)";
   "zipkin2.server.internal.UnzippingBytesRequestConverter" -> "zipkin2.server.internal.ZipkinHttpCollector (zipkin.jar)";
   "zipkin2.server.internal.WrappingExecutorService"  -> "java.lang.InterruptedException (java.base)";
   "zipkin2.server.internal.WrappingExecutorService"  -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.WrappingExecutorService"  -> "java.lang.Runnable (java.base)";
   "zipkin2.server.internal.WrappingExecutorService"  -> "java.util.ArrayList (java.base)";
   "zipkin2.server.internal.WrappingExecutorService"  -> "java.util.Collection (java.base)";
   "zipkin2.server.internal.WrappingExecutorService"  -> "java.util.Iterator (java.base)";
   "zipkin2.server.internal.WrappingExecutorService"  -> "java.util.List (java.base)";
   "zipkin2.server.internal.WrappingExecutorService"  -> "java.util.concurrent.Callable (java.base)";
   "zipkin2.server.internal.WrappingExecutorService"  -> "java.util.concurrent.ExecutionException (java.base)";
   "zipkin2.server.internal.WrappingExecutorService"  -> "java.util.concurrent.ExecutorService (java.base)";
   "zipkin2.server.internal.WrappingExecutorService"  -> "java.util.concurrent.Future (java.base)";
   "zipkin2.server.internal.WrappingExecutorService"  -> "java.util.concurrent.TimeUnit (java.base)";
   "zipkin2.server.internal.WrappingExecutorService"  -> "java.util.concurrent.TimeoutException (java.base)";
   "zipkin2.server.internal.ZipkinActuatorImporter"   -> "java.lang.Class (java.base)";
   "zipkin2.server.internal.ZipkinActuatorImporter"   -> "java.lang.Exception (java.base)";
   "zipkin2.server.internal.ZipkinActuatorImporter"   -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.ZipkinActuatorImporter"   -> "java.lang.String (java.base)";
   "zipkin2.server.internal.ZipkinActuatorImporter"   -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.ZipkinActuatorImporter"   -> "java.lang.Throwable (java.base)";
   "zipkin2.server.internal.ZipkinActuatorImporter"   -> "java.util.Arrays (java.base)";
   "zipkin2.server.internal.ZipkinActuatorImporter"   -> "org.slf4j.Logger (not found)";
   "zipkin2.server.internal.ZipkinActuatorImporter"   -> "org.slf4j.LoggerFactory (not found)";
   "zipkin2.server.internal.ZipkinActuatorImporter"   -> "org.springframework.beans.factory.config.BeanDefinitionCustomizer (not found)";
   "zipkin2.server.internal.ZipkinActuatorImporter"   -> "org.springframework.boot.context.properties.bind.BindResult (not found)";
   "zipkin2.server.internal.ZipkinActuatorImporter"   -> "org.springframework.boot.context.properties.bind.Binder (not found)";
   "zipkin2.server.internal.ZipkinActuatorImporter"   -> "org.springframework.context.ApplicationContextInitializer (not found)";
   "zipkin2.server.internal.ZipkinActuatorImporter"   -> "org.springframework.context.ConfigurableApplicationContext (not found)";
   "zipkin2.server.internal.ZipkinActuatorImporter"   -> "org.springframework.context.support.GenericApplicationContext (not found)";
   "zipkin2.server.internal.ZipkinActuatorImporter"   -> "org.springframework.core.env.ConfigurableEnvironment (not found)";
   "zipkin2.server.internal.ZipkinActuatorImporter"   -> "org.springframework.core.env.Environment (not found)";
   "zipkin2.server.internal.ZipkinConfiguration"      -> "io.micrometer.core.instrument.MeterRegistry (not found)";
   "zipkin2.server.internal.ZipkinConfiguration"      -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.ZipkinConfiguration"      -> "org.springframework.beans.factory.annotation.Value (not found)";
   "zipkin2.server.internal.ZipkinConfiguration"      -> "org.springframework.context.annotation.Bean (not found)";
   "zipkin2.server.internal.ZipkinConfiguration"      -> "org.springframework.context.annotation.Import (not found)";
   "zipkin2.server.internal.ZipkinConfiguration"      -> "zipkin2.collector.CollectorMetrics (not found)";
   "zipkin2.server.internal.ZipkinConfiguration"      -> "zipkin2.collector.CollectorSampler (not found)";
   "zipkin2.server.internal.ZipkinConfiguration"      -> "zipkin2.server.internal.MicrometerCollectorMetrics (zipkin.jar)";
   "zipkin2.server.internal.ZipkinConfiguration"      -> "zipkin2.server.internal.ZipkinConfiguration$InMemoryConfiguration (zipkin.jar)";
   "zipkin2.server.internal.ZipkinConfiguration"      -> "zipkin2.server.internal.ZipkinConfiguration$StorageTypeMemAbsentOrEmpty (zipkin.jar)";
   "zipkin2.server.internal.ZipkinConfiguration"      -> "zipkin2.server.internal.ZipkinConfiguration$ThrottledStorageComponentEnhancer (zipkin.jar)";
   "zipkin2.server.internal.ZipkinConfiguration"      -> "zipkin2.server.internal.ZipkinConfiguration$TracingStorageComponentEnhancer (zipkin.jar)";
   "zipkin2.server.internal.ZipkinConfiguration$InMemoryConfiguration" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.ZipkinConfiguration$InMemoryConfiguration" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.ZipkinConfiguration$InMemoryConfiguration" -> "java.util.List (java.base)";
   "zipkin2.server.internal.ZipkinConfiguration$InMemoryConfiguration" -> "org.springframework.beans.factory.annotation.Value (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$InMemoryConfiguration" -> "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$InMemoryConfiguration" -> "org.springframework.context.annotation.Bean (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$InMemoryConfiguration" -> "org.springframework.context.annotation.Conditional (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$InMemoryConfiguration" -> "zipkin2.server.internal.ZipkinConfiguration (zipkin.jar)";
   "zipkin2.server.internal.ZipkinConfiguration$InMemoryConfiguration" -> "zipkin2.server.internal.ZipkinConfiguration$StorageTypeMemAbsentOrEmpty (zipkin.jar)";
   "zipkin2.server.internal.ZipkinConfiguration$InMemoryConfiguration" -> "zipkin2.storage.InMemoryStorage (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$InMemoryConfiguration" -> "zipkin2.storage.InMemoryStorage$Builder (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$InMemoryConfiguration" -> "zipkin2.storage.StorageComponent (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$StorageTypeMemAbsentOrEmpty" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.ZipkinConfiguration$StorageTypeMemAbsentOrEmpty" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.ZipkinConfiguration$StorageTypeMemAbsentOrEmpty" -> "org.springframework.context.annotation.Condition (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$StorageTypeMemAbsentOrEmpty" -> "org.springframework.context.annotation.ConditionContext (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$StorageTypeMemAbsentOrEmpty" -> "org.springframework.core.env.Environment (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$StorageTypeMemAbsentOrEmpty" -> "org.springframework.core.type.AnnotatedTypeMetadata (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$StorageTypeMemAbsentOrEmpty" -> "zipkin2.server.internal.ZipkinConfiguration (zipkin.jar)";
   "zipkin2.server.internal.ZipkinConfiguration$ThrottledStorageComponentEnhancer" -> "brave.Tracing (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$ThrottledStorageComponentEnhancer" -> "io.micrometer.core.instrument.MeterRegistry (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$ThrottledStorageComponentEnhancer" -> "java.lang.Class (java.base)";
   "zipkin2.server.internal.ZipkinConfiguration$ThrottledStorageComponentEnhancer" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.ZipkinConfiguration$ThrottledStorageComponentEnhancer" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.ZipkinConfiguration$ThrottledStorageComponentEnhancer" -> "org.springframework.beans.BeansException (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$ThrottledStorageComponentEnhancer" -> "org.springframework.beans.factory.BeanFactory (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$ThrottledStorageComponentEnhancer" -> "org.springframework.beans.factory.BeanFactoryAware (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$ThrottledStorageComponentEnhancer" -> "org.springframework.beans.factory.config.BeanPostProcessor (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$ThrottledStorageComponentEnhancer" -> "org.springframework.boot.context.properties.EnableConfigurationProperties (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$ThrottledStorageComponentEnhancer" -> "zipkin2.server.internal.ConditionalOnThrottledStorage (zipkin.jar)";
   "zipkin2.server.internal.ZipkinConfiguration$ThrottledStorageComponentEnhancer" -> "zipkin2.server.internal.ZipkinConfiguration (zipkin.jar)";
   "zipkin2.server.internal.ZipkinConfiguration$ThrottledStorageComponentEnhancer" -> "zipkin2.server.internal.throttle.ThrottledStorageComponent (zipkin.jar)";
   "zipkin2.server.internal.ZipkinConfiguration$ThrottledStorageComponentEnhancer" -> "zipkin2.server.internal.throttle.ZipkinStorageThrottleProperties (zipkin.jar)";
   "zipkin2.server.internal.ZipkinConfiguration$ThrottledStorageComponentEnhancer" -> "zipkin2.storage.StorageComponent (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$TracingStorageComponentEnhancer" -> "brave.Tracing (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$TracingStorageComponentEnhancer" -> "java.lang.Class (java.base)";
   "zipkin2.server.internal.ZipkinConfiguration$TracingStorageComponentEnhancer" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.ZipkinConfiguration$TracingStorageComponentEnhancer" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.ZipkinConfiguration$TracingStorageComponentEnhancer" -> "org.springframework.beans.BeansException (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$TracingStorageComponentEnhancer" -> "org.springframework.beans.factory.BeanFactory (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$TracingStorageComponentEnhancer" -> "org.springframework.beans.factory.BeanFactoryAware (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$TracingStorageComponentEnhancer" -> "org.springframework.beans.factory.config.BeanPostProcessor (not found)";
   "zipkin2.server.internal.ZipkinConfiguration$TracingStorageComponentEnhancer" -> "zipkin2.server.internal.ConditionalOnSelfTracing (zipkin.jar)";
   "zipkin2.server.internal.ZipkinConfiguration$TracingStorageComponentEnhancer" -> "zipkin2.server.internal.ZipkinConfiguration (zipkin.jar)";
   "zipkin2.server.internal.ZipkinConfiguration$TracingStorageComponentEnhancer" -> "zipkin2.server.internal.brave.TracingStorageComponent (zipkin.jar)";
   "zipkin2.server.internal.ZipkinConfiguration$TracingStorageComponentEnhancer" -> "zipkin2.storage.StorageComponent (not found)";
   "zipkin2.server.internal.ZipkinGrpcCollector"      -> "com.linecorp.armeria.server.HttpService (not found)";
   "zipkin2.server.internal.ZipkinGrpcCollector"      -> "com.linecorp.armeria.server.ServerBuilder (not found)";
   "zipkin2.server.internal.ZipkinGrpcCollector"      -> "com.linecorp.armeria.spring.ArmeriaServerConfigurator (not found)";
   "zipkin2.server.internal.ZipkinGrpcCollector"      -> "java.lang.Class (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector"      -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector"      -> "java.lang.String (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector"      -> "java.lang.invoke.CallSite (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector"      -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector"      -> "java.lang.invoke.MethodHandle (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector"      -> "java.lang.invoke.MethodHandles (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector"      -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector"      -> "java.lang.invoke.MethodType (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector"      -> "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty (not found)";
   "zipkin2.server.internal.ZipkinGrpcCollector"      -> "org.springframework.context.annotation.Bean (not found)";
   "zipkin2.server.internal.ZipkinGrpcCollector"      -> "zipkin2.collector.Collector (not found)";
   "zipkin2.server.internal.ZipkinGrpcCollector"      -> "zipkin2.collector.Collector$Builder (not found)";
   "zipkin2.server.internal.ZipkinGrpcCollector"      -> "zipkin2.collector.CollectorMetrics (not found)";
   "zipkin2.server.internal.ZipkinGrpcCollector"      -> "zipkin2.collector.CollectorSampler (not found)";
   "zipkin2.server.internal.ZipkinGrpcCollector"      -> "zipkin2.server.internal.ZipkinGrpcCollector$CompletableFutureCallback (zipkin.jar)";
   "zipkin2.server.internal.ZipkinGrpcCollector"      -> "zipkin2.server.internal.ZipkinGrpcCollector$SpanService (zipkin.jar)";
   "zipkin2.server.internal.ZipkinGrpcCollector"      -> "zipkin2.storage.StorageComponent (not found)";
   "zipkin2.server.internal.ZipkinGrpcCollector$CompletableFutureCallback" -> "io.netty.buffer.ByteBuf (not found)";
   "zipkin2.server.internal.ZipkinGrpcCollector$CompletableFutureCallback" -> "io.netty.buffer.Unpooled (not found)";
   "zipkin2.server.internal.ZipkinGrpcCollector$CompletableFutureCallback" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector$CompletableFutureCallback" -> "java.lang.Throwable (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector$CompletableFutureCallback" -> "java.lang.Void (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector$CompletableFutureCallback" -> "java.util.concurrent.CompletableFuture (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector$CompletableFutureCallback" -> "zipkin2.Callback (not found)";
   "zipkin2.server.internal.ZipkinGrpcCollector$CompletableFutureCallback" -> "zipkin2.server.internal.ZipkinGrpcCollector (zipkin.jar)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "com.linecorp.armeria.common.CommonPools (not found)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "com.linecorp.armeria.server.ServiceRequestContext (not found)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "com.linecorp.armeria.server.grpc.protocol.AbstractUnsafeUnaryGrpcService (not found)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "io.netty.buffer.ByteBuf (not found)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "java.lang.Throwable (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "java.lang.invoke.CallSite (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "java.lang.invoke.MethodHandle (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "java.lang.invoke.MethodHandles (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "java.lang.invoke.MethodType (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "java.nio.ByteBuffer (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "java.util.concurrent.CompletableFuture (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "java.util.concurrent.Executor (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "java.util.concurrent.ScheduledExecutorService (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "java.util.function.Function (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "java.util.function.Supplier (java.base)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "zipkin2.Callback (not found)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "zipkin2.codec.SpanBytesDecoder (not found)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "zipkin2.collector.Collector (not found)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "zipkin2.collector.CollectorMetrics (not found)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "zipkin2.server.internal.ZipkinGrpcCollector (zipkin.jar)";
   "zipkin2.server.internal.ZipkinGrpcCollector$SpanService" -> "zipkin2.server.internal.ZipkinGrpcCollector$CompletableFutureCallback (zipkin.jar)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "com.linecorp.armeria.common.AggregatedHttpRequest (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "com.linecorp.armeria.common.HttpData (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "com.linecorp.armeria.common.HttpHeaderNames (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "com.linecorp.armeria.common.HttpRequest (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "com.linecorp.armeria.common.HttpResponse (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "com.linecorp.armeria.common.RequestHeaders (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "com.linecorp.armeria.server.ServiceRequestContext (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "com.linecorp.armeria.server.annotation.ConsumesJson (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "com.linecorp.armeria.server.annotation.ExceptionHandler (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "com.linecorp.armeria.server.annotation.Post (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "io.netty.buffer.ByteBuf (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "io.netty.buffer.ByteBufAllocator (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "io.netty.buffer.ByteBufHolder (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "io.netty.channel.EventLoop (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "io.netty.util.AsciiString (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "io.netty.util.ReferenceCountUtil (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "io.netty.util.concurrent.EventExecutor (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "java.lang.CharSequence (java.base)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "java.lang.Class (java.base)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "java.lang.IllegalArgumentException (java.base)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "java.lang.String (java.base)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "java.lang.Throwable (java.base)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "java.lang.Void (java.base)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "java.lang.invoke.CallSite (java.base)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "java.lang.invoke.MethodHandle (java.base)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "java.lang.invoke.MethodHandles (java.base)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "java.lang.invoke.MethodType (java.base)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "java.net.InetAddress (java.base)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "java.nio.ByteBuffer (java.base)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "java.util.concurrent.CompletableFuture (java.base)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "java.util.concurrent.CompletionStage (java.base)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "java.util.concurrent.Executor (java.base)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "java.util.concurrent.ScheduledExecutorService (java.base)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "java.util.function.BiFunction (java.base)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "org.slf4j.Logger (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "org.slf4j.LoggerFactory (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "zipkin2.Call (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "zipkin2.Callback (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "zipkin2.Span (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "zipkin2.SpanBytesDecoderDetector (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "zipkin2.codec.BytesDecoder (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "zipkin2.codec.SpanBytesDecoder (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "zipkin2.collector.Collector (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "zipkin2.collector.Collector$Builder (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "zipkin2.collector.CollectorMetrics (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "zipkin2.collector.CollectorSampler (not found)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "zipkin2.server.internal.CompletableCallback (zipkin.jar)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "zipkin2.server.internal.ConsumesProtobuf (zipkin.jar)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "zipkin2.server.internal.ConsumesThrift (zipkin.jar)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "zipkin2.server.internal.UnzippingBytesRequestConverter (zipkin.jar)";
   "zipkin2.server.internal.ZipkinHttpCollector"      -> "zipkin2.storage.StorageComponent (not found)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "com.linecorp.armeria.common.HttpHeaderNames (not found)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "com.linecorp.armeria.common.HttpMethod (not found)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "com.linecorp.armeria.common.HttpRequest (not found)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "com.linecorp.armeria.common.HttpResponse (not found)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "com.linecorp.armeria.common.MediaType (not found)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "com.linecorp.armeria.server.HttpService (not found)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "com.linecorp.armeria.server.ServerBuilder (not found)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "com.linecorp.armeria.server.ServiceRequestContext (not found)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "com.linecorp.armeria.server.cors.CorsService (not found)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "com.linecorp.armeria.server.cors.CorsServiceBuilder (not found)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "com.linecorp.armeria.server.file.HttpFile (not found)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "com.linecorp.armeria.server.file.HttpFileBuilder (not found)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "com.linecorp.armeria.server.metric.PrometheusExpositionService (not found)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "com.linecorp.armeria.spring.ArmeriaServerConfigurator (not found)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "io.micrometer.core.instrument.MeterRegistry (not found)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "io.netty.util.AsciiString (not found)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "io.prometheus.client.CollectorRegistry (not found)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "java.lang.CharSequence (java.base)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "java.lang.Class (java.base)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "java.lang.ClassLoader (java.base)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "java.lang.Exception (java.base)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "java.lang.String (java.base)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "java.lang.invoke.CallSite (java.base)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "java.lang.invoke.MethodHandle (java.base)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "java.lang.invoke.MethodHandles (java.base)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "java.lang.invoke.MethodType (java.base)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "java.time.Duration (java.base)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "java.util.Objects (java.base)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "java.util.Optional (java.base)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "java.util.function.Consumer (java.base)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "java.util.function.Function (java.base)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "org.springframework.beans.factory.annotation.Value (not found)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "org.springframework.context.annotation.Bean (not found)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "org.springframework.context.annotation.Configuration (not found)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "org.springframework.core.annotation.Order (not found)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "zipkin2.server.internal.ZipkinHttpCollector (zipkin.jar)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "zipkin2.server.internal.ZipkinQueryApiV2 (zipkin.jar)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "zipkin2.server.internal.health.ZipkinHealthController (zipkin.jar)";
   "zipkin2.server.internal.ZipkinHttpConfiguration"  -> "zipkin2.server.internal.prometheus.ZipkinMetricsController (zipkin.jar)";
   "zipkin2.server.internal.ZipkinModuleImporter"     -> "java.lang.Class (java.base)";
   "zipkin2.server.internal.ZipkinModuleImporter"     -> "java.lang.Exception (java.base)";
   "zipkin2.server.internal.ZipkinModuleImporter"     -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.ZipkinModuleImporter"     -> "java.lang.String (java.base)";
   "zipkin2.server.internal.ZipkinModuleImporter"     -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.ZipkinModuleImporter"     -> "java.lang.Throwable (java.base)";
   "zipkin2.server.internal.ZipkinModuleImporter"     -> "java.util.Iterator (java.base)";
   "zipkin2.server.internal.ZipkinModuleImporter"     -> "java.util.Map (java.base)";
   "zipkin2.server.internal.ZipkinModuleImporter"     -> "java.util.Map$Entry (java.base)";
   "zipkin2.server.internal.ZipkinModuleImporter"     -> "java.util.Set (java.base)";
   "zipkin2.server.internal.ZipkinModuleImporter"     -> "org.slf4j.Logger (not found)";
   "zipkin2.server.internal.ZipkinModuleImporter"     -> "org.slf4j.LoggerFactory (not found)";
   "zipkin2.server.internal.ZipkinModuleImporter"     -> "org.springframework.beans.factory.config.BeanDefinitionCustomizer (not found)";
   "zipkin2.server.internal.ZipkinModuleImporter"     -> "org.springframework.boot.context.properties.bind.BindResult (not found)";
   "zipkin2.server.internal.ZipkinModuleImporter"     -> "org.springframework.boot.context.properties.bind.Binder (not found)";
   "zipkin2.server.internal.ZipkinModuleImporter"     -> "org.springframework.context.ApplicationContextInitializer (not found)";
   "zipkin2.server.internal.ZipkinModuleImporter"     -> "org.springframework.context.ConfigurableApplicationContext (not found)";
   "zipkin2.server.internal.ZipkinModuleImporter"     -> "org.springframework.context.support.GenericApplicationContext (not found)";
   "zipkin2.server.internal.ZipkinModuleImporter"     -> "org.springframework.core.env.ConfigurableEnvironment (not found)";
   "zipkin2.server.internal.ZipkinModuleImporter"     -> "org.springframework.core.env.Environment (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "com.fasterxml.jackson.core.JsonFactory (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "com.fasterxml.jackson.core.JsonGenerator (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "com.linecorp.armeria.common.AggregatedHttpResponse (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "com.linecorp.armeria.common.HttpData (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "com.linecorp.armeria.common.HttpHeaderNames (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "com.linecorp.armeria.common.HttpStatus (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "com.linecorp.armeria.common.MediaType (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "com.linecorp.armeria.common.ResponseHeaders (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "com.linecorp.armeria.common.ResponseHeadersBuilder (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "com.linecorp.armeria.server.ServiceRequestContext (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "com.linecorp.armeria.server.annotation.Blocking (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "com.linecorp.armeria.server.annotation.Default (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "com.linecorp.armeria.server.annotation.ExceptionHandler (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "com.linecorp.armeria.server.annotation.Get (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "com.linecorp.armeria.server.annotation.Param (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "io.netty.buffer.ByteBuf (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "io.netty.buffer.ByteBufAllocator (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "io.netty.buffer.ByteBufOutputStream (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "io.netty.util.AsciiString (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "java.io.IOException (java.base)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "java.io.OutputStream (java.base)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "java.io.UncheckedIOException (java.base)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "java.lang.CharSequence (java.base)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "java.lang.Iterable (java.base)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "java.lang.Long (java.base)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "java.lang.String (java.base)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "java.lang.System (java.base)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "java.lang.Throwable (java.base)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "java.util.Collections (java.base)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "java.util.Iterator (java.base)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "java.util.LinkedHashSet (java.base)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "java.util.List (java.base)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "java.util.Optional (java.base)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "java.util.Set (java.base)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "org.springframework.beans.factory.annotation.Value (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "zipkin2.Call (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "zipkin2.Span (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "zipkin2.codec.DependencyLinkBytesEncoder (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "zipkin2.codec.SpanBytesEncoder (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "zipkin2.server.internal.JsonUtil (zipkin.jar)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "zipkin2.storage.AutocompleteTags (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "zipkin2.storage.QueryRequest (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "zipkin2.storage.QueryRequest$Builder (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "zipkin2.storage.ServiceAndSpanNames (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "zipkin2.storage.SpanStore (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "zipkin2.storage.StorageComponent (not found)";
   "zipkin2.server.internal.ZipkinQueryApiV2"         -> "zipkin2.storage.Traces (not found)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorConfiguration" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorConfiguration" -> "org.springframework.boot.autoconfigure.condition.ConditionalOnClass (not found)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorConfiguration" -> "org.springframework.boot.context.properties.EnableConfigurationProperties (not found)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorConfiguration" -> "org.springframework.context.annotation.Bean (not found)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorConfiguration" -> "org.springframework.context.annotation.Conditional (not found)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorConfiguration" -> "zipkin2.collector.CollectorMetrics (not found)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorConfiguration" -> "zipkin2.collector.CollectorSampler (not found)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorConfiguration" -> "zipkin2.collector.activemq.ActiveMQCollector (not found)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorConfiguration" -> "zipkin2.collector.activemq.ActiveMQCollector$Builder (not found)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorConfiguration" -> "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorConfiguration$ActiveMQUrlSet (zipkin.jar)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorConfiguration" -> "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorProperties (zipkin.jar)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorConfiguration" -> "zipkin2.storage.StorageComponent (not found)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorConfiguration$ActiveMQUrlSet" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorConfiguration$ActiveMQUrlSet" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorConfiguration$ActiveMQUrlSet" -> "org.springframework.context.annotation.Condition (not found)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorConfiguration$ActiveMQUrlSet" -> "org.springframework.context.annotation.ConditionContext (not found)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorConfiguration$ActiveMQUrlSet" -> "org.springframework.core.env.Environment (not found)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorConfiguration$ActiveMQUrlSet" -> "org.springframework.core.type.AnnotatedTypeMetadata (not found)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorConfiguration$ActiveMQUrlSet" -> "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorConfiguration (zipkin.jar)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorProperties" -> "java.lang.Integer (java.base)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorProperties" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorProperties" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorProperties" -> "org.apache.activemq.ActiveMQConnectionFactory (not found)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorProperties" -> "org.springframework.boot.context.properties.ConfigurationProperties (not found)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorProperties" -> "zipkin2.collector.activemq.ActiveMQCollector (not found)";
   "zipkin2.server.internal.activemq.ZipkinActiveMQCollectorProperties" -> "zipkin2.collector.activemq.ActiveMQCollector$Builder (not found)";
   "zipkin2.server.internal.banner.ZipkinBanner"      -> "java.io.InputStream (java.base)";
   "zipkin2.server.internal.banner.ZipkinBanner"      -> "java.io.PrintStream (java.base)";
   "zipkin2.server.internal.banner.ZipkinBanner"      -> "java.lang.CharSequence (java.base)";
   "zipkin2.server.internal.banner.ZipkinBanner"      -> "java.lang.Class (java.base)";
   "zipkin2.server.internal.banner.ZipkinBanner"      -> "java.lang.Exception (java.base)";
   "zipkin2.server.internal.banner.ZipkinBanner"      -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.banner.ZipkinBanner"      -> "java.lang.String (java.base)";
   "zipkin2.server.internal.banner.ZipkinBanner"      -> "java.lang.Throwable (java.base)";
   "zipkin2.server.internal.banner.ZipkinBanner"      -> "java.nio.charset.Charset (java.base)";
   "zipkin2.server.internal.banner.ZipkinBanner"      -> "java.nio.charset.StandardCharsets (java.base)";
   "zipkin2.server.internal.banner.ZipkinBanner"      -> "org.springframework.boot.Banner (not found)";
   "zipkin2.server.internal.banner.ZipkinBanner"      -> "org.springframework.boot.ansi.AnsiElement (not found)";
   "zipkin2.server.internal.banner.ZipkinBanner"      -> "org.springframework.boot.ansi.AnsiOutput (not found)";
   "zipkin2.server.internal.banner.ZipkinBanner"      -> "org.springframework.boot.ansi.AnsiStyle (not found)";
   "zipkin2.server.internal.banner.ZipkinBanner"      -> "org.springframework.core.env.Environment (not found)";
   "zipkin2.server.internal.banner.ZipkinBanner"      -> "org.springframework.core.io.ClassPathResource (not found)";
   "zipkin2.server.internal.banner.ZipkinBanner"      -> "org.springframework.util.StreamUtils (not found)";
   "zipkin2.server.internal.banner.ZipkinBanner"      -> "zipkin2.server.internal.banner.ZipkinBanner$1 (zipkin.jar)";
   "zipkin2.server.internal.banner.ZipkinBanner$1"    -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.banner.ZipkinBanner$1"    -> "java.lang.String (java.base)";
   "zipkin2.server.internal.banner.ZipkinBanner$1"    -> "org.springframework.boot.ansi.AnsiElement (not found)";
   "zipkin2.server.internal.banner.ZipkinBanner$1"    -> "zipkin2.server.internal.banner.ZipkinBanner (zipkin.jar)";
   "zipkin2.server.internal.brave.SelfTracingProperties" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.brave.SelfTracingProperties" -> "java.time.Duration (java.base)";
   "zipkin2.server.internal.brave.SelfTracingProperties" -> "org.springframework.boot.context.properties.ConfigurationProperties (not found)";
   "zipkin2.server.internal.brave.SelfTracingProperties" -> "org.springframework.boot.convert.DurationUnit (not found)";
   "zipkin2.server.internal.brave.TracedCall"         -> "brave.ScopedSpan (not found)";
   "zipkin2.server.internal.brave.TracedCall"         -> "brave.Span (not found)";
   "zipkin2.server.internal.brave.TracedCall"         -> "brave.Tracer (not found)";
   "zipkin2.server.internal.brave.TracedCall"         -> "java.io.IOException (java.base)";
   "zipkin2.server.internal.brave.TracedCall"         -> "java.lang.CloneNotSupportedException (java.base)";
   "zipkin2.server.internal.brave.TracedCall"         -> "java.lang.Error (java.base)";
   "zipkin2.server.internal.brave.TracedCall"         -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.brave.TracedCall"         -> "java.lang.RuntimeException (java.base)";
   "zipkin2.server.internal.brave.TracedCall"         -> "java.lang.String (java.base)";
   "zipkin2.server.internal.brave.TracedCall"         -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.brave.TracedCall"         -> "java.lang.Throwable (java.base)";
   "zipkin2.server.internal.brave.TracedCall"         -> "zipkin2.Call (not found)";
   "zipkin2.server.internal.brave.TracedCall"         -> "zipkin2.Callback (not found)";
   "zipkin2.server.internal.brave.TracedCall"         -> "zipkin2.server.internal.brave.TracedCall$SpanFinishingCallback (zipkin.jar)";
   "zipkin2.server.internal.brave.TracedCall$SpanFinishingCallback" -> "brave.Span (not found)";
   "zipkin2.server.internal.brave.TracedCall$SpanFinishingCallback" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.brave.TracedCall$SpanFinishingCallback" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.brave.TracedCall$SpanFinishingCallback" -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.brave.TracedCall$SpanFinishingCallback" -> "java.lang.Throwable (java.base)";
   "zipkin2.server.internal.brave.TracedCall$SpanFinishingCallback" -> "zipkin2.Callback (not found)";
   "zipkin2.server.internal.brave.TracedCall$SpanFinishingCallback" -> "zipkin2.server.internal.brave.TracedCall (zipkin.jar)";
   "zipkin2.server.internal.brave.TracingStorageComponent" -> "brave.Tracing (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent" -> "java.io.IOException (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent" -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent" -> "zipkin2.CheckResult (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent" -> "zipkin2.server.internal.brave.TracingStorageComponent$TracingAutocompleteTags (zipkin.jar)";
   "zipkin2.server.internal.brave.TracingStorageComponent" -> "zipkin2.server.internal.brave.TracingStorageComponent$TracingServiceAndSpanNames (zipkin.jar)";
   "zipkin2.server.internal.brave.TracingStorageComponent" -> "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanConsumer (zipkin.jar)";
   "zipkin2.server.internal.brave.TracingStorageComponent" -> "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanStore (zipkin.jar)";
   "zipkin2.server.internal.brave.TracingStorageComponent" -> "zipkin2.server.internal.brave.TracingStorageComponent$TracingTraces (zipkin.jar)";
   "zipkin2.server.internal.brave.TracingStorageComponent" -> "zipkin2.storage.AutocompleteTags (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent" -> "zipkin2.storage.ForwardingStorageComponent (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent" -> "zipkin2.storage.ServiceAndSpanNames (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent" -> "zipkin2.storage.SpanConsumer (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent" -> "zipkin2.storage.SpanStore (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent" -> "zipkin2.storage.StorageComponent (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent" -> "zipkin2.storage.Traces (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingAutocompleteTags" -> "brave.Tracer (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingAutocompleteTags" -> "brave.Tracing (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingAutocompleteTags" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingAutocompleteTags" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingAutocompleteTags" -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingAutocompleteTags" -> "java.util.List (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingAutocompleteTags" -> "zipkin2.Call (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingAutocompleteTags" -> "zipkin2.server.internal.brave.TracedCall (zipkin.jar)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingAutocompleteTags" -> "zipkin2.server.internal.brave.TracingStorageComponent (zipkin.jar)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingAutocompleteTags" -> "zipkin2.storage.AutocompleteTags (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingServiceAndSpanNames" -> "brave.Tracer (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingServiceAndSpanNames" -> "brave.Tracing (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingServiceAndSpanNames" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingServiceAndSpanNames" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingServiceAndSpanNames" -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingServiceAndSpanNames" -> "java.util.List (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingServiceAndSpanNames" -> "zipkin2.Call (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingServiceAndSpanNames" -> "zipkin2.server.internal.brave.TracedCall (zipkin.jar)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingServiceAndSpanNames" -> "zipkin2.server.internal.brave.TracingStorageComponent (zipkin.jar)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingServiceAndSpanNames" -> "zipkin2.storage.ServiceAndSpanNames (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanConsumer" -> "brave.Tracer (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanConsumer" -> "brave.Tracing (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanConsumer" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanConsumer" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanConsumer" -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanConsumer" -> "java.lang.Void (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanConsumer" -> "java.util.List (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanConsumer" -> "zipkin2.Call (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanConsumer" -> "zipkin2.Span (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanConsumer" -> "zipkin2.server.internal.brave.TracedCall (zipkin.jar)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanConsumer" -> "zipkin2.server.internal.brave.TracingStorageComponent (zipkin.jar)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanConsumer" -> "zipkin2.storage.SpanConsumer (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanStore" -> "brave.Tracer (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanStore" -> "brave.Tracing (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanStore" -> "java.lang.Deprecated (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanStore" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanStore" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanStore" -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanStore" -> "java.util.List (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanStore" -> "zipkin2.Call (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanStore" -> "zipkin2.DependencyLink (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanStore" -> "zipkin2.Span (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanStore" -> "zipkin2.server.internal.brave.TracedCall (zipkin.jar)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanStore" -> "zipkin2.server.internal.brave.TracingStorageComponent (zipkin.jar)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanStore" -> "zipkin2.storage.QueryRequest (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingSpanStore" -> "zipkin2.storage.SpanStore (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingTraces" -> "brave.Tracer (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingTraces" -> "brave.Tracing (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingTraces" -> "java.lang.Iterable (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingTraces" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingTraces" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingTraces" -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingTraces" -> "java.util.List (java.base)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingTraces" -> "zipkin2.Call (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingTraces" -> "zipkin2.Span (not found)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingTraces" -> "zipkin2.server.internal.brave.TracedCall (zipkin.jar)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingTraces" -> "zipkin2.server.internal.brave.TracingStorageComponent (zipkin.jar)";
   "zipkin2.server.internal.brave.TracingStorageComponent$TracingTraces" -> "zipkin2.storage.Traces (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "brave.Tracer (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "brave.Tracing (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "brave.Tracing$Builder (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "brave.context.slf4j.MDCScopeDecorator (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "brave.http.HttpRequest (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "brave.http.HttpTracing (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "brave.http.HttpTracing$Builder (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "brave.propagation.B3SinglePropagation (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "brave.propagation.CurrentTraceContext (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "brave.propagation.CurrentTraceContext$Builder (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "brave.propagation.CurrentTraceContext$ScopeDecorator (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "brave.propagation.Propagation (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "brave.propagation.Propagation$Factory (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "brave.propagation.ThreadLocalSpan (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "brave.sampler.BoundarySampler (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "brave.sampler.RateLimitingSampler (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "brave.sampler.Sampler (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "brave.sampler.SamplerFunction (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "com.linecorp.armeria.common.brave.RequestContextCurrentTraceContext (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "com.linecorp.armeria.common.brave.RequestContextCurrentTraceContextBuilder (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "com.linecorp.armeria.server.ServerBuilder (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "com.linecorp.armeria.server.brave.BraveService (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "com.linecorp.armeria.spring.ArmeriaServerConfigurator (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "java.lang.Boolean (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "java.lang.Runnable (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "java.lang.Thread (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "java.lang.invoke.CallSite (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "java.lang.invoke.MethodHandle (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "java.lang.invoke.MethodHandles (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "java.lang.invoke.MethodType (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "java.time.Duration (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "java.util.concurrent.ThreadFactory (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "java.util.concurrent.TimeUnit (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "java.util.function.Function (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "org.springframework.beans.factory.BeanFactory (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "org.springframework.boot.context.properties.EnableConfigurationProperties (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "org.springframework.context.annotation.Bean (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "zipkin2.Span (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "zipkin2.reporter.AsyncReporter (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "zipkin2.reporter.AsyncReporter$Builder (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "zipkin2.reporter.Reporter (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "zipkin2.reporter.ReporterMetrics (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "zipkin2.reporter.Sender (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "zipkin2.server.internal.ConditionalOnSelfTracing (zipkin.jar)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "zipkin2.server.internal.brave.SelfTracingProperties (zipkin.jar)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$1 (zipkin.jar)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$LocalSender (zipkin.jar)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration" -> "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$ReporterMetricsAdapter (zipkin.jar)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$1" -> "com.linecorp.armeria.common.brave.RequestContextCurrentTraceContext (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$1" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$1" -> "java.lang.Runnable (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$1" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$1" -> "org.springframework.beans.factory.BeanFactory (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$1" -> "zipkin2.reporter.Reporter (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$1" -> "zipkin2.server.internal.brave.SelfTracingProperties (zipkin.jar)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$1" -> "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration (zipkin.jar)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$LocalSender" -> "java.lang.Class (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$LocalSender" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$LocalSender" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$LocalSender" -> "java.lang.Void (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$LocalSender" -> "java.util.ArrayList (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$LocalSender" -> "java.util.Iterator (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$LocalSender" -> "java.util.List (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$LocalSender" -> "org.springframework.beans.factory.BeanFactory (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$LocalSender" -> "zipkin2.Call (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$LocalSender" -> "zipkin2.CheckResult (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$LocalSender" -> "zipkin2.Span (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$LocalSender" -> "zipkin2.codec.Encoding (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$LocalSender" -> "zipkin2.codec.SpanBytesDecoder (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$LocalSender" -> "zipkin2.reporter.Sender (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$LocalSender" -> "zipkin2.server.internal.brave.TracingStorageComponent (zipkin.jar)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$LocalSender" -> "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration (zipkin.jar)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$LocalSender" -> "zipkin2.storage.SpanConsumer (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$LocalSender" -> "zipkin2.storage.StorageComponent (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$ReporterMetricsAdapter" -> "java.lang.Class (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$ReporterMetricsAdapter" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$ReporterMetricsAdapter" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$ReporterMetricsAdapter" -> "java.lang.Throwable (java.base)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$ReporterMetricsAdapter" -> "org.springframework.beans.factory.BeanFactory (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$ReporterMetricsAdapter" -> "zipkin2.collector.CollectorMetrics (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$ReporterMetricsAdapter" -> "zipkin2.reporter.ReporterMetrics (not found)";
   "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration$ReporterMetricsAdapter" -> "zipkin2.server.internal.brave.ZipkinSelfTracingConfiguration (zipkin.jar)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration" -> "java.util.List (java.base)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration" -> "org.springframework.beans.factory.annotation.Value (not found)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration" -> "org.springframework.boot.autoconfigure.condition.ConditionalOnClass (not found)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration" -> "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean (not found)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration" -> "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty (not found)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration" -> "org.springframework.boot.context.properties.EnableConfigurationProperties (not found)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration" -> "org.springframework.context.annotation.Bean (not found)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration" -> "org.springframework.context.annotation.Import (not found)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration" -> "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration$TracingSessionFactoryEnhancer (zipkin.jar)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration" -> "zipkin2.server.internal.cassandra.ZipkinCassandraStorageProperties (zipkin.jar)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration" -> "zipkin2.storage.StorageComponent (not found)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration" -> "zipkin2.storage.cassandra.v1.CassandraStorage (not found)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration" -> "zipkin2.storage.cassandra.v1.CassandraStorage$Builder (not found)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration" -> "zipkin2.storage.cassandra.v1.SessionFactory (not found)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration" -> "zipkin2.storage.cassandra.v1.SessionFactory$Default (not found)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration$TracingSessionFactoryEnhancer" -> "brave.Tracing (not found)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration$TracingSessionFactoryEnhancer" -> "brave.cassandra.driver.TracingSession (not found)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration$TracingSessionFactoryEnhancer" -> "com.datastax.driver.core.Session (not found)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration$TracingSessionFactoryEnhancer" -> "java.lang.Class (java.base)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration$TracingSessionFactoryEnhancer" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration$TracingSessionFactoryEnhancer" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration$TracingSessionFactoryEnhancer" -> "java.lang.invoke.CallSite (java.base)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration$TracingSessionFactoryEnhancer" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration$TracingSessionFactoryEnhancer" -> "java.lang.invoke.MethodHandle (java.base)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration$TracingSessionFactoryEnhancer" -> "java.lang.invoke.MethodHandles (java.base)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration$TracingSessionFactoryEnhancer" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration$TracingSessionFactoryEnhancer" -> "java.lang.invoke.MethodType (java.base)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration$TracingSessionFactoryEnhancer" -> "org.springframework.beans.BeansException (not found)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration$TracingSessionFactoryEnhancer" -> "org.springframework.beans.factory.BeanFactory (not found)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration$TracingSessionFactoryEnhancer" -> "org.springframework.beans.factory.BeanFactoryAware (not found)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration$TracingSessionFactoryEnhancer" -> "org.springframework.beans.factory.config.BeanPostProcessor (not found)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration$TracingSessionFactoryEnhancer" -> "zipkin2.server.internal.ConditionalOnSelfTracing (zipkin.jar)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration$TracingSessionFactoryEnhancer" -> "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration (zipkin.jar)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration$TracingSessionFactoryEnhancer" -> "zipkin2.storage.cassandra.v1.CassandraStorage (not found)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageConfiguration$TracingSessionFactoryEnhancer" -> "zipkin2.storage.cassandra.v1.SessionFactory (not found)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageProperties" -> "java.io.Serializable (java.base)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageProperties" -> "java.lang.Deprecated (java.base)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageProperties" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageProperties" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageProperties" -> "java.util.concurrent.TimeUnit (java.base)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageProperties" -> "org.springframework.boot.context.properties.ConfigurationProperties (not found)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageProperties" -> "zipkin2.storage.cassandra.v1.CassandraStorage (not found)";
   "zipkin2.server.internal.cassandra.ZipkinCassandraStorageProperties" -> "zipkin2.storage.cassandra.v1.CassandraStorage$Builder (not found)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration" -> "java.util.List (java.base)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration" -> "org.springframework.beans.factory.annotation.Value (not found)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration" -> "org.springframework.boot.autoconfigure.condition.ConditionalOnClass (not found)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration" -> "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean (not found)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration" -> "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty (not found)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration" -> "org.springframework.boot.context.properties.EnableConfigurationProperties (not found)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration" -> "org.springframework.context.annotation.Bean (not found)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration" -> "org.springframework.context.annotation.Import (not found)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration" -> "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration$TracingSessionFactoryEnhancer (zipkin.jar)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration" -> "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageProperties (zipkin.jar)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration" -> "zipkin2.storage.StorageComponent (not found)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration" -> "zipkin2.storage.cassandra.CassandraStorage (not found)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration" -> "zipkin2.storage.cassandra.CassandraStorage$Builder (not found)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration" -> "zipkin2.storage.cassandra.CassandraStorage$SessionFactory (not found)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration$TracingSessionFactoryEnhancer" -> "brave.Tracing (not found)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration$TracingSessionFactoryEnhancer" -> "brave.cassandra.driver.TracingSession (not found)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration$TracingSessionFactoryEnhancer" -> "com.datastax.driver.core.Session (not found)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration$TracingSessionFactoryEnhancer" -> "java.lang.Class (java.base)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration$TracingSessionFactoryEnhancer" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration$TracingSessionFactoryEnhancer" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration$TracingSessionFactoryEnhancer" -> "java.lang.invoke.CallSite (java.base)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration$TracingSessionFactoryEnhancer" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration$TracingSessionFactoryEnhancer" -> "java.lang.invoke.MethodHandle (java.base)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration$TracingSessionFactoryEnhancer" -> "java.lang.invoke.MethodHandles (java.base)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration$TracingSessionFactoryEnhancer" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration$TracingSessionFactoryEnhancer" -> "java.lang.invoke.MethodType (java.base)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration$TracingSessionFactoryEnhancer" -> "org.springframework.beans.BeansException (not found)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration$TracingSessionFactoryEnhancer" -> "org.springframework.beans.factory.BeanFactory (not found)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration$TracingSessionFactoryEnhancer" -> "org.springframework.beans.factory.BeanFactoryAware (not found)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration$TracingSessionFactoryEnhancer" -> "org.springframework.beans.factory.config.BeanPostProcessor (not found)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration$TracingSessionFactoryEnhancer" -> "zipkin2.server.internal.ConditionalOnSelfTracing (zipkin.jar)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration$TracingSessionFactoryEnhancer" -> "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration (zipkin.jar)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration$TracingSessionFactoryEnhancer" -> "zipkin2.storage.cassandra.CassandraStorage (not found)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageConfiguration$TracingSessionFactoryEnhancer" -> "zipkin2.storage.cassandra.CassandraStorage$SessionFactory (not found)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageProperties" -> "java.io.Serializable (java.base)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageProperties" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageProperties" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageProperties" -> "org.springframework.boot.context.properties.ConfigurationProperties (not found)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageProperties" -> "zipkin2.storage.cassandra.CassandraStorage (not found)";
   "zipkin2.server.internal.cassandra3.ZipkinCassandra3StorageProperties" -> "zipkin2.storage.cassandra.CassandraStorage$Builder (not found)";
   "zipkin2.server.internal.elasticsearch.BasicAuthInterceptor" -> "com.linecorp.armeria.client.Client (not found)";
   "zipkin2.server.internal.elasticsearch.BasicAuthInterceptor" -> "com.linecorp.armeria.client.ClientRequestContext (not found)";
   "zipkin2.server.internal.elasticsearch.BasicAuthInterceptor" -> "com.linecorp.armeria.client.HttpClient (not found)";
   "zipkin2.server.internal.elasticsearch.BasicAuthInterceptor" -> "com.linecorp.armeria.client.SimpleDecoratingHttpClient (not found)";
   "zipkin2.server.internal.elasticsearch.BasicAuthInterceptor" -> "com.linecorp.armeria.common.HttpHeaderNames (not found)";
   "zipkin2.server.internal.elasticsearch.BasicAuthInterceptor" -> "com.linecorp.armeria.common.HttpRequest (not found)";
   "zipkin2.server.internal.elasticsearch.BasicAuthInterceptor" -> "com.linecorp.armeria.common.HttpResponse (not found)";
   "zipkin2.server.internal.elasticsearch.BasicAuthInterceptor" -> "com.linecorp.armeria.common.Request (not found)";
   "zipkin2.server.internal.elasticsearch.BasicAuthInterceptor" -> "com.linecorp.armeria.common.Response (not found)";
   "zipkin2.server.internal.elasticsearch.BasicAuthInterceptor" -> "com.linecorp.armeria.common.util.Unwrappable (not found)";
   "zipkin2.server.internal.elasticsearch.BasicAuthInterceptor" -> "io.netty.util.AsciiString (not found)";
   "zipkin2.server.internal.elasticsearch.BasicAuthInterceptor" -> "java.lang.CharSequence (java.base)";
   "zipkin2.server.internal.elasticsearch.BasicAuthInterceptor" -> "java.lang.Exception (java.base)";
   "zipkin2.server.internal.elasticsearch.BasicAuthInterceptor" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.elasticsearch.BasicAuthInterceptor" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.elasticsearch.BasicAuthInterceptor" -> "zipkin2.server.internal.elasticsearch.BasicCredentials (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.BasicCredentials" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.elasticsearch.BasicCredentials" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.elasticsearch.BasicCredentials" -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.elasticsearch.BasicCredentials" -> "java.nio.charset.Charset (java.base)";
   "zipkin2.server.internal.elasticsearch.BasicCredentials" -> "java.nio.charset.StandardCharsets (java.base)";
   "zipkin2.server.internal.elasticsearch.BasicCredentials" -> "java.util.Base64 (java.base)";
   "zipkin2.server.internal.elasticsearch.BasicCredentials" -> "java.util.Base64$Encoder (java.base)";
   "zipkin2.server.internal.elasticsearch.BasicCredentials" -> "zipkin2.internal.Nullable (not found)";
   "zipkin2.server.internal.elasticsearch.DynamicCredentialsFileLoader" -> "java.io.FileInputStream (java.base)";
   "zipkin2.server.internal.elasticsearch.DynamicCredentialsFileLoader" -> "java.io.IOException (java.base)";
   "zipkin2.server.internal.elasticsearch.DynamicCredentialsFileLoader" -> "java.io.InputStream (java.base)";
   "zipkin2.server.internal.elasticsearch.DynamicCredentialsFileLoader" -> "java.lang.Class (java.base)";
   "zipkin2.server.internal.elasticsearch.DynamicCredentialsFileLoader" -> "java.lang.Exception (java.base)";
   "zipkin2.server.internal.elasticsearch.DynamicCredentialsFileLoader" -> "java.lang.IllegalStateException (java.base)";
   "zipkin2.server.internal.elasticsearch.DynamicCredentialsFileLoader" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.elasticsearch.DynamicCredentialsFileLoader" -> "java.lang.Runnable (java.base)";
   "zipkin2.server.internal.elasticsearch.DynamicCredentialsFileLoader" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.elasticsearch.DynamicCredentialsFileLoader" -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.elasticsearch.DynamicCredentialsFileLoader" -> "java.lang.Throwable (java.base)";
   "zipkin2.server.internal.elasticsearch.DynamicCredentialsFileLoader" -> "java.util.Properties (java.base)";
   "zipkin2.server.internal.elasticsearch.DynamicCredentialsFileLoader" -> "org.slf4j.Logger (not found)";
   "zipkin2.server.internal.elasticsearch.DynamicCredentialsFileLoader" -> "org.slf4j.LoggerFactory (not found)";
   "zipkin2.server.internal.elasticsearch.DynamicCredentialsFileLoader" -> "zipkin2.internal.Nullable (not found)";
   "zipkin2.server.internal.elasticsearch.DynamicCredentialsFileLoader" -> "zipkin2.server.internal.elasticsearch.BasicCredentials (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.DynamicCredentialsFileLoader" -> "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "com.linecorp.armeria.client.ClientFactory (not found)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "com.linecorp.armeria.client.ClientOptions (not found)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "com.linecorp.armeria.client.ClientOptionsBuilder (not found)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "com.linecorp.armeria.client.WebClient (not found)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "com.linecorp.armeria.client.WebClientBuilder (not found)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "com.linecorp.armeria.client.encoding.DecodingClient (not found)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "com.linecorp.armeria.client.endpoint.EndpointGroup (not found)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "com.linecorp.armeria.client.logging.ContentPreviewingClient (not found)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "com.linecorp.armeria.client.logging.LoggingClient (not found)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "com.linecorp.armeria.client.logging.LoggingClientBuilder (not found)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "com.linecorp.armeria.client.metric.MetricCollectingClient (not found)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "com.linecorp.armeria.common.HttpHeaderNames (not found)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "com.linecorp.armeria.common.HttpHeaders (not found)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "com.linecorp.armeria.common.HttpHeadersBuilder (not found)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "com.linecorp.armeria.common.SessionProtocol (not found)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "com.linecorp.armeria.common.logging.LogLevel (not found)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "com.linecorp.armeria.common.metric.MeterIdPrefixFunction (not found)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "io.netty.util.AsciiString (not found)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "java.io.Closeable (java.base)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "java.lang.CharSequence (java.base)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "java.lang.Integer (java.base)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "java.lang.invoke.CallSite (java.base)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "java.lang.invoke.MethodHandle (java.base)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "java.lang.invoke.MethodHandles (java.base)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "java.lang.invoke.MethodType (java.base)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "java.util.List (java.base)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "java.util.function.Consumer (java.base)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "java.util.function.Function (java.base)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "zipkin2.server.internal.elasticsearch.HttpClientFactory$1 (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory" -> "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties$HttpLogging (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory$1" -> "java.lang.NoSuchFieldError (java.base)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory$1" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory$1" -> "zipkin2.server.internal.elasticsearch.HttpClientFactory (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory$1" -> "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.HttpClientFactory$1" -> "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties$HttpLogging (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.InitialEndpointSupplier" -> "com.linecorp.armeria.client.Endpoint (not found)";
   "zipkin2.server.internal.elasticsearch.InitialEndpointSupplier" -> "com.linecorp.armeria.client.endpoint.EndpointGroup (not found)";
   "zipkin2.server.internal.elasticsearch.InitialEndpointSupplier" -> "com.linecorp.armeria.client.endpoint.dns.DnsAddressEndpointGroup (not found)";
   "zipkin2.server.internal.elasticsearch.InitialEndpointSupplier" -> "com.linecorp.armeria.client.endpoint.dns.DnsAddressEndpointGroupBuilder (not found)";
   "zipkin2.server.internal.elasticsearch.InitialEndpointSupplier" -> "com.linecorp.armeria.common.SessionProtocol (not found)";
   "zipkin2.server.internal.elasticsearch.InitialEndpointSupplier" -> "java.lang.Class (java.base)";
   "zipkin2.server.internal.elasticsearch.InitialEndpointSupplier" -> "java.lang.Iterable (java.base)";
   "zipkin2.server.internal.elasticsearch.InitialEndpointSupplier" -> "java.lang.NullPointerException (java.base)";
   "zipkin2.server.internal.elasticsearch.InitialEndpointSupplier" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.elasticsearch.InitialEndpointSupplier" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.elasticsearch.InitialEndpointSupplier" -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.elasticsearch.InitialEndpointSupplier" -> "java.net.URI (java.base)";
   "zipkin2.server.internal.elasticsearch.InitialEndpointSupplier" -> "java.util.ArrayList (java.base)";
   "zipkin2.server.internal.elasticsearch.InitialEndpointSupplier" -> "java.util.List (java.base)";
   "zipkin2.server.internal.elasticsearch.InitialEndpointSupplier" -> "java.util.function.Supplier (java.base)";
   "zipkin2.server.internal.elasticsearch.InitialEndpointSupplier" -> "org.slf4j.Logger (not found)";
   "zipkin2.server.internal.elasticsearch.InitialEndpointSupplier" -> "org.slf4j.LoggerFactory (not found)";
   "zipkin2.server.internal.elasticsearch.InitialEndpointSupplier" -> "zipkin2.Endpoint (not found)";
   "zipkin2.server.internal.elasticsearch.InitialEndpointSupplier" -> "zipkin2.Endpoint$Builder (not found)";
   "zipkin2.server.internal.elasticsearch.InitialEndpointSupplier" -> "zipkin2.internal.Nullable (not found)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "com.linecorp.armeria.client.ClientFactory (not found)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "com.linecorp.armeria.client.ClientOptionsBuilder (not found)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "com.linecorp.armeria.client.ClientRequestContext (not found)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "com.linecorp.armeria.client.DecoratingHttpClientFunction (not found)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "com.linecorp.armeria.client.Endpoint (not found)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "com.linecorp.armeria.client.HttpClient (not found)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "com.linecorp.armeria.client.WebClient (not found)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "com.linecorp.armeria.client.endpoint.EndpointGroup (not found)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "com.linecorp.armeria.client.endpoint.healthcheck.HealthCheckedEndpointGroup (not found)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "com.linecorp.armeria.client.endpoint.healthcheck.HealthCheckedEndpointGroupBuilder (not found)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "com.linecorp.armeria.client.metric.MetricCollectingClient (not found)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "com.linecorp.armeria.common.HttpRequest (not found)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "com.linecorp.armeria.common.HttpResponse (not found)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "com.linecorp.armeria.common.SessionProtocol (not found)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "com.linecorp.armeria.common.logging.RequestLogBuilder (not found)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "com.linecorp.armeria.common.metric.MeterIdPrefixFunction (not found)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "io.micrometer.core.instrument.MeterRegistry (not found)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "io.micrometer.core.instrument.binder.MeterBinder (not found)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "java.lang.Exception (java.base)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "java.lang.IllegalStateException (java.base)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "java.lang.Integer (java.base)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "java.lang.Throwable (java.base)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "java.lang.invoke.CallSite (java.base)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "java.lang.invoke.MethodHandle (java.base)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "java.lang.invoke.MethodHandles (java.base)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "java.lang.invoke.MethodType (java.base)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "java.time.Duration (java.base)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "java.util.List (java.base)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "java.util.concurrent.CompletableFuture (java.base)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "java.util.concurrent.TimeUnit (java.base)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "java.util.function.Function (java.base)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "java.util.function.Supplier (java.base)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "zipkin2.elasticsearch.ElasticsearchStorage (not found)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "zipkin2.elasticsearch.ElasticsearchStorage$LazyHttpClient (not found)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "zipkin2.server.internal.elasticsearch.HttpClientFactory (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl" -> "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties$HealthCheck (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.SslUtil"    -> "java.io.InputStream (java.base)";
   "zipkin2.server.internal.elasticsearch.SslUtil"    -> "java.lang.Exception (java.base)";
   "zipkin2.server.internal.elasticsearch.SslUtil"    -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.elasticsearch.SslUtil"    -> "java.lang.String (java.base)";
   "zipkin2.server.internal.elasticsearch.SslUtil"    -> "java.net.URL (java.base)";
   "zipkin2.server.internal.elasticsearch.SslUtil"    -> "java.security.KeyStore (java.base)";
   "zipkin2.server.internal.elasticsearch.SslUtil"    -> "javax.net.ssl.KeyManagerFactory (java.base)";
   "zipkin2.server.internal.elasticsearch.SslUtil"    -> "javax.net.ssl.TrustManagerFactory (java.base)";
   "zipkin2.server.internal.elasticsearch.SslUtil"    -> "org.springframework.util.ResourceUtils (not found)";
   "zipkin2.server.internal.elasticsearch.SslUtil"    -> "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.SslUtil"    -> "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties$Ssl (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "brave.CurrentSpanCustomizer (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "brave.SpanCustomizer (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "brave.Tracing (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "brave.http.HttpTracing (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "com.google.common.util.concurrent.ThreadFactoryBuilder (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "com.linecorp.armeria.client.ClientFactory (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "com.linecorp.armeria.client.ClientFactoryBuilder (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "com.linecorp.armeria.client.ClientOptionsBuilder (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "com.linecorp.armeria.client.ClientRequestContext (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "com.linecorp.armeria.client.DecoratingHttpClientFunction (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "com.linecorp.armeria.client.HttpClient (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "com.linecorp.armeria.client.brave.BraveClient (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "com.linecorp.armeria.client.endpoint.EndpointGroup (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "com.linecorp.armeria.common.HttpRequest (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "com.linecorp.armeria.common.HttpResponse (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "com.linecorp.armeria.common.SessionProtocol (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "com.linecorp.armeria.common.logging.RequestLog (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "com.linecorp.armeria.common.logging.RequestLogAccess (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "com.linecorp.armeria.common.logging.RequestLogProperty (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "io.micrometer.core.instrument.MeterRegistry (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "io.netty.handler.ssl.SslContextBuilder (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "java.io.IOException (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "java.lang.CharSequence (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "java.lang.Exception (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "java.lang.Integer (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "java.lang.Runnable (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "java.lang.invoke.CallSite (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "java.lang.invoke.MethodHandle (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "java.lang.invoke.MethodHandles (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "java.lang.invoke.MethodType (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "java.util.List (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "java.util.Optional (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "java.util.concurrent.Executors (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "java.util.concurrent.ScheduledExecutorService (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "java.util.concurrent.ScheduledFuture (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "java.util.concurrent.ThreadFactory (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "java.util.concurrent.TimeUnit (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "java.util.function.Consumer (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "java.util.function.Function (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "java.util.function.Supplier (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "javax.net.ssl.KeyManagerFactory (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "javax.net.ssl.TrustManagerFactory (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "org.springframework.beans.factory.annotation.Qualifier (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "org.springframework.beans.factory.annotation.Value (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "org.springframework.boot.context.properties.EnableConfigurationProperties (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "org.springframework.context.annotation.Bean (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "org.springframework.context.annotation.Conditional (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "org.springframework.context.annotation.Configuration (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "zipkin2.elasticsearch.ElasticsearchStorage (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "zipkin2.elasticsearch.ElasticsearchStorage$Builder (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "zipkin2.elasticsearch.ElasticsearchStorage$LazyHttpClient (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "zipkin2.server.internal.ConditionalOnSelfTracing (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "zipkin2.server.internal.elasticsearch.BasicCredentials (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "zipkin2.server.internal.elasticsearch.DynamicCredentialsFileLoader (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "zipkin2.server.internal.elasticsearch.HttpClientFactory (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "zipkin2.server.internal.elasticsearch.InitialEndpointSupplier (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "zipkin2.server.internal.elasticsearch.LazyHttpClientImpl (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "zipkin2.server.internal.elasticsearch.SslUtil (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$1 (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$BasicAuthRequired (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$DynamicRefreshRequired (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties$Ssl (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration" -> "zipkin2.storage.StorageComponent (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$1" -> "com.linecorp.armeria.client.ClientOptionsBuilder (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$1" -> "com.linecorp.armeria.client.HttpClient (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$1" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$1" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$1" -> "java.lang.invoke.CallSite (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$1" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$1" -> "java.lang.invoke.MethodHandle (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$1" -> "java.lang.invoke.MethodHandles (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$1" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$1" -> "java.lang.invoke.MethodType (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$1" -> "java.util.function.Consumer (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$1" -> "java.util.function.Function (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$1" -> "zipkin2.server.internal.elasticsearch.BasicAuthInterceptor (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$1" -> "zipkin2.server.internal.elasticsearch.BasicCredentials (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$1" -> "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$BasicAuthRequired" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$BasicAuthRequired" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$BasicAuthRequired" -> "org.springframework.context.annotation.Condition (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$BasicAuthRequired" -> "org.springframework.context.annotation.ConditionContext (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$BasicAuthRequired" -> "org.springframework.core.env.Environment (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$BasicAuthRequired" -> "org.springframework.core.type.AnnotatedTypeMetadata (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$BasicAuthRequired" -> "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$DynamicRefreshRequired" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$DynamicRefreshRequired" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$DynamicRefreshRequired" -> "org.springframework.context.annotation.Condition (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$DynamicRefreshRequired" -> "org.springframework.context.annotation.ConditionContext (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$DynamicRefreshRequired" -> "org.springframework.core.env.Environment (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$DynamicRefreshRequired" -> "org.springframework.core.type.AnnotatedTypeMetadata (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration$DynamicRefreshRequired" -> "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageConfiguration (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties" -> "java.io.Serializable (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties" -> "java.lang.Boolean (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties" -> "java.lang.Class (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties" -> "java.lang.IllegalArgumentException (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties" -> "java.lang.Integer (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties" -> "java.util.logging.Logger (java.logging)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties" -> "org.springframework.boot.context.properties.ConfigurationProperties (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties" -> "zipkin2.elasticsearch.ElasticsearchStorage (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties" -> "zipkin2.elasticsearch.ElasticsearchStorage$Builder (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties" -> "zipkin2.elasticsearch.ElasticsearchStorage$LazyHttpClient (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties" -> "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties$HealthCheck (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties" -> "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties$HttpLogging (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties" -> "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties$Ssl (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties$HealthCheck" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties$HealthCheck" -> "java.time.Duration (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties$HealthCheck" -> "org.springframework.boot.convert.DurationUnit (not found)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties$HealthCheck" -> "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties$HttpLogging" -> "java.lang.Class (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties$HttpLogging" -> "java.lang.Enum (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties$HttpLogging" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties$HttpLogging" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties$HttpLogging" -> "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties (zipkin.jar)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties$Ssl" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties$Ssl" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties$Ssl" -> "java.lang.System (java.base)";
   "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties$Ssl" -> "zipkin2.server.internal.elasticsearch.ZipkinElasticsearchStorageProperties (zipkin.jar)";
   "zipkin2.server.internal.health.ComponentHealth"   -> "java.lang.Class (java.base)";
   "zipkin2.server.internal.health.ComponentHealth"   -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.health.ComponentHealth"   -> "java.lang.String (java.base)";
   "zipkin2.server.internal.health.ComponentHealth"   -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.health.ComponentHealth"   -> "java.lang.Throwable (java.base)";
   "zipkin2.server.internal.health.ComponentHealth"   -> "zipkin2.Call (not found)";
   "zipkin2.server.internal.health.ComponentHealth"   -> "zipkin2.CheckResult (not found)";
   "zipkin2.server.internal.health.ComponentHealth"   -> "zipkin2.Component (not found)";
   "zipkin2.server.internal.health.ComponentHealth"   -> "zipkin2.internal.Nullable (not found)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "com.fasterxml.jackson.core.JsonGenerator (not found)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "com.linecorp.armeria.common.HttpResponse (not found)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "com.linecorp.armeria.common.HttpStatus (not found)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "com.linecorp.armeria.common.MediaType (not found)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "com.linecorp.armeria.server.ServiceRequestContext (not found)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "com.linecorp.armeria.server.annotation.Get (not found)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.io.IOException (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.io.StringWriter (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.io.Writer (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.lang.Error (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.lang.Runnable (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.lang.Throwable (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.lang.Void (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.lang.invoke.CallSite (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.lang.invoke.MethodHandle (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.lang.invoke.MethodHandles (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.lang.invoke.MethodType (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.util.Iterator (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.util.List (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.util.concurrent.CompletableFuture (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.util.concurrent.Executor (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.util.concurrent.ScheduledExecutorService (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.util.function.BiFunction (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.util.function.Function (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.util.function.Supplier (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.util.stream.Collector (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.util.stream.Collectors (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "java.util.stream.Stream (java.base)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "zipkin2.Component (not found)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "zipkin2.server.internal.JsonUtil (zipkin.jar)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "zipkin2.server.internal.ZipkinHttpConfiguration (zipkin.jar)";
   "zipkin2.server.internal.health.ZipkinHealthController" -> "zipkin2.server.internal.health.ComponentHealth (zipkin.jar)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorConfiguration" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorConfiguration" -> "org.springframework.boot.autoconfigure.condition.ConditionalOnClass (not found)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorConfiguration" -> "org.springframework.boot.context.properties.EnableConfigurationProperties (not found)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorConfiguration" -> "org.springframework.context.annotation.Bean (not found)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorConfiguration" -> "org.springframework.context.annotation.Conditional (not found)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorConfiguration" -> "zipkin2.collector.CollectorMetrics (not found)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorConfiguration" -> "zipkin2.collector.CollectorSampler (not found)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorConfiguration" -> "zipkin2.collector.kafka.KafkaCollector (not found)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorConfiguration" -> "zipkin2.collector.kafka.KafkaCollector$Builder (not found)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorConfiguration" -> "zipkin2.server.internal.kafka.ZipkinKafkaCollectorConfiguration$KafkaBootstrapServersSet (zipkin.jar)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorConfiguration" -> "zipkin2.server.internal.kafka.ZipkinKafkaCollectorProperties (zipkin.jar)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorConfiguration" -> "zipkin2.storage.StorageComponent (not found)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorConfiguration$KafkaBootstrapServersSet" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorConfiguration$KafkaBootstrapServersSet" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorConfiguration$KafkaBootstrapServersSet" -> "org.springframework.context.annotation.Condition (not found)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorConfiguration$KafkaBootstrapServersSet" -> "org.springframework.context.annotation.ConditionContext (not found)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorConfiguration$KafkaBootstrapServersSet" -> "org.springframework.core.env.Environment (not found)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorConfiguration$KafkaBootstrapServersSet" -> "org.springframework.core.type.AnnotatedTypeMetadata (not found)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorConfiguration$KafkaBootstrapServersSet" -> "zipkin2.server.internal.kafka.ZipkinKafkaCollectorConfiguration (zipkin.jar)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorProperties" -> "java.lang.Integer (java.base)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorProperties" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorProperties" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorProperties" -> "java.util.LinkedHashMap (java.base)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorProperties" -> "java.util.Map (java.base)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorProperties" -> "org.springframework.boot.context.properties.ConfigurationProperties (not found)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorProperties" -> "zipkin2.collector.kafka.KafkaCollector (not found)";
   "zipkin2.server.internal.kafka.ZipkinKafkaCollectorProperties" -> "zipkin2.collector.kafka.KafkaCollector$Builder (not found)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageConfiguration" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageConfiguration" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageConfiguration" -> "java.util.List (java.base)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageConfiguration" -> "java.util.concurrent.Executor (java.base)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageConfiguration" -> "javax.sql.DataSource (java.sql)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageConfiguration" -> "org.jooq.ExecuteListenerProvider (not found)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageConfiguration" -> "org.springframework.beans.factory.annotation.Autowired (not found)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageConfiguration" -> "org.springframework.beans.factory.annotation.Value (not found)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageConfiguration" -> "org.springframework.boot.autoconfigure.condition.ConditionalOnClass (not found)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageConfiguration" -> "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean (not found)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageConfiguration" -> "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty (not found)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageConfiguration" -> "org.springframework.boot.context.properties.EnableConfigurationProperties (not found)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageConfiguration" -> "org.springframework.context.annotation.Bean (not found)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageConfiguration" -> "org.springframework.context.annotation.Import (not found)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageConfiguration" -> "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor (not found)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageConfiguration" -> "zipkin2.server.internal.mysql.ZipkinMySQLStorageProperties (zipkin.jar)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageConfiguration" -> "zipkin2.storage.StorageComponent (not found)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageConfiguration" -> "zipkin2.storage.mysql.v1.MySQLStorage (not found)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageConfiguration" -> "zipkin2.storage.mysql.v1.MySQLStorage$Builder (not found)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageProperties" -> "com.zaxxer.hikari.HikariDataSource (not found)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageProperties" -> "java.io.Serializable (java.base)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageProperties" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageProperties" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageProperties" -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageProperties" -> "javax.sql.DataSource (java.sql)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageProperties" -> "org.springframework.boot.context.properties.ConfigurationProperties (not found)";
   "zipkin2.server.internal.mysql.ZipkinMySQLStorageProperties" -> "org.springframework.util.StringUtils (not found)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration" -> "brave.Span (not found)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration" -> "brave.Span$Kind (not found)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration" -> "brave.propagation.CurrentTraceContext (not found)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration" -> "brave.propagation.ThreadLocalSpan (not found)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration" -> "brave.propagation.TraceContext (not found)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration" -> "java.lang.Throwable (java.base)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration" -> "java.sql.SQLException (java.sql)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration" -> "java.util.concurrent.Executor (java.base)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration" -> "org.jooq.ExecuteContext (not found)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration" -> "org.jooq.ExecuteListener (not found)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration" -> "org.jooq.ExecuteListenerProvider (not found)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration" -> "org.jooq.impl.DefaultExecuteListener (not found)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration" -> "org.jooq.impl.DefaultExecuteListenerProvider (not found)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration" -> "org.springframework.beans.factory.annotation.Autowired (not found)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration" -> "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty (not found)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration" -> "org.springframework.context.annotation.Bean (not found)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration" -> "zipkin2.server.internal.ConditionalOnSelfTracing (zipkin.jar)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration" -> "zipkin2.server.internal.mysql.ZipkinMySQLStorageConfiguration (zipkin.jar)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration" -> "zipkin2.server.internal.mysql.ZipkinMySQLStorageProperties (zipkin.jar)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration" -> "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration$1TracingCurrentRequestContextExecutor (zipkin.jar)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration$1TracingCurrentRequestContextExecutor" -> "brave.propagation.CurrentTraceContext (not found)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration$1TracingCurrentRequestContextExecutor" -> "com.linecorp.armeria.common.RequestContext (not found)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration$1TracingCurrentRequestContextExecutor" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration$1TracingCurrentRequestContextExecutor" -> "java.lang.Runnable (java.base)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration$1TracingCurrentRequestContextExecutor" -> "java.util.concurrent.Executor (java.base)";
   "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration$1TracingCurrentRequestContextExecutor" -> "zipkin2.server.internal.mysql.ZipkinSelfTracingMySQLStorageConfiguration (zipkin.jar)";
   "zipkin2.server.internal.prometheus.ZipkinMetricsController" -> "com.fasterxml.jackson.core.JsonGenerator (not found)";
   "zipkin2.server.internal.prometheus.ZipkinMetricsController" -> "com.linecorp.armeria.common.HttpResponse (not found)";
   "zipkin2.server.internal.prometheus.ZipkinMetricsController" -> "com.linecorp.armeria.common.HttpStatus (not found)";
   "zipkin2.server.internal.prometheus.ZipkinMetricsController" -> "com.linecorp.armeria.common.MediaType (not found)";
   "zipkin2.server.internal.prometheus.ZipkinMetricsController" -> "com.linecorp.armeria.server.annotation.Get (not found)";
   "zipkin2.server.internal.prometheus.ZipkinMetricsController" -> "io.micrometer.core.instrument.Counter (not found)";
   "zipkin2.server.internal.prometheus.ZipkinMetricsController" -> "io.micrometer.core.instrument.Gauge (not found)";
   "zipkin2.server.internal.prometheus.ZipkinMetricsController" -> "io.micrometer.core.instrument.Meter (not found)";
   "zipkin2.server.internal.prometheus.ZipkinMetricsController" -> "io.micrometer.core.instrument.Meter$Id (not found)";
   "zipkin2.server.internal.prometheus.ZipkinMetricsController" -> "io.micrometer.core.instrument.Meter$Type (not found)";
   "zipkin2.server.internal.prometheus.ZipkinMetricsController" -> "io.micrometer.core.instrument.MeterRegistry (not found)";
   "zipkin2.server.internal.prometheus.ZipkinMetricsController" -> "io.prometheus.client.CollectorRegistry (not found)";
   "zipkin2.server.internal.prometheus.ZipkinMetricsController" -> "java.io.IOException (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinMetricsController" -> "java.io.StringWriter (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinMetricsController" -> "java.io.Writer (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinMetricsController" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinMetricsController" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinMetricsController" -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinMetricsController" -> "java.util.Iterator (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinMetricsController" -> "java.util.List (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinMetricsController" -> "zipkin2.server.internal.JsonUtil (zipkin.jar)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "com.linecorp.armeria.common.HttpMethod (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "com.linecorp.armeria.common.HttpRequest (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "com.linecorp.armeria.common.HttpResponse (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "com.linecorp.armeria.common.HttpStatus (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "com.linecorp.armeria.common.RequestContext (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "com.linecorp.armeria.common.RequestHeaders (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "com.linecorp.armeria.common.ResponseHeaders (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "com.linecorp.armeria.common.logging.RequestLog (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "com.linecorp.armeria.common.logging.RequestLogAccess (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "com.linecorp.armeria.server.DecoratingServiceBindingBuilder (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "com.linecorp.armeria.server.HttpService (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "com.linecorp.armeria.server.Route (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "com.linecorp.armeria.server.RouteBuilder (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "com.linecorp.armeria.server.ServerBuilder (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "com.linecorp.armeria.server.ServiceRequestContext (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "com.linecorp.armeria.spring.ArmeriaServerConfigurator (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "io.micrometer.core.instrument.Clock (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "io.micrometer.core.instrument.MeterRegistry (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "io.micrometer.core.instrument.Tag (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "io.micrometer.core.instrument.Timer (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "io.micrometer.core.instrument.Timer$Builder (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "io.micrometer.core.instrument.binder.jvm.JvmGcMetrics (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "io.micrometer.core.instrument.binder.system.ProcessorMetrics (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "io.micrometer.prometheus.PrometheusConfig (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "io.micrometer.prometheus.PrometheusMeterRegistry (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "io.netty.util.AttributeKey (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "io.prometheus.client.CollectorRegistry (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "java.lang.Boolean (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "java.lang.Class (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "java.lang.Exception (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "java.lang.Integer (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "java.lang.Iterable (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "java.lang.invoke.CallSite (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "java.lang.invoke.MethodHandle (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "java.lang.invoke.MethodHandles (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "java.lang.invoke.MethodType (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "java.util.Arrays (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "java.util.List (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "java.util.concurrent.CompletableFuture (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "java.util.concurrent.TimeUnit (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "java.util.function.Consumer (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "java.util.function.Function (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "org.springframework.beans.factory.annotation.Value (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "org.springframework.context.annotation.Bean (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "org.springframework.context.annotation.Configuration (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "org.springframework.core.annotation.Order (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "org.springframework.util.StringUtils (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration" -> "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration$MetricCollectingService (zipkin.jar)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration$MetricCollectingService" -> "com.linecorp.armeria.common.HttpRequest (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration$MetricCollectingService" -> "com.linecorp.armeria.common.HttpResponse (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration$MetricCollectingService" -> "com.linecorp.armeria.common.Request (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration$MetricCollectingService" -> "com.linecorp.armeria.common.RequestContext (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration$MetricCollectingService" -> "com.linecorp.armeria.common.Response (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration$MetricCollectingService" -> "com.linecorp.armeria.common.util.Unwrappable (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration$MetricCollectingService" -> "com.linecorp.armeria.server.HttpService (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration$MetricCollectingService" -> "com.linecorp.armeria.server.Service (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration$MetricCollectingService" -> "com.linecorp.armeria.server.ServiceRequestContext (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration$MetricCollectingService" -> "com.linecorp.armeria.server.SimpleDecoratingHttpService (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration$MetricCollectingService" -> "io.micrometer.core.instrument.MeterRegistry (not found)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration$MetricCollectingService" -> "java.lang.Exception (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration$MetricCollectingService" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration$MetricCollectingService" -> "zipkin2.server.internal.prometheus.ZipkinPrometheusMetricsConfiguration (zipkin.jar)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration" -> "java.net.URISyntaxException (java.base)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration" -> "java.security.KeyManagementException (java.base)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration" -> "java.security.NoSuchAlgorithmException (java.base)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration" -> "org.springframework.boot.autoconfigure.condition.ConditionalOnClass (not found)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration" -> "org.springframework.boot.context.properties.EnableConfigurationProperties (not found)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration" -> "org.springframework.context.annotation.Bean (not found)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration" -> "org.springframework.context.annotation.Conditional (not found)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration" -> "zipkin2.collector.CollectorMetrics (not found)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration" -> "zipkin2.collector.CollectorSampler (not found)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration" -> "zipkin2.collector.rabbitmq.RabbitMQCollector (not found)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration" -> "zipkin2.collector.rabbitmq.RabbitMQCollector$Builder (not found)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration" -> "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration$RabbitMQAddressesOrUriSet (zipkin.jar)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration" -> "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorProperties (zipkin.jar)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration" -> "zipkin2.storage.StorageComponent (not found)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration$RabbitMQAddressesOrUriSet" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration$RabbitMQAddressesOrUriSet" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration$RabbitMQAddressesOrUriSet" -> "org.springframework.context.annotation.Condition (not found)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration$RabbitMQAddressesOrUriSet" -> "org.springframework.context.annotation.ConditionContext (not found)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration$RabbitMQAddressesOrUriSet" -> "org.springframework.core.env.Environment (not found)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration$RabbitMQAddressesOrUriSet" -> "org.springframework.core.type.AnnotatedTypeMetadata (not found)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration$RabbitMQAddressesOrUriSet" -> "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorConfiguration (zipkin.jar)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorProperties" -> "com.rabbitmq.client.ConnectionFactory (not found)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorProperties" -> "java.lang.Boolean (java.base)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorProperties" -> "java.lang.Integer (java.base)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorProperties" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorProperties" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorProperties" -> "java.net.URI (java.base)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorProperties" -> "java.net.URISyntaxException (java.base)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorProperties" -> "java.security.KeyManagementException (java.base)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorProperties" -> "java.security.NoSuchAlgorithmException (java.base)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorProperties" -> "java.util.List (java.base)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorProperties" -> "org.springframework.boot.context.properties.ConfigurationProperties (not found)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorProperties" -> "zipkin2.collector.rabbitmq.RabbitMQCollector (not found)";
   "zipkin2.server.internal.rabbitmq.ZipkinRabbitMQCollectorProperties" -> "zipkin2.collector.rabbitmq.RabbitMQCollector$Builder (not found)";
   "zipkin2.server.internal.scribe.ZipkinScribeCollectorConfiguration" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.scribe.ZipkinScribeCollectorConfiguration" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.scribe.ZipkinScribeCollectorConfiguration" -> "org.springframework.beans.factory.annotation.Value (not found)";
   "zipkin2.server.internal.scribe.ZipkinScribeCollectorConfiguration" -> "org.springframework.boot.autoconfigure.condition.ConditionalOnClass (not found)";
   "zipkin2.server.internal.scribe.ZipkinScribeCollectorConfiguration" -> "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty (not found)";
   "zipkin2.server.internal.scribe.ZipkinScribeCollectorConfiguration" -> "org.springframework.context.annotation.Bean (not found)";
   "zipkin2.server.internal.scribe.ZipkinScribeCollectorConfiguration" -> "zipkin2.collector.CollectorMetrics (not found)";
   "zipkin2.server.internal.scribe.ZipkinScribeCollectorConfiguration" -> "zipkin2.collector.CollectorSampler (not found)";
   "zipkin2.server.internal.scribe.ZipkinScribeCollectorConfiguration" -> "zipkin2.collector.scribe.ScribeCollector (not found)";
   "zipkin2.server.internal.scribe.ZipkinScribeCollectorConfiguration" -> "zipkin2.collector.scribe.ScribeCollector$Builder (not found)";
   "zipkin2.server.internal.scribe.ZipkinScribeCollectorConfiguration" -> "zipkin2.storage.StorageComponent (not found)";
   "zipkin2.server.internal.throttle.LimiterMetrics"  -> "io.micrometer.core.instrument.Counter (not found)";
   "zipkin2.server.internal.throttle.LimiterMetrics"  -> "io.micrometer.core.instrument.Counter$Builder (not found)";
   "zipkin2.server.internal.throttle.LimiterMetrics"  -> "io.micrometer.core.instrument.MeterRegistry (not found)";
   "zipkin2.server.internal.throttle.LimiterMetrics"  -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.throttle.LimiterMetrics"  -> "java.lang.String (java.base)";
   "zipkin2.server.internal.throttle.MicrometerThrottleMetrics" -> "com.netflix.concurrency.limits.limiter.AbstractLimiter (not found)";
   "zipkin2.server.internal.throttle.MicrometerThrottleMetrics" -> "io.micrometer.core.instrument.Gauge (not found)";
   "zipkin2.server.internal.throttle.MicrometerThrottleMetrics" -> "io.micrometer.core.instrument.Gauge$Builder (not found)";
   "zipkin2.server.internal.throttle.MicrometerThrottleMetrics" -> "io.micrometer.core.instrument.MeterRegistry (not found)";
   "zipkin2.server.internal.throttle.MicrometerThrottleMetrics" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.throttle.MicrometerThrottleMetrics" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.throttle.MicrometerThrottleMetrics" -> "java.lang.invoke.CallSite (java.base)";
   "zipkin2.server.internal.throttle.MicrometerThrottleMetrics" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "zipkin2.server.internal.throttle.MicrometerThrottleMetrics" -> "java.lang.invoke.MethodHandle (java.base)";
   "zipkin2.server.internal.throttle.MicrometerThrottleMetrics" -> "java.lang.invoke.MethodHandles (java.base)";
   "zipkin2.server.internal.throttle.MicrometerThrottleMetrics" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "zipkin2.server.internal.throttle.MicrometerThrottleMetrics" -> "java.lang.invoke.MethodType (java.base)";
   "zipkin2.server.internal.throttle.MicrometerThrottleMetrics" -> "java.util.Collection (java.base)";
   "zipkin2.server.internal.throttle.MicrometerThrottleMetrics" -> "java.util.Objects (java.base)";
   "zipkin2.server.internal.throttle.MicrometerThrottleMetrics" -> "java.util.concurrent.BlockingQueue (java.base)";
   "zipkin2.server.internal.throttle.MicrometerThrottleMetrics" -> "java.util.concurrent.ThreadPoolExecutor (java.base)";
   "zipkin2.server.internal.throttle.MicrometerThrottleMetrics" -> "java.util.function.Supplier (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "com.linecorp.armeria.common.util.Exceptions (not found)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "com.netflix.concurrency.limits.Limiter (not found)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "com.netflix.concurrency.limits.Limiter$Listener (not found)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "io.micrometer.core.instrument.Counter (not found)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.io.IOException (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.io.InterruptedIOException (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.lang.CloneNotSupportedException (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.lang.Error (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.lang.InterruptedException (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.lang.Runnable (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.lang.RuntimeException (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.lang.String (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.lang.Thread (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.lang.Throwable (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.lang.Void (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.lang.invoke.CallSite (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.lang.invoke.MethodHandle (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.lang.invoke.MethodHandles (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.lang.invoke.MethodType (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.util.Optional (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.util.concurrent.CountDownLatch (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.util.concurrent.Executor (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.util.concurrent.RejectedExecutionException (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.util.function.Predicate (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "java.util.function.Supplier (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "zipkin2.Call (not found)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "zipkin2.Call$Base (not found)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "zipkin2.Callback (not found)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "zipkin2.server.internal.throttle.LimiterMetrics (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "zipkin2.server.internal.throttle.ThrottledCall$1 (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledCall"   -> "zipkin2.server.internal.throttle.ThrottledCall$EnqueueAndAwait (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledCall$1" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall$1" -> "java.lang.Throwable (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall$1" -> "java.lang.Void (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall$1" -> "zipkin2.Callback (not found)";
   "zipkin2.server.internal.throttle.ThrottledCall$1" -> "zipkin2.server.internal.throttle.ThrottledCall (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledCall$EnqueueAndAwait" -> "com.netflix.concurrency.limits.Limiter (not found)";
   "zipkin2.server.internal.throttle.ThrottledCall$EnqueueAndAwait" -> "com.netflix.concurrency.limits.Limiter$Listener (not found)";
   "zipkin2.server.internal.throttle.ThrottledCall$EnqueueAndAwait" -> "io.micrometer.core.instrument.Counter (not found)";
   "zipkin2.server.internal.throttle.ThrottledCall$EnqueueAndAwait" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall$EnqueueAndAwait" -> "java.lang.Runnable (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall$EnqueueAndAwait" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall$EnqueueAndAwait" -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall$EnqueueAndAwait" -> "java.lang.Throwable (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall$EnqueueAndAwait" -> "java.lang.Void (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall$EnqueueAndAwait" -> "java.util.concurrent.CountDownLatch (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall$EnqueueAndAwait" -> "java.util.function.Predicate (java.base)";
   "zipkin2.server.internal.throttle.ThrottledCall$EnqueueAndAwait" -> "zipkin2.Call (not found)";
   "zipkin2.server.internal.throttle.ThrottledCall$EnqueueAndAwait" -> "zipkin2.Callback (not found)";
   "zipkin2.server.internal.throttle.ThrottledCall$EnqueueAndAwait" -> "zipkin2.server.internal.throttle.LimiterMetrics (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledCall$EnqueueAndAwait" -> "zipkin2.server.internal.throttle.ThrottledCall (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "brave.Tracer (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "brave.Tracing (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "brave.propagation.CurrentTraceContext (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "com.linecorp.armeria.common.util.Exceptions (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "com.netflix.concurrency.limits.Limit (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "com.netflix.concurrency.limits.limit.Gradient2Limit (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "com.netflix.concurrency.limits.limit.Gradient2Limit$Builder (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "com.netflix.concurrency.limits.limiter.AbstractLimiter (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "com.netflix.concurrency.limits.limiter.AbstractLimiter$Builder (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "io.micrometer.core.instrument.MeterRegistry (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.io.IOException (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.lang.IllegalArgumentException (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.lang.Runnable (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.lang.Throwable (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.lang.Void (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.lang.invoke.CallSite (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.lang.invoke.MethodHandle (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.lang.invoke.MethodHandles (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.lang.invoke.MethodType (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.util.List (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.util.Objects (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.util.concurrent.BlockingQueue (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.util.concurrent.LinkedBlockingQueue (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.util.concurrent.RejectedExecutionException (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.util.concurrent.RejectedExecutionHandler (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.util.concurrent.ThreadFactory (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.util.concurrent.ThreadPoolExecutor (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.util.concurrent.TimeUnit (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "java.util.function.Consumer (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "zipkin2.internal.Nullable (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "zipkin2.server.internal.throttle.LimiterMetrics (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "zipkin2.server.internal.throttle.MicrometerThrottleMetrics (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "zipkin2.server.internal.throttle.ThrottledStorageComponent$1 (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "zipkin2.server.internal.throttle.ThrottledStorageComponent$Builder (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "zipkin2.server.internal.throttle.ThrottledStorageComponent$NonLimitingLimiter (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThreadPoolExecutorResizer (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "zipkin2.storage.ForwardingStorageComponent (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "zipkin2.storage.SpanConsumer (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent" -> "zipkin2.storage.StorageComponent (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$1" -> "brave.Tracing (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$1" -> "io.micrometer.core.instrument.MeterRegistry (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$1" -> "io.micrometer.core.instrument.util.NamedThreadFactory (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$1" -> "java.lang.Runnable (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$1" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$1" -> "java.lang.Thread (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$1" -> "zipkin2.server.internal.throttle.ThrottledStorageComponent (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$1" -> "zipkin2.server.internal.throttle.ThrottledStorageComponent$1$1 (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$1" -> "zipkin2.storage.StorageComponent (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$1$1" -> "com.linecorp.armeria.common.brave.RequestContextCurrentTraceContext (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$1$1" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$1$1" -> "java.lang.Runnable (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$1$1" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$1$1" -> "java.lang.Thread (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$1$1" -> "zipkin2.server.internal.throttle.ThrottledStorageComponent$1 (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$Builder" -> "com.netflix.concurrency.limits.limiter.AbstractLimiter (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$Builder" -> "com.netflix.concurrency.limits.limiter.AbstractLimiter$Builder (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$Builder" -> "zipkin2.server.internal.throttle.ThrottledStorageComponent (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$Builder" -> "zipkin2.server.internal.throttle.ThrottledStorageComponent$NonLimitingLimiter (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$NonLimitingLimiter" -> "com.netflix.concurrency.limits.Limiter (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$NonLimitingLimiter" -> "com.netflix.concurrency.limits.Limiter$Listener (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$NonLimitingLimiter" -> "com.netflix.concurrency.limits.limiter.AbstractLimiter (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$NonLimitingLimiter" -> "com.netflix.concurrency.limits.limiter.AbstractLimiter$Builder (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$NonLimitingLimiter" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$NonLimitingLimiter" -> "java.lang.Void (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$NonLimitingLimiter" -> "java.util.Optional (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$NonLimitingLimiter" -> "zipkin2.server.internal.throttle.ThrottledStorageComponent (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThreadPoolExecutorResizer" -> "java.lang.Integer (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThreadPoolExecutorResizer" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThreadPoolExecutorResizer" -> "java.util.concurrent.ThreadPoolExecutor (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThreadPoolExecutorResizer" -> "java.util.function.Consumer (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThreadPoolExecutorResizer" -> "zipkin2.server.internal.throttle.ThrottledStorageComponent (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "brave.Tracer (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "brave.propagation.CurrentTraceContext (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "com.netflix.concurrency.limits.Limiter (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "com.netflix.concurrency.limits.limiter.AbstractLimiter (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "java.lang.Throwable (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "java.lang.Void (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "java.lang.invoke.CallSite (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "java.lang.invoke.MethodHandle (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "java.lang.invoke.MethodHandles (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "java.lang.invoke.MethodType (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "java.util.List (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "java.util.Objects (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "java.util.concurrent.Executor (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "java.util.concurrent.ThreadPoolExecutor (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "java.util.function.Predicate (java.base)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "zipkin2.Call (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "zipkin2.Span (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "zipkin2.internal.Nullable (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "zipkin2.server.internal.brave.TracedCall (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "zipkin2.server.internal.throttle.LimiterMetrics (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "zipkin2.server.internal.throttle.ThrottledCall (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "zipkin2.server.internal.throttle.ThrottledStorageComponent (zipkin.jar)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "zipkin2.storage.ForwardingStorageComponent (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "zipkin2.storage.SpanConsumer (not found)";
   "zipkin2.server.internal.throttle.ThrottledStorageComponent$ThrottledSpanConsumer" -> "zipkin2.storage.StorageComponent (not found)";
   "zipkin2.server.internal.throttle.ZipkinStorageThrottleProperties" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.throttle.ZipkinStorageThrottleProperties" -> "org.springframework.boot.context.properties.ConfigurationProperties (not found)";
   "zipkin2.server.internal.ui.CompressionProperties" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.ui.CompressionProperties" -> "org.springframework.boot.context.properties.ConfigurationProperties (not found)";
   "zipkin2.server.internal.ui.CompressionProperties" -> "org.springframework.boot.web.server.Compression (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "com.fasterxml.jackson.core.JsonGenerator (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "com.linecorp.armeria.common.CacheControl (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "com.linecorp.armeria.common.HttpData (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "com.linecorp.armeria.common.HttpStatus (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "com.linecorp.armeria.common.MediaType (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "com.linecorp.armeria.common.ServerCacheControl (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "com.linecorp.armeria.common.ServerCacheControlBuilder (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "com.linecorp.armeria.server.HttpService (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "com.linecorp.armeria.server.RedirectService (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "com.linecorp.armeria.server.ServerBuilder (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "com.linecorp.armeria.server.file.FileService (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "com.linecorp.armeria.server.file.FileServiceBuilder (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "com.linecorp.armeria.server.file.HttpFile (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "com.linecorp.armeria.server.file.HttpFileBuilder (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "com.linecorp.armeria.spring.ArmeriaServerConfigurator (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "io.micrometer.core.instrument.Meter (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "io.micrometer.core.instrument.Meter$Id (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "io.micrometer.core.instrument.MeterRegistry (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "io.micrometer.core.instrument.MeterRegistry$Config (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "io.micrometer.core.instrument.config.MeterFilter (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "java.io.IOException (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "java.io.InputStream (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "java.io.StringWriter (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "java.io.Writer (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "java.lang.Class (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "java.lang.ClassLoader (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "java.lang.Exception (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "java.lang.String (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "java.lang.StringBuilder (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "java.lang.Throwable (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "java.lang.invoke.CallSite (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "java.lang.invoke.MethodHandle (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "java.lang.invoke.MethodHandles (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "java.lang.invoke.MethodType (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "java.nio.charset.Charset (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "java.nio.charset.StandardCharsets (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "java.util.Optional (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "java.util.concurrent.TimeUnit (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "java.util.function.Consumer (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "java.util.function.Predicate (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "org.springframework.beans.factory.BeanCreationException (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "org.springframework.beans.factory.annotation.Autowired (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "org.springframework.beans.factory.annotation.Value (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "org.springframework.boot.context.properties.EnableConfigurationProperties (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "org.springframework.context.annotation.Bean (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "org.springframework.core.io.Resource (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "org.springframework.util.StreamUtils (not found)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "zipkin2.server.internal.JsonUtil (zipkin.jar)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "zipkin2.server.internal.ui.ZipkinUiProperties (zipkin.jar)";
   "zipkin2.server.internal.ui.ZipkinUiConfiguration" -> "zipkin2.server.internal.ui.ZipkinUiProperties$Dependency (zipkin.jar)";
   "zipkin2.server.internal.ui.ZipkinUiProperties"    -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiProperties"    -> "java.lang.String (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiProperties"    -> "java.util.concurrent.TimeUnit (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiProperties"    -> "org.springframework.boot.context.properties.ConfigurationProperties (not found)";
   "zipkin2.server.internal.ui.ZipkinUiProperties"    -> "org.springframework.util.StringUtils (not found)";
   "zipkin2.server.internal.ui.ZipkinUiProperties"    -> "zipkin2.server.internal.ui.ZipkinUiProperties$Dependency (zipkin.jar)";
   "zipkin2.server.internal.ui.ZipkinUiProperties$Dependency" -> "java.lang.Object (java.base)";
   "zipkin2.server.internal.ui.ZipkinUiProperties$Dependency" -> "zipkin2.server.internal.ui.ZipkinUiProperties (zipkin.jar)";
}
