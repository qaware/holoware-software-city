digraph "distribution-1.1.0-SNAPSHOT.jar" {
    // Path: distribution-1.1.0-SNAPSHOT.jar
   "app.coronawarn.server.services.distribution.Application" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.Application" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.Application" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.Application" -> "java.lang.System (java.base)";
   "app.coronawarn.server.services.distribution.Application" -> "java.util.Arrays (java.base)";
   "app.coronawarn.server.services.distribution.Application" -> "java.util.List (java.base)";
   "app.coronawarn.server.services.distribution.Application" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.server.services.distribution.Application" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.server.services.distribution.Application" -> "org.springframework.boot.ExitCodeGenerator (not found)";
   "app.coronawarn.server.services.distribution.Application" -> "org.springframework.boot.SpringApplication (not found)";
   "app.coronawarn.server.services.distribution.Application" -> "org.springframework.boot.autoconfigure.SpringBootApplication (not found)";
   "app.coronawarn.server.services.distribution.Application" -> "org.springframework.boot.autoconfigure.domain.EntityScan (not found)";
   "app.coronawarn.server.services.distribution.Application" -> "org.springframework.boot.context.properties.EnableConfigurationProperties (not found)";
   "app.coronawarn.server.services.distribution.Application" -> "org.springframework.context.ApplicationContext (not found)";
   "app.coronawarn.server.services.distribution.Application" -> "org.springframework.context.ConfigurableApplicationContext (not found)";
   "app.coronawarn.server.services.distribution.Application" -> "org.springframework.context.EnvironmentAware (not found)";
   "app.coronawarn.server.services.distribution.Application" -> "org.springframework.context.annotation.ComponentScan (not found)";
   "app.coronawarn.server.services.distribution.Application" -> "org.springframework.core.env.Environment (not found)";
   "app.coronawarn.server.services.distribution.Application" -> "org.springframework.data.jpa.repository.config.EnableJpaRepositories (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.ApplicationConfigurationProvider" -> "app.coronawarn.server.common.protocols.internal.ApplicationConfiguration (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.ApplicationConfigurationProvider" -> "app.coronawarn.server.common.protocols.internal.ApplicationConfiguration$Builder (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.ApplicationConfigurationProvider" -> "com.google.protobuf.Message (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.ApplicationConfigurationProvider" -> "com.google.protobuf.Message$Builder (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.ApplicationConfigurationProvider" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.ApplicationConfigurationProvider" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.ApplicationConfigurationProvider" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.UnableToLoadFileException" -> "java.lang.Exception (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.UnableToLoadFileException" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.UnableToLoadFileException" -> "java.lang.Throwable (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.YamlLoader" -> "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.YamlLoader" -> "com.google.protobuf.Message (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.YamlLoader" -> "com.google.protobuf.Message$Builder (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.YamlLoader" -> "java.io.IOException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.YamlLoader" -> "java.io.InputStream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.YamlLoader" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.YamlLoader" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.YamlLoader" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.YamlLoader" -> "java.lang.Throwable (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.YamlLoader" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.YamlLoader" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.YamlLoader" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.YamlLoader" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.YamlLoader" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.YamlLoader" -> "org.springframework.core.io.ClassPathResource (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.YamlLoader" -> "org.springframework.core.io.Resource (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.YamlLoader" -> "org.yaml.snakeyaml.Yaml (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.YamlLoader" -> "org.yaml.snakeyaml.constructor.BaseConstructor (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.YamlLoader" -> "org.yaml.snakeyaml.error.YAMLException (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.YamlLoader" -> "org.yaml.snakeyaml.introspector.BeanAccess (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "app.coronawarn.server.services.distribution.assembly.appconfig.UnableToLoadFileException (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "app.coronawarn.server.services.distribution.assembly.appconfig.YamlLoader (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "com.google.protobuf.Message (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "com.google.protobuf.Message$Builder (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "java.lang.IllegalArgumentException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "java.nio.file.Path (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "java.util.Arrays (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "java.util.Objects (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "java.util.Optional (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "java.util.function.Predicate (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "java.util.function.Supplier (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "org.yaml.snakeyaml.constructor.AbstractConstruct (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "org.yaml.snakeyaml.nodes.Node (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeConstruct" -> "org.yaml.snakeyaml.nodes.ScalarNode (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeResolveFailedException" -> "app.coronawarn.server.services.distribution.assembly.appconfig.UnableToLoadFileException (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeResolveFailedException" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeResolveFailedException" -> "java.lang.RuntimeException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeResolveFailedException" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeResolveFailedException" -> "java.lang.Throwable (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeResolveFailedException" -> "org.yaml.snakeyaml.nodes.NodeId (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.IncludeResolveFailedException" -> "org.yaml.snakeyaml.nodes.ScalarNode (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.NoMessageBuilderOnClassException" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.NoMessageBuilderOnClassException" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.NoMessageBuilderOnClassException" -> "java.lang.RuntimeException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.NoMessageBuilderOnClassException" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.NoMessageBuilderOnClassException" -> "org.yaml.snakeyaml.nodes.Node (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf" -> "java.util.Map (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf" -> "org.yaml.snakeyaml.constructor.Constructor (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf" -> "org.yaml.snakeyaml.introspector.PropertyUtils (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf" -> "org.yaml.snakeyaml.nodes.Tag (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf$ProtoBufPropertyUtils" -> "java.lang.CharSequence (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf$ProtoBufPropertyUtils" -> "java.lang.Character (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf$ProtoBufPropertyUtils" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf$ProtoBufPropertyUtils" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf$ProtoBufPropertyUtils" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf$ProtoBufPropertyUtils" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf$ProtoBufPropertyUtils" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf$ProtoBufPropertyUtils" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf$ProtoBufPropertyUtils" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf$ProtoBufPropertyUtils" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf$ProtoBufPropertyUtils" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf$ProtoBufPropertyUtils" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf$ProtoBufPropertyUtils" -> "java.util.Arrays (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf$ProtoBufPropertyUtils" -> "java.util.function.BinaryOperator (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf$ProtoBufPropertyUtils" -> "java.util.function.Function (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf$ProtoBufPropertyUtils" -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf$ProtoBufPropertyUtils" -> "org.yaml.snakeyaml.introspector.BeanAccess (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf$ProtoBufPropertyUtils" -> "org.yaml.snakeyaml.introspector.Property (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.parsing.YamlConstructorForProtoBuf$ProtoBufPropertyUtils" -> "org.yaml.snakeyaml.introspector.PropertyUtils (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.archive.decorator.signing.AppConfigurationSigningDecorator" -> "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.archive.decorator.signing.AppConfigurationSigningDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.Writable (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.archive.decorator.signing.AppConfigurationSigningDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.archive.decorator.signing.AppConfigurationSigningDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.archive.Archive (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.archive.decorator.signing.AppConfigurationSigningDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.SigningDecoratorOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.archive.decorator.signing.AppConfigurationSigningDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.archive.decorator.signing.AppConfigurationSigningDecorator" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.archive.decorator.signing.AppConfigurationSigningDecorator" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.archive.decorator.signing.AppConfigurationSigningDecorator" -> "java.lang.RuntimeException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.archive.decorator.signing.AppConfigurationSigningDecorator" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.archive.decorator.signing.AppConfigurationSigningDecorator" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.archive.decorator.signing.AppConfigurationSigningDecorator" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.archive.decorator.signing.AppConfigurationSigningDecorator" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.archive.decorator.signing.AppConfigurationSigningDecorator" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.archive.decorator.signing.AppConfigurationSigningDecorator" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.archive.decorator.signing.AppConfigurationSigningDecorator" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.archive.decorator.signing.AppConfigurationSigningDecorator" -> "java.util.Optional (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.archive.decorator.signing.AppConfigurationSigningDecorator" -> "java.util.Set (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.archive.decorator.signing.AppConfigurationSigningDecorator" -> "java.util.function.Supplier (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.archive.decorator.signing.AppConfigurationSigningDecorator" -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "app.coronawarn.server.common.protocols.internal.ApplicationConfiguration (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "app.coronawarn.server.services.distribution.assembly.appconfig.ApplicationConfigurationProvider (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "app.coronawarn.server.services.distribution.assembly.appconfig.UnableToLoadFileException (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "app.coronawarn.server.services.distribution.assembly.appconfig.structure.archive.decorator.signing.AppConfigurationSigningDecorator (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ApplicationConfigurationValidator (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ConfigurationValidator (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationResult (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.Writable (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.archive.Archive (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.DirectoryOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectoryOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.Formatter (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.IndexFunction (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.WritableFunction (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$Api (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "com.google.protobuf.Message (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "java.lang.Throwable (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "java.util.Set (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ApplicationConfigurationValidator" -> "app.coronawarn.server.common.protocols.internal.ApplicationConfiguration (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ApplicationConfigurationValidator" -> "app.coronawarn.server.common.protocols.internal.ApplicationVersionConfiguration (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ApplicationConfigurationValidator" -> "app.coronawarn.server.common.protocols.internal.AttenuationDuration (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ApplicationConfigurationValidator" -> "app.coronawarn.server.common.protocols.internal.RiskScoreClassification (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ApplicationConfigurationValidator" -> "app.coronawarn.server.common.protocols.internal.RiskScoreParameters (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ApplicationConfigurationValidator" -> "java.lang.Integer (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ApplicationConfigurationValidator" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ApplicationConfigurationValidator" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ApplicationVersionConfigurationValidator" -> "app.coronawarn.server.common.protocols.internal.ApplicationVersionConfiguration (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ApplicationVersionConfigurationValidator" -> "app.coronawarn.server.common.protocols.internal.ApplicationVersionInfo (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ApplicationVersionConfigurationValidator" -> "app.coronawarn.server.common.protocols.internal.SemanticVersion (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ApplicationVersionConfigurationValidator" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ApplicationVersionConfigurationValidator" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ApplicationVersionConfigurationValidator" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ApplicationVersionConfigurationValidator" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ApplicationVersionConfigurationValidator" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ApplicationVersionConfigurationValidator" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ApplicationVersionConfigurationValidator" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ApplicationVersionConfigurationValidator$ComparisonResult" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ApplicationVersionConfigurationValidator$ComparisonResult" -> "java.lang.Enum (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ApplicationVersionConfigurationValidator$ComparisonResult" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ApplicationVersionConfigurationValidator$ComparisonResult" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.AttenuationDurationValidator" -> "app.coronawarn.server.common.protocols.internal.AttenuationDuration (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.AttenuationDurationValidator" -> "app.coronawarn.server.common.protocols.internal.Thresholds (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.AttenuationDurationValidator" -> "app.coronawarn.server.common.protocols.internal.Weights (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.AttenuationDurationValidator" -> "java.lang.Double (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.AttenuationDurationValidator" -> "java.lang.Integer (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.AttenuationDurationValidator" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.AttenuationDurationValidator" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.AttenuationDurationValidator" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.AttenuationDurationValidator" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.AttenuationDurationValidator" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.AttenuationDurationValidator" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.AttenuationDurationValidator" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.AttenuationDurationValidator" -> "java.math.BigDecimal (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ConfigurationValidator" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "app.coronawarn.server.common.protocols.internal.RiskLevel (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "app.coronawarn.server.common.protocols.internal.RiskScoreParameters (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "app.coronawarn.server.common.protocols.internal.RiskScoreParameters$AttenuationRiskParameters (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "app.coronawarn.server.common.protocols.internal.RiskScoreParameters$DaysSinceLastExposureRiskParameters (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "app.coronawarn.server.common.protocols.internal.RiskScoreParameters$DurationRiskParameters (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "app.coronawarn.server.common.protocols.internal.RiskScoreParameters$TransmissionRiskParameters (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.beans.BeanInfo (java.desktop)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.beans.IntrospectionException (java.desktop)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.beans.Introspector (java.desktop)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.beans.PropertyDescriptor (java.desktop)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.lang.Double (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.lang.IllegalAccessException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.lang.ReflectiveOperationException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.lang.Throwable (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.lang.reflect.InvocationTargetException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.lang.reflect.Method (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.math.BigDecimal (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.util.Arrays (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.util.function.Consumer (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.util.function.Predicate (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ExposureConfigurationValidator" -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ParameterSpec" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.RiskScoreClassificationValidator" -> "app.coronawarn.server.common.protocols.internal.RiskScoreClass (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.RiskScoreClassificationValidator" -> "app.coronawarn.server.common.protocols.internal.RiskScoreClassification (not found)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.RiskScoreClassificationValidator" -> "java.lang.Integer (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.RiskScoreClassificationValidator" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.RiskScoreClassificationValidator" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.RiskScoreClassificationValidator" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.RiskScoreClassificationValidator" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.RiskScoreClassificationValidator" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.RiskScoreClassificationValidator" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.RiskScoreClassificationValidator" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.RiskScoreClassificationValidator" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.RiskScoreClassificationValidator" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.RiskScoreClassificationValidator" -> "java.net.MalformedURLException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.RiskScoreClassificationValidator" -> "java.net.URL (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.RiskScoreClassificationValidator" -> "java.util.Iterator (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.RiskScoreClassificationValidator" -> "java.util.List (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.RiskScoreClassificationValidator" -> "java.util.function.ToIntFunction (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.RiskScoreClassificationValidator" -> "java.util.stream.IntStream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.RiskScoreClassificationValidator" -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.RiskScoreValidator" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationError" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationError" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationError" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationError" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationError" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationError" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationError" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationError" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationError" -> "java.util.Objects (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationError$ErrorType" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationError$ErrorType" -> "java.lang.Enum (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationError$ErrorType" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationError$ErrorType" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationExecutionException" -> "java.lang.RuntimeException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationExecutionException" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationExecutionException" -> "java.lang.Throwable (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationResult" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationResult" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationResult" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationResult" -> "java.util.Collection (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationResult" -> "java.util.HashSet (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationResult" -> "java.util.Objects (java.base)";
   "app.coronawarn.server.services.distribution.assembly.appconfig.validation.ValidationResult" -> "java.util.Set (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.AppConfigurationStructureProvider" -> "app.coronawarn.server.services.distribution.assembly.appconfig.structure.directory.AppConfigurationDirectory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.AppConfigurationStructureProvider" -> "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.AppConfigurationStructureProvider" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.Directory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.AppConfigurationStructureProvider" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.AppConfigurationStructureProvider" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.AppConfigurationStructureProvider" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$Paths (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "java.io.IOException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "java.io.InputStream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "java.io.InputStreamReader (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "java.io.Reader (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "java.io.UncheckedIOException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "java.lang.Throwable (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "java.security.KeyPair (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "java.security.PrivateKey (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "java.security.Provider (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "java.security.Security (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "org.bouncycastle.jce.provider.BouncyCastleProvider (not found)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "org.bouncycastle.openssl.PEMKeyPair (not found)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "org.bouncycastle.openssl.PEMParser (not found)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter (not found)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "org.springframework.core.io.Resource (not found)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "org.springframework.core.io.ResourceLoader (not found)";
   "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.server.services.distribution.assembly.component.CwaApiStructureProvider" -> "app.coronawarn.server.services.distribution.assembly.structure.Writable (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.CwaApiStructureProvider" -> "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.CwaApiStructureProvider" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.Directory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.CwaApiStructureProvider" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.CwaApiStructureProvider" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectoryOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.CwaApiStructureProvider" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.CwaApiStructureProvider" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.CwaApiStructureProvider" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.Formatter (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.CwaApiStructureProvider" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.IndexFunction (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.CwaApiStructureProvider" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.WritableFunction (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.CwaApiStructureProvider" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.CwaApiStructureProvider" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CwaApiStructureProvider" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CwaApiStructureProvider" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CwaApiStructureProvider" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CwaApiStructureProvider" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CwaApiStructureProvider" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CwaApiStructureProvider" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CwaApiStructureProvider" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CwaApiStructureProvider" -> "java.util.Set (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.CwaApiStructureProvider" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.server.services.distribution.assembly.component.DiagnosisKeysStructureProvider" -> "app.coronawarn.server.common.persistence.service.DiagnosisKeyService (not found)";
   "app.coronawarn.server.services.distribution.assembly.component.DiagnosisKeysStructureProvider" -> "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.DiagnosisKeysStructureProvider" -> "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDirectory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.DiagnosisKeysStructureProvider" -> "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.DiagnosisKeysStructureProvider" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.Directory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.DiagnosisKeysStructureProvider" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.DiagnosisKeysStructureProvider" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.DiagnosisKeysStructureProvider" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.DiagnosisKeysStructureProvider" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.DiagnosisKeysStructureProvider" -> "java.time.LocalDateTime (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.DiagnosisKeysStructureProvider" -> "java.time.ZoneId (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.DiagnosisKeysStructureProvider" -> "java.time.ZoneOffset (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.DiagnosisKeysStructureProvider" -> "java.time.temporal.ChronoUnit (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.DiagnosisKeysStructureProvider" -> "java.time.temporal.TemporalUnit (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.DiagnosisKeysStructureProvider" -> "java.util.Collection (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.DiagnosisKeysStructureProvider" -> "java.util.List (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.DiagnosisKeysStructureProvider" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.server.services.distribution.assembly.component.DiagnosisKeysStructureProvider" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.server.services.distribution.assembly.component.DiagnosisKeysStructureProvider" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.server.services.distribution.assembly.component.OutputDirectoryProvider" -> "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.OutputDirectoryProvider" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.Directory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.OutputDirectoryProvider" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.DirectoryOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.OutputDirectoryProvider" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.OutputDirectoryProvider" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$Paths (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.component.OutputDirectoryProvider" -> "java.io.File (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.OutputDirectoryProvider" -> "java.io.IOException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.OutputDirectoryProvider" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.OutputDirectoryProvider" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.OutputDirectoryProvider" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.component.OutputDirectoryProvider" -> "org.apache.commons.io.FileUtils (not found)";
   "app.coronawarn.server.services.distribution.assembly.component.OutputDirectoryProvider" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.server.services.distribution.assembly.component.OutputDirectoryProvider" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.server.services.distribution.assembly.component.OutputDirectoryProvider" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DemoDiagnosisKeyBundler" -> "app.coronawarn.server.common.persistence.domain.DiagnosisKey (not found)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DemoDiagnosisKeyBundler" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DemoDiagnosisKeyBundler" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DemoDiagnosisKeyBundler" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DemoDiagnosisKeyBundler" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DemoDiagnosisKeyBundler" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DemoDiagnosisKeyBundler" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DemoDiagnosisKeyBundler" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DemoDiagnosisKeyBundler" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DemoDiagnosisKeyBundler" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DemoDiagnosisKeyBundler" -> "java.time.LocalDateTime (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DemoDiagnosisKeyBundler" -> "java.util.Collection (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DemoDiagnosisKeyBundler" -> "java.util.Map (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DemoDiagnosisKeyBundler" -> "java.util.function.Function (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DemoDiagnosisKeyBundler" -> "java.util.stream.Collector (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DemoDiagnosisKeyBundler" -> "java.util.stream.Collectors (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DemoDiagnosisKeyBundler" -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DemoDiagnosisKeyBundler" -> "org.springframework.context.annotation.Profile (not found)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DemoDiagnosisKeyBundler" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "app.coronawarn.server.common.persistence.domain.DiagnosisKey (not found)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.lang.Integer (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.time.LocalDate (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.time.LocalDateTime (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.time.ZoneOffset (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.time.temporal.Temporal (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.util.Collection (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.util.Collections (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.util.HashMap (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.util.List (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.util.Map (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.util.Optional (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.util.Set (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.util.concurrent.TimeUnit (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.util.function.Function (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.util.function.Predicate (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.util.stream.Collector (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.util.stream.Collectors (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "app.coronawarn.server.common.persistence.domain.DiagnosisKey (not found)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.time.Duration (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.time.LocalDateTime (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.time.ZoneOffset (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.time.chrono.ChronoLocalDateTime (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.time.temporal.ChronoUnit (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.time.temporal.Temporal (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.time.temporal.TemporalUnit (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.util.ArrayList (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.util.Collection (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.util.Collections (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.util.Comparator (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.util.HashMap (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.util.List (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.util.Map (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.util.Optional (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.util.Set (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.util.function.Function (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.util.function.LongConsumer (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.util.stream.Collector (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.util.stream.Collectors (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.util.stream.LongStream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "org.springframework.context.annotation.Profile (not found)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.ProdDiagnosisKeyBundler" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.archive.decorator.signing.DiagnosisKeySigningDecorator" -> "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.archive.decorator.signing.DiagnosisKeySigningDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.Writable (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.archive.decorator.signing.DiagnosisKeySigningDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.archive.decorator.signing.DiagnosisKeySigningDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.archive.Archive (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.archive.decorator.signing.DiagnosisKeySigningDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.SigningDecoratorOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.archive.decorator.signing.DiagnosisKeySigningDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.file.File (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.archive.decorator.signing.DiagnosisKeySigningDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.archive.decorator.signing.DiagnosisKeySigningDecorator" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.archive.decorator.signing.DiagnosisKeySigningDecorator" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.archive.decorator.signing.DiagnosisKeySigningDecorator" -> "java.lang.RuntimeException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.archive.decorator.signing.DiagnosisKeySigningDecorator" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.archive.decorator.signing.DiagnosisKeySigningDecorator" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.archive.decorator.signing.DiagnosisKeySigningDecorator" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.archive.decorator.signing.DiagnosisKeySigningDecorator" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.archive.decorator.signing.DiagnosisKeySigningDecorator" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.archive.decorator.signing.DiagnosisKeySigningDecorator" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.archive.decorator.signing.DiagnosisKeySigningDecorator" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.archive.decorator.signing.DiagnosisKeySigningDecorator" -> "java.util.Optional (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.archive.decorator.signing.DiagnosisKeySigningDecorator" -> "java.util.Set (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.archive.decorator.signing.DiagnosisKeySigningDecorator" -> "java.util.function.Supplier (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.archive.decorator.signing.DiagnosisKeySigningDecorator" -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.Writable (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectoryOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.Formatter (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.IndexFunction (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.WritableFunction (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$Api (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "java.time.LocalDate (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysCountryDirectory" -> "java.util.Set (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.Writable (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.Directory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectoryOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.Formatter (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.IndexFunction (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.WritableFunction (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$Api (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "java.time.LocalDate (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "java.time.format.DateTimeFormatter (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "java.time.temporal.TemporalAccessor (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "java.util.Objects (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory" -> "java.util.Set (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDirectory" -> "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDirectory" -> "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.Writable (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.DirectoryOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectoryOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDirectory" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDirectory" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$Api (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDirectory" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDirectory" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.archive.decorator.signing.DiagnosisKeySigningDecorator (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.Writable (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.archive.Archive (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.Directory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectoryOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.Formatter (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.IndexFunction (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.WritableFunction (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$Api (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "java.time.LocalDate (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "java.time.LocalDateTime (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "java.time.ZoneOffset (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "java.util.Collection (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "java.util.List (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory" -> "java.util.Set (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "app.coronawarn.server.common.protocols.external.exposurenotification.TemporaryExposureKey (not found)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "app.coronawarn.server.common.protocols.external.exposurenotification.TemporaryExposureKeyExport (not found)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.archive.decorator.signing.DiagnosisKeySigningDecorator (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.Writable (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.archive.Archive (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.Directory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.DirectoryOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.IndexDirectoryDecorator (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.file.File (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedFunction (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.Formatter (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.time.LocalDate (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.util.Collection (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.util.List (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.util.NoSuchElementException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.util.Objects (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.util.Optional (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.util.OptionalLong (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.util.Set (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.util.function.Consumer (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.util.function.Function (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.util.function.Predicate (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.util.function.Supplier (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.util.function.ToLongFunction (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.util.stream.Collector (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.util.stream.Collectors (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.util.stream.LongStream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateAggregatingDecorator" -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator" -> "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysDateDirectory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator" -> "java.lang.Boolean (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator" -> "java.time.LocalDate (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator" -> "java.time.ZoneId (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator" -> "java.time.ZoneOffset (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator" -> "java.util.Objects (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator" -> "java.util.Set (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator" -> "java.util.function.Predicate (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator" -> "java.util.stream.Collector (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator" -> "java.util.stream.Collectors (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.DateIndexingDecorator" -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.DiagnosisKeysHourDirectory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "java.lang.Boolean (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "java.time.LocalDate (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "java.time.LocalDateTime (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "java.time.ZoneId (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "java.time.ZoneOffset (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "java.time.temporal.ChronoUnit (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "java.time.temporal.TemporalUnit (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "java.util.Objects (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "java.util.Set (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "java.util.function.Predicate (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "java.util.stream.Collector (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "java.util.stream.Collectors (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.directory.decorator.HourIndexingDecorator" -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyComparator" -> "app.coronawarn.server.common.protocols.external.exposurenotification.TemporaryExposureKey (not found)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyComparator" -> "com.google.protobuf.ByteString (not found)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyComparator" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyComparator" -> "java.util.Comparator (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "app.coronawarn.server.common.persistence.domain.DiagnosisKey (not found)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "app.coronawarn.server.common.protocols.external.exposurenotification.SignatureInfo (not found)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "app.coronawarn.server.common.protocols.external.exposurenotification.TemporaryExposureKey (not found)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "app.coronawarn.server.common.protocols.external.exposurenotification.TemporaryExposureKey$Builder (not found)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "app.coronawarn.server.common.protocols.external.exposurenotification.TemporaryExposureKeyExport (not found)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "app.coronawarn.server.common.protocols.external.exposurenotification.TemporaryExposureKeyExport$Builder (not found)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDiskWithChecksum (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$Signature (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$TekExport (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "com.google.protobuf.ByteString (not found)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "java.lang.IllegalArgumentException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "java.lang.Integer (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "java.lang.Iterable (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "java.lang.System (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "java.nio.charset.Charset (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "java.nio.charset.StandardCharsets (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "java.util.Arrays (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "java.util.Collection (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "java.util.Comparator (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "java.util.Set (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "java.util.function.Function (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "java.util.stream.Collector (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "java.util.stream.Collectors (java.base)";
   "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.structure.file.TemporaryExposureKeyExportFile" -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.io.IO" -> "java.io.File (java.base)";
   "app.coronawarn.server.services.distribution.assembly.io.IO" -> "java.io.FileOutputStream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.io.IO" -> "java.io.IOException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.io.IO" -> "java.io.UncheckedIOException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.io.IO" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.io.IO" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.io.IO" -> "java.lang.Throwable (java.base)";
   "app.coronawarn.server.services.distribution.assembly.io.IO" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.io.IO" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.io.IO" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.io.IO" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.io.IO" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.Writable" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.Directory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.Writable" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.Writable" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.Writable" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.archive.Archive (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.Directory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.file.File (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk" -> "java.io.File (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk" -> "java.nio.file.Path (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk" -> "java.util.Objects (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk" -> "java.util.function.Supplier (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.Archive" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.Directory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.Archive" -> "app.coronawarn.server.services.distribution.assembly.structure.file.File (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.Archive" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.Writable (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.Directory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.DirectoryOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.file.File (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDiskWithChecksum (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedConsumer (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.io.ByteArrayOutputStream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.io.File (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.io.IOException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.io.OutputStream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.io.UncheckedIOException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.lang.Exception (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.lang.Throwable (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.lang.UnsupportedOperationException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.nio.file.Files (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.nio.file.Path (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.nio.file.attribute.FileAttribute (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.util.Optional (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.util.Set (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.util.function.Consumer (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.util.function.Function (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.util.function.Predicate (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.util.zip.ZipEntry (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.ArchiveOnDisk" -> "java.util.zip.ZipOutputStream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.ArchiveDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.archive.Archive (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.ArchiveDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.Directory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.ArchiveDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.DirectoryDecorator (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.AbstractSigningDecorator" -> "app.coronawarn.server.common.protocols.external.exposurenotification.SignatureInfo (not found)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.AbstractSigningDecorator" -> "app.coronawarn.server.common.protocols.external.exposurenotification.TEKSignature (not found)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.AbstractSigningDecorator" -> "app.coronawarn.server.common.protocols.external.exposurenotification.TEKSignature$Builder (not found)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.AbstractSigningDecorator" -> "app.coronawarn.server.common.protocols.external.exposurenotification.TEKSignatureList (not found)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.AbstractSigningDecorator" -> "app.coronawarn.server.common.protocols.external.exposurenotification.TEKSignatureList$Builder (not found)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.AbstractSigningDecorator" -> "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.AbstractSigningDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.Writable (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.AbstractSigningDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.archive.Archive (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.AbstractSigningDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.ArchiveDecorator (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.AbstractSigningDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.file.File (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.AbstractSigningDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.AbstractSigningDecorator" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.AbstractSigningDecorator" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$Signature (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.AbstractSigningDecorator" -> "com.google.protobuf.ByteString (not found)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.AbstractSigningDecorator" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.AbstractSigningDecorator" -> "java.lang.RuntimeException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.AbstractSigningDecorator" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.AbstractSigningDecorator" -> "java.lang.Throwable (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.AbstractSigningDecorator" -> "java.security.GeneralSecurityException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.AbstractSigningDecorator" -> "java.security.PrivateKey (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.AbstractSigningDecorator" -> "java.security.Signature (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.SigningDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.archive.Archive (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.SigningDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.file.File (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.SigningDecorator" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.SigningDecorator" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.SigningDecoratorOnDisk" -> "app.coronawarn.server.common.protocols.external.exposurenotification.TEKSignatureList (not found)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.SigningDecoratorOnDisk" -> "app.coronawarn.server.services.distribution.assembly.component.CryptoProvider (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.SigningDecoratorOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.SigningDecoratorOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.archive.Archive (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.SigningDecoratorOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.file.File (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.SigningDecoratorOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.SigningDecoratorOnDisk" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.archive.decorator.signing.SigningDecoratorOnDisk" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.Directory" -> "app.coronawarn.server.services.distribution.assembly.structure.Writable (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.Directory" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.Directory" -> "java.util.Set (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.DirectoryOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.Writable (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.DirectoryOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.DirectoryOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.DirectoryOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedConsumer (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.DirectoryOnDisk" -> "java.io.File (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.DirectoryOnDisk" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.DirectoryOnDisk" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.DirectoryOnDisk" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.DirectoryOnDisk" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.DirectoryOnDisk" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.DirectoryOnDisk" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.DirectoryOnDisk" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.DirectoryOnDisk" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.DirectoryOnDisk" -> "java.util.HashSet (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.DirectoryOnDisk" -> "java.util.Set (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.DirectoryOnDisk" -> "java.util.function.Consumer (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.Formatter (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectory" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.WritableFunction (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectory" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectory" -> "java.util.Set (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectoryOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.Writable (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectoryOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectoryOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectoryOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.Formatter (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectoryOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.IndexFunction (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectoryOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.WritableFunction (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectoryOnDisk" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectoryOnDisk" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectoryOnDisk" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectoryOnDisk" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectoryOnDisk" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectoryOnDisk" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectoryOnDisk" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectoryOnDisk" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectoryOnDisk" -> "java.util.HashSet (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectoryOnDisk" -> "java.util.Set (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectoryOnDisk" -> "java.util.function.Consumer (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.DirectoryDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.Writable (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.DirectoryDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.Directory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.DirectoryDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.DirectoryDecorator" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.DirectoryDecorator" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.DirectoryDecorator" -> "java.util.Set (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.IndexDirectoryDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.Directory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.IndexDirectoryDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.IndexDirectoryDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.IndexDirectoryDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.Formatter (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.IndexDirectoryDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.WritableFunction (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.IndexDirectoryDecorator" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.IndexDirectoryDecorator" -> "java.util.Set (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.AbstractIndexingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.Writable (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.AbstractIndexingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.AbstractIndexingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.IndexDirectoryDecorator (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.AbstractIndexingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.file.File (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.AbstractIndexingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.AbstractIndexingDecorator" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.AbstractIndexingDecorator" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.file.File (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecorator" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecorator" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecorator" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.IndexDirectory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.file.File (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDiskWithChecksum (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.util.functional.Formatter (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk" -> "java.nio.charset.Charset (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk" -> "java.nio.charset.StandardCharsets (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk" -> "java.util.Collection (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk" -> "java.util.List (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk" -> "java.util.Set (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk" -> "java.util.function.Function (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk" -> "java.util.stream.Collector (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk" -> "java.util.stream.Collectors (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk" -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.directory.decorator.indexing.IndexingDecoratorOnDisk" -> "org.json.simple.JSONArray (not found)";
   "app.coronawarn.server.services.distribution.assembly.structure.file.File" -> "app.coronawarn.server.services.distribution.assembly.structure.Writable (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.file.File" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDisk" -> "app.coronawarn.server.services.distribution.assembly.io.IO (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.WritableOnDisk (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.Directory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDisk" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDisk" -> "java.io.File (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDisk" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDisk" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDiskWithChecksum" -> "app.coronawarn.server.services.distribution.assembly.io.IO (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDiskWithChecksum" -> "java.io.File (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDiskWithChecksum" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDiskWithChecksum" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDiskWithChecksum" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDiskWithChecksum" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDiskWithChecksum" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDiskWithChecksum" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDiskWithChecksum" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDiskWithChecksum" -> "java.nio.charset.Charset (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDiskWithChecksum" -> "java.nio.charset.StandardCharsets (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDiskWithChecksum" -> "java.nio.file.Path (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDiskWithChecksum" -> "org.bouncycastle.util.encoders.Hex (not found)";
   "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDiskWithChecksum" -> "org.springframework.util.DigestUtils (not found)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack" -> "java.util.ArrayDeque (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack" -> "java.util.Collection (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack" -> "java.util.Deque (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedConsumer" -> "java.lang.Exception (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedConsumer" -> "java.lang.FunctionalInterface (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedConsumer" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedConsumer" -> "java.lang.RuntimeException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedConsumer" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedConsumer" -> "java.lang.Throwable (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedConsumer" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedConsumer" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedConsumer" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedConsumer" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedConsumer" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedConsumer" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedConsumer" -> "java.util.function.Consumer (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedFunction" -> "java.lang.Exception (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedFunction" -> "java.lang.FunctionalInterface (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedFunction" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedFunction" -> "java.lang.RuntimeException (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedFunction" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedFunction" -> "java.lang.Throwable (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedFunction" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedFunction" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedFunction" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedFunction" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedFunction" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedFunction" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.CheckedFunction" -> "java.util.function.Function (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.Formatter" -> "java.lang.FunctionalInterface (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.Formatter" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.Formatter" -> "java.util.function.Function (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.IndexFunction" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.IndexFunction" -> "java.lang.FunctionalInterface (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.IndexFunction" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.IndexFunction" -> "java.util.Set (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.IndexFunction" -> "java.util.function.Function (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.WritableFunction" -> "app.coronawarn.server.services.distribution.assembly.structure.Writable (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.WritableFunction" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.WritableFunction" -> "java.lang.FunctionalInterface (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.WritableFunction" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.assembly.structure.util.functional.WritableFunction" -> "java.util.function.Function (java.base)";
   "app.coronawarn.server.services.distribution.config.DistributionServiceConfig" -> "java.lang.Boolean (java.base)";
   "app.coronawarn.server.services.distribution.config.DistributionServiceConfig" -> "java.lang.Integer (java.base)";
   "app.coronawarn.server.services.distribution.config.DistributionServiceConfig" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.config.DistributionServiceConfig" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.config.DistributionServiceConfig" -> "org.springframework.boot.context.properties.ConfigurationProperties (not found)";
   "app.coronawarn.server.services.distribution.config.DistributionServiceConfig" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$Api" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$Api" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$ObjectStore" -> "java.lang.Boolean (java.base)";
   "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$ObjectStore" -> "java.lang.Integer (java.base)";
   "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$ObjectStore" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$ObjectStore" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$Paths" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$Paths" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$Signature" -> "app.coronawarn.server.common.protocols.external.exposurenotification.SignatureInfo (not found)";
   "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$Signature" -> "app.coronawarn.server.common.protocols.external.exposurenotification.SignatureInfo$Builder (not found)";
   "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$Signature" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$Signature" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$TekExport" -> "java.lang.Integer (java.base)";
   "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$TekExport" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$TekExport" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$TestData" -> "java.lang.Integer (java.base)";
   "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$TestData" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.FailedObjectStoreOperationsCounter" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.objectstore.FailedObjectStoreOperationsCounter" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$ObjectStore (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.objectstore.FailedObjectStoreOperationsCounter" -> "app.coronawarn.server.services.distribution.objectstore.client.ObjectStoreOperationFailedException (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.objectstore.FailedObjectStoreOperationsCounter" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.FailedObjectStoreOperationsCounter" -> "java.lang.Integer (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.FailedObjectStoreOperationsCounter" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.FailedObjectStoreOperationsCounter" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.FailedObjectStoreOperationsCounter" -> "java.lang.Throwable (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.FailedObjectStoreOperationsCounter" -> "java.util.concurrent.atomic.AtomicInteger (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.FailedObjectStoreOperationsCounter" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.server.services.distribution.objectstore.FailedObjectStoreOperationsCounter" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.server.services.distribution.objectstore.FailedObjectStoreOperationsCounter" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$ObjectStore (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "app.coronawarn.server.services.distribution.objectstore.client.ObjectStoreClient (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "app.coronawarn.server.services.distribution.objectstore.client.ObjectStoreClient$HeaderKey (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "app.coronawarn.server.services.distribution.objectstore.client.S3Object (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "app.coronawarn.server.services.distribution.objectstore.publish.LocalFile (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "java.lang.Boolean (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "java.lang.Enum (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "java.lang.IllegalArgumentException (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "java.lang.Integer (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "java.nio.file.Path (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "java.util.EnumMap (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "java.util.List (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "java.util.Map (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "java.util.function.Function (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "java.util.stream.Collector (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "java.util.stream.Collectors (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.server.services.distribution.objectstore.ObjectStoreAccess" -> "org.springframework.util.StringUtils (not found)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "app.coronawarn.server.services.distribution.assembly.component.CwaApiStructureProvider (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "app.coronawarn.server.services.distribution.objectstore.client.ObjectStoreOperationFailedException (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "app.coronawarn.server.services.distribution.objectstore.publish.LocalFile (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "app.coronawarn.server.services.distribution.objectstore.publish.PublishedFileSet (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.io.IOException (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.lang.Integer (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.lang.InterruptedException (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.lang.Runnable (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.lang.Thread (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.lang.Throwable (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.nio.file.Path (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.util.List (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.util.Objects (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.util.concurrent.ExecutionException (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.util.concurrent.Future (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.util.function.Consumer (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.util.function.Function (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.util.function.Predicate (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.util.stream.Collector (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.util.stream.Collectors (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor (not found)";
   "app.coronawarn.server.services.distribution.objectstore.S3Publisher" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$Api (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "app.coronawarn.server.services.distribution.objectstore.client.ObjectStoreOperationFailedException (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "app.coronawarn.server.services.distribution.objectstore.client.S3Object (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "java.lang.CharSequence (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "java.time.LocalDate (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "java.time.ZoneId (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "java.time.ZoneOffset (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "java.time.chrono.ChronoLocalDate (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "java.time.format.DateTimeFormatter (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "java.util.List (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "java.util.function.Consumer (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "java.util.function.Predicate (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "java.util.regex.Matcher (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "java.util.regex.Pattern (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStoreClient" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStoreClient" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStoreClient" -> "java.nio.file.Path (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStoreClient" -> "java.util.List (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStoreClient" -> "java.util.Map (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStoreClient$HeaderKey" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStoreClient$HeaderKey" -> "java.lang.Enum (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStoreClient$HeaderKey" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStoreClient$HeaderKey" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStoreClient$HeaderKey" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStoreClient$HeaderKey" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStoreClient$HeaderKey" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStoreClient$HeaderKey" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStoreClient$HeaderKey" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStoreOperationFailedException" -> "java.lang.RuntimeException (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStoreOperationFailedException" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStoreOperationFailedException" -> "java.lang.Throwable (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$ObjectStore (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "java.lang.Integer (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "java.net.URI (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "org.springframework.context.annotation.Bean (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "org.springframework.context.annotation.Configuration (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "org.springframework.retry.annotation.EnableRetry (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "software.amazon.awssdk.auth.credentials.AwsBasicCredentials (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "software.amazon.awssdk.auth.credentials.AwsCredentials (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "software.amazon.awssdk.auth.credentials.AwsCredentialsProvider (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "software.amazon.awssdk.auth.credentials.StaticCredentialsProvider (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "software.amazon.awssdk.awscore.client.builder.AwsClientBuilder (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "software.amazon.awssdk.core.client.builder.SdkClientBuilder (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "software.amazon.awssdk.regions.Region (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "software.amazon.awssdk.services.s3.S3Client (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.ObjectStorePublishingConfig" -> "software.amazon.awssdk.services.s3.S3ClientBuilder (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "java.lang.Boolean (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "java.lang.Integer (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "java.lang.Throwable (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "java.nio.file.Path (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "java.util.ArrayList (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "java.util.Collection (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "java.util.List (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "java.util.Map (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "java.util.Objects (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "java.util.function.Consumer (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "java.util.function.Function (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "java.util.stream.Collector (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "java.util.stream.Collectors (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "org.springframework.retry.RetryContext (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "org.springframework.retry.annotation.Recover (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "org.springframework.retry.annotation.Retryable (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "org.springframework.retry.support.RetrySynchronizationManager (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "software.amazon.awssdk.core.exception.SdkException (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "software.amazon.awssdk.core.sync.RequestBody (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "software.amazon.awssdk.services.s3.S3Client (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "software.amazon.awssdk.services.s3.model.Delete (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "software.amazon.awssdk.services.s3.model.Delete$Builder (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "software.amazon.awssdk.services.s3.model.DeleteObjectsRequest (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "software.amazon.awssdk.services.s3.model.DeleteObjectsRequest$Builder (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "software.amazon.awssdk.services.s3.model.DeleteObjectsResponse (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "software.amazon.awssdk.services.s3.model.HeadObjectRequest (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "software.amazon.awssdk.services.s3.model.HeadObjectRequest$Builder (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "software.amazon.awssdk.services.s3.model.HeadObjectResponse (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "software.amazon.awssdk.services.s3.model.ListObjectsV2Request (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "software.amazon.awssdk.services.s3.model.ListObjectsV2Request$Builder (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "software.amazon.awssdk.services.s3.model.ListObjectsV2Response (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "software.amazon.awssdk.services.s3.model.NoSuchBucketException (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "software.amazon.awssdk.services.s3.model.ObjectIdentifier (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "software.amazon.awssdk.services.s3.model.ObjectIdentifier$Builder (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "software.amazon.awssdk.services.s3.model.PutObjectRequest (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "software.amazon.awssdk.services.s3.model.PutObjectRequest$Builder (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "software.amazon.awssdk.services.s3.model.PutObjectResponse (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3ClientWrapper" -> "software.amazon.awssdk.services.s3.model.S3Object (not found)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3Object" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3Object" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3Object" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.client.S3Object" -> "java.util.Objects (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.LocalFile" -> "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDiskWithChecksum (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.objectstore.publish.LocalFile" -> "java.io.IOException (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.LocalFile" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.LocalFile" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.LocalFile" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.LocalFile" -> "java.nio.file.Files (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.LocalFile" -> "java.nio.file.Path (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.LocalFile" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.server.services.distribution.objectstore.publish.LocalFile" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.server.services.distribution.objectstore.publish.LocalGenericFile" -> "java.nio.file.Path (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.LocalIndexFile" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.LocalIndexFile" -> "java.nio.file.Path (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "app.coronawarn.server.services.distribution.assembly.structure.file.FileOnDiskWithChecksum (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "java.io.File (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "java.io.IOException (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "java.lang.Throwable (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "java.lang.UnsupportedOperationException (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "java.nio.file.FileVisitOption (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "java.nio.file.Files (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "java.nio.file.LinkOption (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "java.nio.file.Path (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "java.util.List (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "java.util.function.Function (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "java.util.function.Predicate (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "java.util.stream.Collector (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "java.util.stream.Collectors (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishFileSet" -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishedFileSet" -> "app.coronawarn.server.services.distribution.objectstore.client.S3Object (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishedFileSet" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishedFileSet" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishedFileSet" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishedFileSet" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishedFileSet" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishedFileSet" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishedFileSet" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishedFileSet" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishedFileSet" -> "java.util.List (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishedFileSet" -> "java.util.Map (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishedFileSet" -> "java.util.function.Function (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishedFileSet" -> "java.util.stream.Collector (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishedFileSet" -> "java.util.stream.Collectors (java.base)";
   "app.coronawarn.server.services.distribution.objectstore.publish.PublishedFileSet" -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.server.services.distribution.runner.Assembly" -> "app.coronawarn.server.services.distribution.Application (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.runner.Assembly" -> "app.coronawarn.server.services.distribution.assembly.component.CwaApiStructureProvider (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.runner.Assembly" -> "app.coronawarn.server.services.distribution.assembly.component.OutputDirectoryProvider (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.runner.Assembly" -> "app.coronawarn.server.services.distribution.assembly.structure.Writable (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.runner.Assembly" -> "app.coronawarn.server.services.distribution.assembly.structure.directory.Directory (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.runner.Assembly" -> "app.coronawarn.server.services.distribution.assembly.structure.util.ImmutableStack (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.runner.Assembly" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.runner.Assembly" -> "java.lang.Exception (java.base)";
   "app.coronawarn.server.services.distribution.runner.Assembly" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.runner.Assembly" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.runner.Assembly" -> "java.lang.Throwable (java.base)";
   "app.coronawarn.server.services.distribution.runner.Assembly" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.server.services.distribution.runner.Assembly" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.server.services.distribution.runner.Assembly" -> "org.springframework.boot.ApplicationArguments (not found)";
   "app.coronawarn.server.services.distribution.runner.Assembly" -> "org.springframework.boot.ApplicationRunner (not found)";
   "app.coronawarn.server.services.distribution.runner.Assembly" -> "org.springframework.context.ApplicationContext (not found)";
   "app.coronawarn.server.services.distribution.runner.Assembly" -> "org.springframework.core.annotation.Order (not found)";
   "app.coronawarn.server.services.distribution.runner.Assembly" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.server.services.distribution.runner.RetentionPolicy" -> "app.coronawarn.server.common.persistence.service.DiagnosisKeyService (not found)";
   "app.coronawarn.server.services.distribution.runner.RetentionPolicy" -> "app.coronawarn.server.services.distribution.Application (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.runner.RetentionPolicy" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.runner.RetentionPolicy" -> "app.coronawarn.server.services.distribution.objectstore.S3RetentionPolicy (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.runner.RetentionPolicy" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.runner.RetentionPolicy" -> "java.lang.Exception (java.base)";
   "app.coronawarn.server.services.distribution.runner.RetentionPolicy" -> "java.lang.Integer (java.base)";
   "app.coronawarn.server.services.distribution.runner.RetentionPolicy" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.runner.RetentionPolicy" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.runner.RetentionPolicy" -> "java.lang.Throwable (java.base)";
   "app.coronawarn.server.services.distribution.runner.RetentionPolicy" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.server.services.distribution.runner.RetentionPolicy" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.server.services.distribution.runner.RetentionPolicy" -> "org.springframework.boot.ApplicationArguments (not found)";
   "app.coronawarn.server.services.distribution.runner.RetentionPolicy" -> "org.springframework.boot.ApplicationRunner (not found)";
   "app.coronawarn.server.services.distribution.runner.RetentionPolicy" -> "org.springframework.context.ApplicationContext (not found)";
   "app.coronawarn.server.services.distribution.runner.RetentionPolicy" -> "org.springframework.core.annotation.Order (not found)";
   "app.coronawarn.server.services.distribution.runner.RetentionPolicy" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.server.services.distribution.runner.S3Distribution" -> "app.coronawarn.server.services.distribution.assembly.component.OutputDirectoryProvider (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.runner.S3Distribution" -> "app.coronawarn.server.services.distribution.objectstore.S3Publisher (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.runner.S3Distribution" -> "app.coronawarn.server.services.distribution.objectstore.client.ObjectStoreOperationFailedException (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.runner.S3Distribution" -> "java.io.File (java.base)";
   "app.coronawarn.server.services.distribution.runner.S3Distribution" -> "java.io.IOException (java.base)";
   "app.coronawarn.server.services.distribution.runner.S3Distribution" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.runner.S3Distribution" -> "java.lang.Exception (java.base)";
   "app.coronawarn.server.services.distribution.runner.S3Distribution" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.runner.S3Distribution" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.runner.S3Distribution" -> "java.lang.Throwable (java.base)";
   "app.coronawarn.server.services.distribution.runner.S3Distribution" -> "java.lang.UnsupportedOperationException (java.base)";
   "app.coronawarn.server.services.distribution.runner.S3Distribution" -> "java.nio.file.Path (java.base)";
   "app.coronawarn.server.services.distribution.runner.S3Distribution" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.server.services.distribution.runner.S3Distribution" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.server.services.distribution.runner.S3Distribution" -> "org.springframework.boot.ApplicationArguments (not found)";
   "app.coronawarn.server.services.distribution.runner.S3Distribution" -> "org.springframework.boot.ApplicationRunner (not found)";
   "app.coronawarn.server.services.distribution.runner.S3Distribution" -> "org.springframework.core.annotation.Order (not found)";
   "app.coronawarn.server.services.distribution.runner.S3Distribution" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "app.coronawarn.server.common.persistence.domain.DiagnosisKey (not found)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "app.coronawarn.server.common.persistence.domain.DiagnosisKeyBuilders (not found)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "app.coronawarn.server.common.persistence.domain.DiagnosisKeyBuilders$Builder (not found)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "app.coronawarn.server.common.persistence.domain.DiagnosisKeyBuilders$FinalBuilder (not found)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "app.coronawarn.server.common.persistence.domain.DiagnosisKeyBuilders$RollingStartIntervalNumberBuilder (not found)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "app.coronawarn.server.common.persistence.domain.DiagnosisKeyBuilders$TransmissionRiskLevelBuilder (not found)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "app.coronawarn.server.common.persistence.service.DiagnosisKeyService (not found)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "app.coronawarn.server.common.protocols.internal.RiskLevel (not found)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "app.coronawarn.server.services.distribution.assembly.diagnosiskeys.DiagnosisKeyBundler (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "app.coronawarn.server.services.distribution.config.DistributionServiceConfig$TestData (distribution-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.lang.Integer (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.lang.Long (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.lang.Math (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.time.LocalDate (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.time.LocalDateTime (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.time.ZoneId (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.time.ZoneOffset (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.util.Collection (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.util.List (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.util.concurrent.TimeUnit (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.util.function.Function (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.util.function.IntFunction (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.util.function.LongFunction (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.util.stream.Collector (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.util.stream.Collectors (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.util.stream.IntStream (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.util.stream.LongStream (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "org.apache.commons.math3.distribution.PoissonDistribution (not found)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "org.apache.commons.math3.random.JDKRandomGenerator (not found)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "org.apache.commons.math3.random.RandomGenerator (not found)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "org.springframework.boot.ApplicationArguments (not found)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "org.springframework.boot.ApplicationRunner (not found)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "org.springframework.context.annotation.Profile (not found)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "org.springframework.core.annotation.Order (not found)";
   "app.coronawarn.server.services.distribution.runner.TestDataGeneration" -> "org.springframework.stereotype.Component (not found)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.BufferedReader (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.FileInputStream (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.InputStreamReader (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.Reader (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.net.URISyntaxException (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.nio.charset.Charset (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.nio.charset.StandardCharsets (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.function.Function (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.stream.Collector (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.stream.Collectors (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.stream.Stream (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.Collection (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "org.springframework.boot.loader.archive.Archive (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "org.springframework.boot.loader.archive.Archive$Entry (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "org.springframework.boot.loader.archive.Archive$EntryFilter (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "org.springframework.boot.loader.archive.Archive (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.JarLauncher"      -> "org.springframework.boot.loader.archive.Archive$Entry (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.JarLauncher"      -> "org.springframework.boot.loader.archive.Archive$EntryFilter (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.JarLauncher"      -> "org.springframework.boot.loader.archive.ExplodedArchive (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.io.ByteArrayOutputStream (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.AssertionError (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.ClassNotFoundException (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Package (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.net.JarURLConnection (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.net.URLClassLoader (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.security.AccessControlContext (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.security.AccessController (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.security.PrivilegedActionException (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.security.PrivilegedExceptionAction (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.util.jar.JarFile (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "org.springframework.boot.loader.jar.Handler (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "org.springframework.boot.loader.jar.JarFile (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "org.springframework.boot.loader.jar.Handler (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.Launcher"         -> "java.io.File (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Deprecated (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Thread (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.security.CodeSource (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.security.ProtectionDomain (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.util.List (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "org.springframework.boot.loader.archive.Archive (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.Launcher"         -> "org.springframework.boot.loader.archive.ExplodedArchive (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.Launcher"         -> "org.springframework.boot.loader.archive.JarFileArchive (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.Launcher"         -> "org.springframework.boot.loader.jar.JarFile (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.Thread (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.reflect.Method (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.FileInputStream (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.PrintStream (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.UnsupportedEncodingException (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Boolean (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Character (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.NoSuchMethodException (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.reflect.Constructor (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.HttpURLConnection (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.URLDecoder (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Collection (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.LinkedHashSet (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Locale (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Properties (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Set (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.function.Supplier (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.regex.Matcher (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.regex.Pattern (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.archive.Archive (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.archive.Archive$EntryFilter (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.archive.ExplodedArchive (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.archive.JarFileArchive (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.util.SystemPropertyUtils (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.util.Assert (not found)";
   "org.springframework.boot.loader.PropertiesLauncher$1" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "org.springframework.boot.loader.archive.Archive (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "org.springframework.boot.loader.archive.Archive$Entry (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "org.springframework.boot.loader.archive.Archive$EntryFilter (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "org.springframework.boot.loader.archive.Archive (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "org.springframework.boot.loader.archive.Archive$Entry (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "org.springframework.boot.loader.archive.Archive$EntryFilter (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.WarLauncher"      -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.WarLauncher"      -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.WarLauncher"      -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.WarLauncher"      -> "org.springframework.boot.loader.archive.Archive (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.WarLauncher"      -> "org.springframework.boot.loader.archive.Archive$Entry (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.AutoCloseable (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.Deprecated (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.Iterable (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.util.List (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.archive.Archive$Entry" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.Archive$Entry" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.Archive$EntryFilter" -> "java.lang.FunctionalInterface (java.base)";
   "org.springframework.boot.loader.archive.Archive$EntryFilter" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.io.FileInputStream (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.Arrays (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.Collection (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.HashSet (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.Set (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.UnsupportedOperationException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Arrays (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Comparator (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Deque (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.LinkedList (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.NoSuchElementException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Set (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.function.Function (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$ArchiveIterator" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$ArchiveIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$EntryIterator" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$EntryIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.FileOutputStream (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.OutputStream (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.UUID (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "org.springframework.boot.loader.jar.JarFile (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.archive.JarFileArchive$AbstractIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$AbstractIterator" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$AbstractIterator" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$EntryIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$EntryIterator" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$EntryIterator" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$JarFileEntry" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$JarFileEntry" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$JarFileEntry" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.data.RandomAccessData" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessData" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.data.RandomAccessData" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.io.EOFException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.lang.IndexOutOfBoundsException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$1" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.lang.Math (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.lang.NullPointerException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.io.FileNotFoundException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.io.RandomAccessFile (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.IndexOutOfBoundsException (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.nio.charset.Charset (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.nio.charset.StandardCharsets (java.base)";
   "org.springframework.boot.loader.jar.Bytes"        -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.lang.Math (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "org.springframework.boot.loader.data.RandomAccessData (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$1" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64End" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64End" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64End" -> "org.springframework.boot.loader.data.RandomAccessData (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64Locator" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64Locator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64Locator" -> "org.springframework.boot.loader.data.RandomAccessData (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.CloneNotSupportedException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.Math (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.Instant (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.ZoneId (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.ZonedDateTime (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.temporal.ChronoField (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.temporal.ChronoUnit (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.temporal.TemporalUnit (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.temporal.ValueRange (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "org.springframework.boot.loader.data.RandomAccessData (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "org.springframework.boot.loader.data.RandomAccessData (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryVisitor" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryVisitor" -> "org.springframework.boot.loader.data.RandomAccessData (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.FileHeader"   -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.FileHeader"   -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.io.File (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.io.PrintStream (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.RuntimeException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.ref.SoftReference (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.URLStreamHandler (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.Map (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.concurrent.ConcurrentHashMap (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.logging.Level (java.logging)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.logging.Logger (java.logging)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.regex.Matcher (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.regex.Pattern (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.security.CodeSigner (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.security.cert.Certificate (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.jar.JarEntryFilter" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.io.File (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Error (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Iterable (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Runnable (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.RuntimeException (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.ref.SoftReference (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.URLStreamHandler (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.URLStreamHandlerFactory (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.Spliterator (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.Spliterators (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.function.Supplier (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.jar.JarFile (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.jar.JarInputStream (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.stream.Stream (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.stream.StreamSupport (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "org.springframework.boot.loader.data.RandomAccessData (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarFile"      -> "org.springframework.boot.loader.data.RandomAccessDataFile (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarFile$1"    -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile$1"    -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarFile$1"    -> "org.springframework.boot.loader.data.RandomAccessData (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarFile$JarEntryEnumeration" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarEntryEnumeration" -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarEntryEnumeration" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarEntryEnumeration" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarFileType" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarFileType" -> "java.lang.Enum (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarFileType" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarFileType" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Boolean (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Integer (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Iterable (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Runnable (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Runtime (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.reflect.Method (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.Arrays (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.Map (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.jar.Attributes$Name (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "org.springframework.boot.loader.data.RandomAccessData (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries$1" -> "java.lang.Integer (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$1" -> "java.util.LinkedHashMap (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$1" -> "java.util.Map (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$1" -> "java.util.Map$Entry (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.lang.Runnable (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.util.NoSuchElementException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.FileNotFoundException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.FilePermission (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.Boolean (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.Integer (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.ThreadLocal (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.net.JarURLConnection (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.net.URLStreamHandler (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.security.Permission (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.util.jar.JarFile (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "org.springframework.boot.loader.data.RandomAccessData (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "org.springframework.boot.loader.data.RandomAccessDataFile (distribution-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection$1" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$1" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$1" -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$1" -> "java.net.URLStreamHandler (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.io.ByteArrayOutputStream (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.io.UnsupportedEncodingException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.Character (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.net.URLEncoder (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.lang.StringIndexOutOfBoundsException (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.util.Objects (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.io.EOFException (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.util.zip.Inflater (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.util.zip.InflaterInputStream (java.base)";
   "org.springframework.boot.loader.jarmode.JarMode"  -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jarmode.JarMode"  -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.io.PrintStream (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.Boolean (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "org.springframework.core.io.support.SpringFactoriesLoader (not found)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "org.springframework.util.ClassUtils (not found)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.io.PrintStream (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.util.Arrays (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.io.PrintStream (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.util.HashSet (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.util.Locale (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.util.Properties (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.util.Set (java.base)";
}
digraph "submission-1.1.0-SNAPSHOT.jar" {
    // Path: submission-1.1.0-SNAPSHOT.jar
   "app.coronawarn.server.services.submission.ServerApplication" -> "io.micrometer.core.aop.TimedAspect (not found)";
   "app.coronawarn.server.services.submission.ServerApplication" -> "io.micrometer.core.instrument.MeterRegistry (not found)";
   "app.coronawarn.server.services.submission.ServerApplication" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.submission.ServerApplication" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.ServerApplication" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.submission.ServerApplication" -> "java.util.Arrays (java.base)";
   "app.coronawarn.server.services.submission.ServerApplication" -> "java.util.List (java.base)";
   "app.coronawarn.server.services.submission.ServerApplication" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.server.services.submission.ServerApplication" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.server.services.submission.ServerApplication" -> "org.springframework.boot.SpringApplication (not found)";
   "app.coronawarn.server.services.submission.ServerApplication" -> "org.springframework.boot.autoconfigure.SpringBootApplication (not found)";
   "app.coronawarn.server.services.submission.ServerApplication" -> "org.springframework.boot.autoconfigure.domain.EntityScan (not found)";
   "app.coronawarn.server.services.submission.ServerApplication" -> "org.springframework.boot.context.properties.EnableConfigurationProperties (not found)";
   "app.coronawarn.server.services.submission.ServerApplication" -> "org.springframework.cloud.openfeign.EnableFeignClients (not found)";
   "app.coronawarn.server.services.submission.ServerApplication" -> "org.springframework.context.ConfigurableApplicationContext (not found)";
   "app.coronawarn.server.services.submission.ServerApplication" -> "org.springframework.context.EnvironmentAware (not found)";
   "app.coronawarn.server.services.submission.ServerApplication" -> "org.springframework.context.annotation.Bean (not found)";
   "app.coronawarn.server.services.submission.ServerApplication" -> "org.springframework.context.annotation.ComponentScan (not found)";
   "app.coronawarn.server.services.submission.ServerApplication" -> "org.springframework.core.env.Environment (not found)";
   "app.coronawarn.server.services.submission.ServerApplication" -> "org.springframework.data.jpa.repository.config.EnableJpaRepositories (not found)";
   "app.coronawarn.server.services.submission.ServerApplication" -> "org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter (not found)";
   "app.coronawarn.server.services.submission.config.SecurityConfig" -> "app.coronawarn.server.services.submission.controller.SubmissionController (submission-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.submission.config.SecurityConfig" -> "java.lang.Exception (java.base)";
   "app.coronawarn.server.services.submission.config.SecurityConfig" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.config.SecurityConfig" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.submission.config.SecurityConfig" -> "java.util.Arrays (java.base)";
   "app.coronawarn.server.services.submission.config.SecurityConfig" -> "java.util.Collection (java.base)";
   "app.coronawarn.server.services.submission.config.SecurityConfig" -> "java.util.List (java.base)";
   "app.coronawarn.server.services.submission.config.SecurityConfig" -> "org.springframework.context.annotation.Bean (not found)";
   "app.coronawarn.server.services.submission.config.SecurityConfig" -> "org.springframework.context.annotation.Configuration (not found)";
   "app.coronawarn.server.services.submission.config.SecurityConfig" -> "org.springframework.http.HttpMethod (not found)";
   "app.coronawarn.server.services.submission.config.SecurityConfig" -> "org.springframework.security.config.annotation.web.HttpSecurityBuilder (not found)";
   "app.coronawarn.server.services.submission.config.SecurityConfig" -> "org.springframework.security.config.annotation.web.builders.HttpSecurity (not found)";
   "app.coronawarn.server.services.submission.config.SecurityConfig" -> "org.springframework.security.config.annotation.web.configuration.EnableWebSecurity (not found)";
   "app.coronawarn.server.services.submission.config.SecurityConfig" -> "org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter (not found)";
   "app.coronawarn.server.services.submission.config.SecurityConfig" -> "org.springframework.security.config.annotation.web.configurers.CsrfConfigurer (not found)";
   "app.coronawarn.server.services.submission.config.SecurityConfig" -> "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer (not found)";
   "app.coronawarn.server.services.submission.config.SecurityConfig" -> "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$AuthorizedUrl (not found)";
   "app.coronawarn.server.services.submission.config.SecurityConfig" -> "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry (not found)";
   "app.coronawarn.server.services.submission.config.SecurityConfig" -> "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$MvcMatchersAuthorizedUrl (not found)";
   "app.coronawarn.server.services.submission.config.SecurityConfig" -> "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer (not found)";
   "app.coronawarn.server.services.submission.config.SecurityConfig" -> "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$ContentSecurityPolicyConfig (not found)";
   "app.coronawarn.server.services.submission.config.SecurityConfig" -> "org.springframework.security.web.firewall.HttpFirewall (not found)";
   "app.coronawarn.server.services.submission.config.SecurityConfig" -> "org.springframework.security.web.firewall.StrictHttpFirewall (not found)";
   "app.coronawarn.server.services.submission.config.SubmissionServiceConfig" -> "java.lang.Double (java.base)";
   "app.coronawarn.server.services.submission.config.SubmissionServiceConfig" -> "java.lang.Integer (java.base)";
   "app.coronawarn.server.services.submission.config.SubmissionServiceConfig" -> "java.lang.Long (java.base)";
   "app.coronawarn.server.services.submission.config.SubmissionServiceConfig" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.config.SubmissionServiceConfig" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.submission.config.SubmissionServiceConfig" -> "org.springframework.boot.context.properties.ConfigurationProperties (not found)";
   "app.coronawarn.server.services.submission.config.SubmissionServiceConfig" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.server.services.submission.config.SubmissionServiceConfig$Client" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.config.SubmissionServiceConfig$Client$Ssl" -> "java.io.File (java.base)";
   "app.coronawarn.server.services.submission.config.SubmissionServiceConfig$Client$Ssl" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.config.SubmissionServiceConfig$Client$Ssl" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.submission.config.SubmissionServiceConfig$Monitoring" -> "java.lang.Long (java.base)";
   "app.coronawarn.server.services.submission.config.SubmissionServiceConfig$Monitoring" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.config.SubmissionServiceConfig$Payload" -> "java.lang.Integer (java.base)";
   "app.coronawarn.server.services.submission.config.SubmissionServiceConfig$Payload" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.config.SubmissionServiceConfig$Verification" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.config.SubmissionServiceConfig$Verification" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.submission.controller.ApiExceptionHandler" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.submission.controller.ApiExceptionHandler" -> "java.lang.Exception (java.base)";
   "app.coronawarn.server.services.submission.controller.ApiExceptionHandler" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.controller.ApiExceptionHandler" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.submission.controller.ApiExceptionHandler" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.server.services.submission.controller.ApiExceptionHandler" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.server.services.submission.controller.ApiExceptionHandler" -> "org.springframework.web.bind.annotation.ExceptionHandler (not found)";
   "app.coronawarn.server.services.submission.controller.ApiExceptionHandler" -> "org.springframework.web.bind.annotation.ResponseStatus (not found)";
   "app.coronawarn.server.services.submission.controller.ApiExceptionHandler" -> "org.springframework.web.bind.annotation.RestControllerAdvice (not found)";
   "app.coronawarn.server.services.submission.controller.ApiExceptionHandler" -> "org.springframework.web.context.request.WebRequest (not found)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "app.coronawarn.server.common.persistence.domain.DiagnosisKey (not found)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "app.coronawarn.server.common.persistence.domain.DiagnosisKeyBuilders (not found)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "app.coronawarn.server.common.persistence.domain.DiagnosisKeyBuilders$Builder (not found)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "app.coronawarn.server.common.persistence.domain.DiagnosisKeyBuilders$FinalBuilder (not found)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "app.coronawarn.server.common.persistence.service.DiagnosisKeyService (not found)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "app.coronawarn.server.common.protocols.external.exposurenotification.TemporaryExposureKey (not found)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "app.coronawarn.server.common.protocols.internal.SubmissionPayload (not found)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "app.coronawarn.server.services.submission.config.SubmissionServiceConfig (submission-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "app.coronawarn.server.services.submission.monitoring.SubmissionControllerMonitor (submission-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload (submission-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "app.coronawarn.server.services.submission.verification.TanVerifier (submission-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "io.micrometer.core.annotation.Timed (not found)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.lang.Boolean (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.lang.Double (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.lang.Exception (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.lang.Integer (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.lang.Throwable (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.lang.Void (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.util.ArrayList (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.util.Collection (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.util.Iterator (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.util.List (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.util.concurrent.Callable (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.util.concurrent.Executors (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.util.concurrent.ScheduledExecutorService (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.util.concurrent.ScheduledFuture (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "java.util.concurrent.TimeUnit (java.base)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "org.apache.commons.math3.distribution.PoissonDistribution (not found)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "org.springframework.http.HttpStatus (not found)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "org.springframework.http.ResponseEntity (not found)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "org.springframework.http.ResponseEntity$BodyBuilder (not found)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "org.springframework.util.StopWatch (not found)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "org.springframework.validation.annotation.Validated (not found)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "org.springframework.web.bind.annotation.PostMapping (not found)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "org.springframework.web.bind.annotation.RequestBody (not found)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "org.springframework.web.bind.annotation.RequestHeader (not found)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "org.springframework.web.bind.annotation.RequestMapping (not found)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "org.springframework.web.bind.annotation.RestController (not found)";
   "app.coronawarn.server.services.submission.controller.SubmissionController" -> "org.springframework.web.context.request.async.DeferredResult (not found)";
   "app.coronawarn.server.services.submission.monitoring.BatchCounter" -> "io.micrometer.core.instrument.Counter (not found)";
   "app.coronawarn.server.services.submission.monitoring.BatchCounter" -> "io.micrometer.core.instrument.Counter$Builder (not found)";
   "app.coronawarn.server.services.submission.monitoring.BatchCounter" -> "io.micrometer.core.instrument.MeterRegistry (not found)";
   "app.coronawarn.server.services.submission.monitoring.BatchCounter" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.monitoring.BatchCounter" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.submission.monitoring.BatchCounter" -> "java.util.concurrent.atomic.AtomicLong (java.base)";
   "app.coronawarn.server.services.submission.monitoring.SubmissionControllerMonitor" -> "app.coronawarn.server.services.submission.config.SubmissionServiceConfig (submission-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.submission.monitoring.SubmissionControllerMonitor" -> "app.coronawarn.server.services.submission.controller.SubmissionController (submission-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.submission.monitoring.SubmissionControllerMonitor" -> "io.micrometer.core.instrument.Gauge (not found)";
   "app.coronawarn.server.services.submission.monitoring.SubmissionControllerMonitor" -> "io.micrometer.core.instrument.Gauge$Builder (not found)";
   "app.coronawarn.server.services.submission.monitoring.SubmissionControllerMonitor" -> "io.micrometer.core.instrument.MeterRegistry (not found)";
   "app.coronawarn.server.services.submission.monitoring.SubmissionControllerMonitor" -> "java.lang.Double (java.base)";
   "app.coronawarn.server.services.submission.monitoring.SubmissionControllerMonitor" -> "java.lang.Long (java.base)";
   "app.coronawarn.server.services.submission.monitoring.SubmissionControllerMonitor" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.monitoring.SubmissionControllerMonitor" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.submission.monitoring.SubmissionControllerMonitor" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.submission.monitoring.SubmissionControllerMonitor" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.submission.monitoring.SubmissionControllerMonitor" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.submission.monitoring.SubmissionControllerMonitor" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.submission.monitoring.SubmissionControllerMonitor" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.submission.monitoring.SubmissionControllerMonitor" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.submission.monitoring.SubmissionControllerMonitor" -> "java.util.function.ToDoubleFunction (java.base)";
   "app.coronawarn.server.services.submission.monitoring.SubmissionControllerMonitor" -> "org.springframework.boot.context.properties.ConfigurationProperties (not found)";
   "app.coronawarn.server.services.submission.monitoring.SubmissionControllerMonitor" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.server.services.submission.monitoring.VerificationServiceHealthIndicator" -> "app.coronawarn.server.services.submission.verification.Tan (submission-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.submission.monitoring.VerificationServiceHealthIndicator" -> "app.coronawarn.server.services.submission.verification.VerificationServerClient (submission-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.submission.monitoring.VerificationServiceHealthIndicator" -> "feign.FeignException (not found)";
   "app.coronawarn.server.services.submission.monitoring.VerificationServiceHealthIndicator" -> "feign.FeignException$NotFound (not found)";
   "app.coronawarn.server.services.submission.monitoring.VerificationServiceHealthIndicator" -> "java.lang.Exception (java.base)";
   "app.coronawarn.server.services.submission.monitoring.VerificationServiceHealthIndicator" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.monitoring.VerificationServiceHealthIndicator" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.submission.monitoring.VerificationServiceHealthIndicator" -> "org.springframework.boot.actuate.health.Health (not found)";
   "app.coronawarn.server.services.submission.monitoring.VerificationServiceHealthIndicator" -> "org.springframework.boot.actuate.health.Health$Builder (not found)";
   "app.coronawarn.server.services.submission.monitoring.VerificationServiceHealthIndicator" -> "org.springframework.boot.actuate.health.HealthIndicator (not found)";
   "app.coronawarn.server.services.submission.monitoring.VerificationServiceHealthIndicator" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload" -> "java.lang.annotation.Annotation (java.base)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload" -> "java.lang.annotation.Documented (java.base)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload" -> "java.lang.annotation.Retention (java.base)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload" -> "java.lang.annotation.Target (java.base)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload" -> "javax.validation.Constraint (not found)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload" -> "javax.validation.Payload (not found)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload$SubmissionPayloadValidator" -> "app.coronawarn.server.common.persistence.domain.DiagnosisKey (not found)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload$SubmissionPayloadValidator" -> "app.coronawarn.server.common.protocols.external.exposurenotification.TemporaryExposureKey (not found)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload$SubmissionPayloadValidator" -> "app.coronawarn.server.common.protocols.internal.SubmissionPayload (not found)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload$SubmissionPayloadValidator" -> "app.coronawarn.server.services.submission.config.SubmissionServiceConfig (submission-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload$SubmissionPayloadValidator" -> "java.lang.Integer (java.base)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload$SubmissionPayloadValidator" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload$SubmissionPayloadValidator" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload$SubmissionPayloadValidator" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload$SubmissionPayloadValidator" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload$SubmissionPayloadValidator" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload$SubmissionPayloadValidator" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload$SubmissionPayloadValidator" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload$SubmissionPayloadValidator" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload$SubmissionPayloadValidator" -> "java.util.Arrays (java.base)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload$SubmissionPayloadValidator" -> "java.util.List (java.base)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload$SubmissionPayloadValidator" -> "java.util.Objects (java.base)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload$SubmissionPayloadValidator" -> "java.util.function.IntFunction (java.base)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload$SubmissionPayloadValidator" -> "java.util.function.ToIntFunction (java.base)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload$SubmissionPayloadValidator" -> "java.util.stream.IntStream (java.base)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload$SubmissionPayloadValidator" -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload$SubmissionPayloadValidator" -> "javax.validation.ConstraintValidator (not found)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload$SubmissionPayloadValidator" -> "javax.validation.ConstraintValidatorContext (not found)";
   "app.coronawarn.server.services.submission.validation.ValidSubmissionPayload$SubmissionPayloadValidator" -> "javax.validation.ConstraintValidatorContext$ConstraintViolationBuilder (not found)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "app.coronawarn.server.services.submission.config.SubmissionServiceConfig (submission-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "app.coronawarn.server.services.submission.config.SubmissionServiceConfig$Client (submission-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "app.coronawarn.server.services.submission.config.SubmissionServiceConfig$Client$Ssl (submission-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "feign.Client (not found)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "feign.httpclient.ApacheHttpClient (not found)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "java.io.File (java.base)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "java.io.IOException (java.base)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "java.lang.Exception (java.base)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "java.lang.Integer (java.base)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "java.lang.RuntimeException (java.base)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "java.lang.Throwable (java.base)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "java.security.GeneralSecurityException (java.base)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "javax.net.ssl.HostnameVerifier (java.base)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "javax.net.ssl.SSLContext (java.base)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "org.apache.http.client.HttpClient (not found)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "org.apache.http.impl.client.CloseableHttpClient (not found)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "org.apache.http.impl.client.HttpClientBuilder (not found)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "org.apache.http.ssl.SSLContextBuilder (not found)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "org.springframework.cloud.commons.httpclient.ApacheHttpClientConnectionManagerFactory (not found)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "org.springframework.cloud.commons.httpclient.ApacheHttpClientFactory (not found)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "org.springframework.cloud.commons.httpclient.DefaultApacheHttpClientConnectionManagerFactory (not found)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "org.springframework.cloud.commons.httpclient.DefaultApacheHttpClientFactory (not found)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "org.springframework.context.annotation.Bean (not found)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "org.springframework.context.annotation.Profile (not found)";
   "app.coronawarn.server.services.submission.verification.CloudFeignClientProvider" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.server.services.submission.verification.DefaultHostnameVerifierProvider" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.verification.DefaultHostnameVerifierProvider" -> "javax.net.ssl.HostnameVerifier (java.base)";
   "app.coronawarn.server.services.submission.verification.DefaultHostnameVerifierProvider" -> "org.apache.http.conn.ssl.DefaultHostnameVerifier (not found)";
   "app.coronawarn.server.services.submission.verification.DefaultHostnameVerifierProvider" -> "org.springframework.context.annotation.Profile (not found)";
   "app.coronawarn.server.services.submission.verification.DefaultHostnameVerifierProvider" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.server.services.submission.verification.DevelopmentFeignClientProvider" -> "app.coronawarn.server.services.submission.config.SubmissionServiceConfig (submission-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.server.services.submission.verification.DevelopmentFeignClientProvider" -> "feign.Client (not found)";
   "app.coronawarn.server.services.submission.verification.DevelopmentFeignClientProvider" -> "feign.httpclient.ApacheHttpClient (not found)";
   "app.coronawarn.server.services.submission.verification.DevelopmentFeignClientProvider" -> "java.lang.Integer (java.base)";
   "app.coronawarn.server.services.submission.verification.DevelopmentFeignClientProvider" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.verification.DevelopmentFeignClientProvider" -> "javax.net.ssl.HostnameVerifier (java.base)";
   "app.coronawarn.server.services.submission.verification.DevelopmentFeignClientProvider" -> "org.apache.http.client.HttpClient (not found)";
   "app.coronawarn.server.services.submission.verification.DevelopmentFeignClientProvider" -> "org.apache.http.impl.client.CloseableHttpClient (not found)";
   "app.coronawarn.server.services.submission.verification.DevelopmentFeignClientProvider" -> "org.apache.http.impl.client.HttpClientBuilder (not found)";
   "app.coronawarn.server.services.submission.verification.DevelopmentFeignClientProvider" -> "org.springframework.cloud.commons.httpclient.ApacheHttpClientConnectionManagerFactory (not found)";
   "app.coronawarn.server.services.submission.verification.DevelopmentFeignClientProvider" -> "org.springframework.cloud.commons.httpclient.ApacheHttpClientFactory (not found)";
   "app.coronawarn.server.services.submission.verification.DevelopmentFeignClientProvider" -> "org.springframework.cloud.commons.httpclient.DefaultApacheHttpClientConnectionManagerFactory (not found)";
   "app.coronawarn.server.services.submission.verification.DevelopmentFeignClientProvider" -> "org.springframework.cloud.commons.httpclient.DefaultApacheHttpClientFactory (not found)";
   "app.coronawarn.server.services.submission.verification.DevelopmentFeignClientProvider" -> "org.springframework.context.annotation.Bean (not found)";
   "app.coronawarn.server.services.submission.verification.DevelopmentFeignClientProvider" -> "org.springframework.context.annotation.Profile (not found)";
   "app.coronawarn.server.services.submission.verification.DevelopmentFeignClientProvider" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.server.services.submission.verification.FeignClientProvider" -> "feign.Client (not found)";
   "app.coronawarn.server.services.submission.verification.FeignClientProvider" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.verification.HostnameVerifierProvider" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.verification.HostnameVerifierProvider" -> "javax.net.ssl.HostnameVerifier (java.base)";
   "app.coronawarn.server.services.submission.verification.NoopHostnameVerifierProvider" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.verification.NoopHostnameVerifierProvider" -> "javax.net.ssl.HostnameVerifier (java.base)";
   "app.coronawarn.server.services.submission.verification.NoopHostnameVerifierProvider" -> "org.apache.http.conn.ssl.NoopHostnameVerifier (not found)";
   "app.coronawarn.server.services.submission.verification.NoopHostnameVerifierProvider" -> "org.springframework.context.annotation.Profile (not found)";
   "app.coronawarn.server.services.submission.verification.NoopHostnameVerifierProvider" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.server.services.submission.verification.Tan" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.submission.verification.Tan" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.verification.Tan" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.submission.verification.Tan" -> "java.util.Objects (java.base)";
   "app.coronawarn.server.services.submission.verification.Tan" -> "java.util.UUID (java.base)";
   "app.coronawarn.server.services.submission.verification.TanVerifier" -> "feign.FeignException (not found)";
   "app.coronawarn.server.services.submission.verification.TanVerifier" -> "feign.FeignException$NotFound (not found)";
   "app.coronawarn.server.services.submission.verification.TanVerifier" -> "java.lang.Class (java.base)";
   "app.coronawarn.server.services.submission.verification.TanVerifier" -> "java.lang.IllegalArgumentException (java.base)";
   "app.coronawarn.server.services.submission.verification.TanVerifier" -> "java.lang.Integer (java.base)";
   "app.coronawarn.server.services.submission.verification.TanVerifier" -> "java.lang.Math (java.base)";
   "app.coronawarn.server.services.submission.verification.TanVerifier" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.verification.TanVerifier" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.submission.verification.TanVerifier" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.server.services.submission.verification.TanVerifier" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.server.services.submission.verification.TanVerifier" -> "org.springframework.stereotype.Service (not found)";
   "app.coronawarn.server.services.submission.verification.VerificationServerClient" -> "io.micrometer.core.annotation.Timed (not found)";
   "app.coronawarn.server.services.submission.verification.VerificationServerClient" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.verification.VerificationServerClient" -> "java.lang.String (java.base)";
   "app.coronawarn.server.services.submission.verification.VerificationServerClient" -> "org.springframework.cloud.openfeign.FeignClient (not found)";
   "app.coronawarn.server.services.submission.verification.VerificationServerClient" -> "org.springframework.web.bind.annotation.PostMapping (not found)";
   "app.coronawarn.server.services.submission.verification.VerificationServerClientConfiguration" -> "feign.Client (not found)";
   "app.coronawarn.server.services.submission.verification.VerificationServerClientConfiguration" -> "java.lang.Object (java.base)";
   "app.coronawarn.server.services.submission.verification.VerificationServerClientConfiguration" -> "org.springframework.context.annotation.Bean (not found)";
   "app.coronawarn.server.services.submission.verification.VerificationServerClientConfiguration" -> "org.springframework.context.annotation.Configuration (not found)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.BufferedReader (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.FileInputStream (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.InputStreamReader (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.Reader (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.net.URISyntaxException (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.nio.charset.Charset (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.nio.charset.StandardCharsets (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.function.Function (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.stream.Collector (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.stream.Collectors (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.stream.Stream (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.Collection (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "org.springframework.boot.loader.archive.Archive (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "org.springframework.boot.loader.archive.Archive$Entry (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "org.springframework.boot.loader.archive.Archive$EntryFilter (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "org.springframework.boot.loader.archive.Archive (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.JarLauncher"      -> "org.springframework.boot.loader.archive.Archive$Entry (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.JarLauncher"      -> "org.springframework.boot.loader.archive.Archive$EntryFilter (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.JarLauncher"      -> "org.springframework.boot.loader.archive.ExplodedArchive (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.io.ByteArrayOutputStream (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.AssertionError (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.ClassNotFoundException (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Package (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.net.JarURLConnection (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.net.URLClassLoader (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.security.AccessControlContext (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.security.AccessController (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.security.PrivilegedActionException (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.security.PrivilegedExceptionAction (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.util.jar.JarFile (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "org.springframework.boot.loader.jar.Handler (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "org.springframework.boot.loader.jar.JarFile (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "org.springframework.boot.loader.jar.Handler (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.Launcher"         -> "java.io.File (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Deprecated (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Thread (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.security.CodeSource (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.security.ProtectionDomain (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.util.List (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "org.springframework.boot.loader.archive.Archive (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.Launcher"         -> "org.springframework.boot.loader.archive.ExplodedArchive (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.Launcher"         -> "org.springframework.boot.loader.archive.JarFileArchive (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.Launcher"         -> "org.springframework.boot.loader.jar.JarFile (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.Thread (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.reflect.Method (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.FileInputStream (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.PrintStream (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.UnsupportedEncodingException (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Boolean (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Character (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.NoSuchMethodException (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.reflect.Constructor (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.HttpURLConnection (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.URLDecoder (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Collection (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.LinkedHashSet (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Locale (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Properties (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Set (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.function.Supplier (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.regex.Matcher (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.regex.Pattern (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.archive.Archive (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.archive.Archive$EntryFilter (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.archive.ExplodedArchive (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.archive.JarFileArchive (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.util.SystemPropertyUtils (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.util.Assert (not found)";
   "org.springframework.boot.loader.PropertiesLauncher$1" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "org.springframework.boot.loader.archive.Archive (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "org.springframework.boot.loader.archive.Archive$Entry (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "org.springframework.boot.loader.archive.Archive$EntryFilter (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "org.springframework.boot.loader.archive.Archive (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "org.springframework.boot.loader.archive.Archive$Entry (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "org.springframework.boot.loader.archive.Archive$EntryFilter (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.WarLauncher"      -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.WarLauncher"      -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.WarLauncher"      -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.WarLauncher"      -> "org.springframework.boot.loader.archive.Archive (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.WarLauncher"      -> "org.springframework.boot.loader.archive.Archive$Entry (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.AutoCloseable (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.Deprecated (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.Iterable (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.util.List (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.archive.Archive$Entry" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.Archive$Entry" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.Archive$EntryFilter" -> "java.lang.FunctionalInterface (java.base)";
   "org.springframework.boot.loader.archive.Archive$EntryFilter" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.io.FileInputStream (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.Arrays (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.Collection (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.HashSet (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.Set (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.UnsupportedOperationException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Arrays (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Comparator (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Deque (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.LinkedList (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.NoSuchElementException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Set (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.function.Function (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$ArchiveIterator" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$ArchiveIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$EntryIterator" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$EntryIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.FileOutputStream (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.OutputStream (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.UUID (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "org.springframework.boot.loader.jar.JarFile (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.archive.JarFileArchive$AbstractIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$AbstractIterator" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$AbstractIterator" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$EntryIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$EntryIterator" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$EntryIterator" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$JarFileEntry" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$JarFileEntry" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$JarFileEntry" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.data.RandomAccessData" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessData" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.data.RandomAccessData" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.io.EOFException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.lang.IndexOutOfBoundsException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$1" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.lang.Math (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.lang.NullPointerException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.io.FileNotFoundException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.io.RandomAccessFile (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.IndexOutOfBoundsException (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.nio.charset.Charset (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.nio.charset.StandardCharsets (java.base)";
   "org.springframework.boot.loader.jar.Bytes"        -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.lang.Math (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "org.springframework.boot.loader.data.RandomAccessData (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$1" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64End" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64End" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64End" -> "org.springframework.boot.loader.data.RandomAccessData (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64Locator" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64Locator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64Locator" -> "org.springframework.boot.loader.data.RandomAccessData (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.CloneNotSupportedException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.Math (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.Instant (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.ZoneId (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.ZonedDateTime (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.temporal.ChronoField (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.temporal.ChronoUnit (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.temporal.TemporalUnit (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.temporal.ValueRange (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "org.springframework.boot.loader.data.RandomAccessData (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "org.springframework.boot.loader.data.RandomAccessData (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryVisitor" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryVisitor" -> "org.springframework.boot.loader.data.RandomAccessData (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.FileHeader"   -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.FileHeader"   -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.io.File (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.io.PrintStream (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.RuntimeException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.ref.SoftReference (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.URLStreamHandler (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.Map (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.concurrent.ConcurrentHashMap (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.logging.Level (java.logging)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.logging.Logger (java.logging)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.regex.Matcher (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.regex.Pattern (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.security.CodeSigner (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.security.cert.Certificate (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.jar.JarEntryFilter" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.io.File (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Error (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Iterable (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Runnable (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.RuntimeException (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.ref.SoftReference (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.URLStreamHandler (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.URLStreamHandlerFactory (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.Spliterator (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.Spliterators (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.function.Supplier (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.jar.JarFile (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.jar.JarInputStream (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.stream.Stream (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.stream.StreamSupport (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "org.springframework.boot.loader.data.RandomAccessData (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarFile"      -> "org.springframework.boot.loader.data.RandomAccessDataFile (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarFile$1"    -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile$1"    -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarFile$1"    -> "org.springframework.boot.loader.data.RandomAccessData (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarFile$JarEntryEnumeration" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarEntryEnumeration" -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarEntryEnumeration" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarEntryEnumeration" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarFileType" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarFileType" -> "java.lang.Enum (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarFileType" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarFileType" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Boolean (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Integer (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Iterable (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Runnable (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Runtime (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.reflect.Method (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.Arrays (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.Map (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.jar.Attributes$Name (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "org.springframework.boot.loader.data.RandomAccessData (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries$1" -> "java.lang.Integer (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$1" -> "java.util.LinkedHashMap (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$1" -> "java.util.Map (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$1" -> "java.util.Map$Entry (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.lang.Runnable (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.util.NoSuchElementException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.FileNotFoundException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.FilePermission (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.Boolean (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.Integer (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.ThreadLocal (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.net.JarURLConnection (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.net.URLStreamHandler (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.security.Permission (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.util.jar.JarFile (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "org.springframework.boot.loader.data.RandomAccessData (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "org.springframework.boot.loader.data.RandomAccessDataFile (submission-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection$1" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$1" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$1" -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$1" -> "java.net.URLStreamHandler (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.io.ByteArrayOutputStream (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.io.UnsupportedEncodingException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.Character (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.net.URLEncoder (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.lang.StringIndexOutOfBoundsException (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.util.Objects (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.io.EOFException (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.util.zip.Inflater (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.util.zip.InflaterInputStream (java.base)";
   "org.springframework.boot.loader.jarmode.JarMode"  -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jarmode.JarMode"  -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.io.PrintStream (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.Boolean (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "org.springframework.core.io.support.SpringFactoriesLoader (not found)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "org.springframework.util.ClassUtils (not found)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.io.PrintStream (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.util.Arrays (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.io.PrintStream (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.util.HashSet (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.util.Locale (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.util.Properties (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.util.Set (java.base)";
}
digraph "cwa-verification-server-1.1.0-SNAPSHOT.jar" {
    // Path: cwa-verification-server-1.1.0-SNAPSHOT.jar
   "app.coronawarn.verification.VerificationApplication" -> "java.lang.Class (java.base)";
   "app.coronawarn.verification.VerificationApplication" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.VerificationApplication" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.VerificationApplication" -> "org.springframework.boot.SpringApplication (not found)";
   "app.coronawarn.verification.VerificationApplication" -> "org.springframework.boot.autoconfigure.SpringBootApplication (not found)";
   "app.coronawarn.verification.VerificationApplication" -> "org.springframework.boot.context.properties.EnableConfigurationProperties (not found)";
   "app.coronawarn.verification.VerificationApplication" -> "org.springframework.cloud.openfeign.EnableFeignClients (not found)";
   "app.coronawarn.verification.VerificationApplication" -> "org.springframework.context.ConfigurableApplicationContext (not found)";
   "app.coronawarn.verification.VerificationApplication" -> "org.springframework.scheduling.annotation.EnableScheduling (not found)";
   "app.coronawarn.verification.VerificationApplication" -> "org.springframework.security.config.annotation.web.configuration.EnableWebSecurity (not found)";
   "app.coronawarn.verification.client.IamClient"     -> "app.coronawarn.verification.model.Certs (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.client.IamClient"     -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.client.IamClient"     -> "org.springframework.cloud.openfeign.FeignClient (not found)";
   "app.coronawarn.verification.client.IamClient"     -> "org.springframework.web.bind.annotation.GetMapping (not found)";
   "app.coronawarn.verification.client.TestResultServerClient" -> "app.coronawarn.verification.model.HashedGuid (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.client.TestResultServerClient" -> "app.coronawarn.verification.model.TestResult (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.client.TestResultServerClient" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.client.TestResultServerClient" -> "org.springframework.cloud.openfeign.FeignClient (not found)";
   "app.coronawarn.verification.client.TestResultServerClient" -> "org.springframework.web.bind.annotation.PostMapping (not found)";
   "app.coronawarn.verification.client.TestResultServerClientConfig" -> "feign.Client (not found)";
   "app.coronawarn.verification.client.TestResultServerClientConfig" -> "feign.httpclient.ApacheHttpClient (not found)";
   "app.coronawarn.verification.client.TestResultServerClientConfig" -> "java.io.File (java.base)";
   "app.coronawarn.verification.client.TestResultServerClientConfig" -> "java.io.IOException (java.base)";
   "app.coronawarn.verification.client.TestResultServerClientConfig" -> "java.lang.Exception (java.base)";
   "app.coronawarn.verification.client.TestResultServerClientConfig" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.client.TestResultServerClientConfig" -> "java.lang.RuntimeException (java.base)";
   "app.coronawarn.verification.client.TestResultServerClientConfig" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.client.TestResultServerClientConfig" -> "java.lang.Throwable (java.base)";
   "app.coronawarn.verification.client.TestResultServerClientConfig" -> "java.security.GeneralSecurityException (java.base)";
   "app.coronawarn.verification.client.TestResultServerClientConfig" -> "javax.net.ssl.HostnameVerifier (java.base)";
   "app.coronawarn.verification.client.TestResultServerClientConfig" -> "javax.net.ssl.SSLContext (java.base)";
   "app.coronawarn.verification.client.TestResultServerClientConfig" -> "org.apache.http.client.HttpClient (not found)";
   "app.coronawarn.verification.client.TestResultServerClientConfig" -> "org.apache.http.conn.ssl.DefaultHostnameVerifier (not found)";
   "app.coronawarn.verification.client.TestResultServerClientConfig" -> "org.apache.http.conn.ssl.NoopHostnameVerifier (not found)";
   "app.coronawarn.verification.client.TestResultServerClientConfig" -> "org.apache.http.impl.client.CloseableHttpClient (not found)";
   "app.coronawarn.verification.client.TestResultServerClientConfig" -> "org.apache.http.impl.client.HttpClientBuilder (not found)";
   "app.coronawarn.verification.client.TestResultServerClientConfig" -> "org.apache.http.ssl.SSLContextBuilder (not found)";
   "app.coronawarn.verification.client.TestResultServerClientConfig" -> "org.springframework.beans.factory.annotation.Value (not found)";
   "app.coronawarn.verification.client.TestResultServerClientConfig" -> "org.springframework.context.annotation.Bean (not found)";
   "app.coronawarn.verification.client.TestResultServerClientConfig" -> "org.springframework.context.annotation.Configuration (not found)";
   "app.coronawarn.verification.client.TestResultServerClientConfig" -> "org.springframework.util.ResourceUtils (not found)";
   "app.coronawarn.verification.config.OpenApiConfig" -> "io.swagger.v3.oas.models.OpenAPI (not found)";
   "app.coronawarn.verification.config.OpenApiConfig" -> "io.swagger.v3.oas.models.info.Info (not found)";
   "app.coronawarn.verification.config.OpenApiConfig" -> "io.swagger.v3.oas.models.info.License (not found)";
   "app.coronawarn.verification.config.OpenApiConfig" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.config.OpenApiConfig" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.config.OpenApiConfig" -> "org.springframework.boot.info.BuildProperties (not found)";
   "app.coronawarn.verification.config.OpenApiConfig" -> "org.springframework.context.annotation.Bean (not found)";
   "app.coronawarn.verification.config.OpenApiConfig" -> "org.springframework.context.annotation.Configuration (not found)";
   "app.coronawarn.verification.config.SecurityConfig" -> "java.lang.Exception (java.base)";
   "app.coronawarn.verification.config.SecurityConfig" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.config.SecurityConfig" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.config.SecurityConfig" -> "java.util.Arrays (java.base)";
   "app.coronawarn.verification.config.SecurityConfig" -> "java.util.Collection (java.base)";
   "app.coronawarn.verification.config.SecurityConfig" -> "java.util.List (java.base)";
   "app.coronawarn.verification.config.SecurityConfig" -> "org.springframework.context.annotation.Bean (not found)";
   "app.coronawarn.verification.config.SecurityConfig" -> "org.springframework.context.annotation.Configuration (not found)";
   "app.coronawarn.verification.config.SecurityConfig" -> "org.springframework.http.HttpMethod (not found)";
   "app.coronawarn.verification.config.SecurityConfig" -> "org.springframework.security.config.annotation.web.HttpSecurityBuilder (not found)";
   "app.coronawarn.verification.config.SecurityConfig" -> "org.springframework.security.config.annotation.web.builders.HttpSecurity (not found)";
   "app.coronawarn.verification.config.SecurityConfig" -> "org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter (not found)";
   "app.coronawarn.verification.config.SecurityConfig" -> "org.springframework.security.config.annotation.web.configurers.CsrfConfigurer (not found)";
   "app.coronawarn.verification.config.SecurityConfig" -> "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer (not found)";
   "app.coronawarn.verification.config.SecurityConfig" -> "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$AuthorizedUrl (not found)";
   "app.coronawarn.verification.config.SecurityConfig" -> "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry (not found)";
   "app.coronawarn.verification.config.SecurityConfig" -> "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$MvcMatchersAuthorizedUrl (not found)";
   "app.coronawarn.verification.config.SecurityConfig" -> "org.springframework.security.web.firewall.HttpFirewall (not found)";
   "app.coronawarn.verification.config.SecurityConfig" -> "org.springframework.security.web.firewall.StrictHttpFirewall (not found)";
   "app.coronawarn.verification.config.VerificationApplicationConfig" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.config.VerificationApplicationConfig" -> "org.springframework.boot.context.properties.ConfigurationProperties (not found)";
   "app.coronawarn.verification.config.VerificationApplicationConfig$AppSession" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.config.VerificationApplicationConfig$Entities" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.config.VerificationApplicationConfig$Entities$Cleanup" -> "java.lang.Integer (java.base)";
   "app.coronawarn.verification.config.VerificationApplicationConfig$Entities$Cleanup" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.config.VerificationApplicationConfig$Jwt" -> "java.lang.Boolean (java.base)";
   "app.coronawarn.verification.config.VerificationApplicationConfig$Jwt" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.config.VerificationApplicationConfig$Jwt" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.config.VerificationApplicationConfig$Tan" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.config.VerificationApplicationConfig$Tan$Tele" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.config.VerificationApplicationConfig$Tan$Tele$Valid" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.config.VerificationApplicationConfig$Tan$Tele$Valid" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.config.VerificationApplicationConfig$Tan$Valid" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.controller.VerificationController" -> "app.coronawarn.verification.config.VerificationApplicationConfig (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.controller.VerificationController" -> "app.coronawarn.verification.config.VerificationApplicationConfig$AppSession (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.controller.VerificationController" -> "app.coronawarn.verification.domain.VerificationAppSession (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.controller.VerificationController" -> "app.coronawarn.verification.domain.VerificationTan (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.controller.VerificationController" -> "app.coronawarn.verification.exception.VerificationServerException (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.controller.VerificationController" -> "app.coronawarn.verification.model.AppSessionSourceOfTrust (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.controller.VerificationController" -> "app.coronawarn.verification.model.AuthorizationToken (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.controller.VerificationController" -> "app.coronawarn.verification.model.HashedGuid (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.controller.VerificationController" -> "app.coronawarn.verification.model.LabTestResult (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.controller.VerificationController" -> "app.coronawarn.verification.model.RegistrationToken (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.controller.VerificationController" -> "app.coronawarn.verification.model.RegistrationTokenKeyType (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.controller.VerificationController" -> "app.coronawarn.verification.model.RegistrationTokenRequest (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.controller.VerificationController" -> "app.coronawarn.verification.model.Tan (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.controller.VerificationController" -> "app.coronawarn.verification.model.TanSourceOfTrust (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.controller.VerificationController" -> "app.coronawarn.verification.model.TeleTan (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.controller.VerificationController" -> "app.coronawarn.verification.model.TestResult (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.controller.VerificationController" -> "app.coronawarn.verification.service.AppSessionService (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.controller.VerificationController" -> "app.coronawarn.verification.service.JwtService (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.controller.VerificationController" -> "app.coronawarn.verification.service.TanService (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.controller.VerificationController" -> "app.coronawarn.verification.service.TestResultServerService (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.controller.VerificationController" -> "io.swagger.v3.oas.annotations.Operation (not found)";
   "app.coronawarn.verification.controller.VerificationController" -> "io.swagger.v3.oas.annotations.responses.ApiResponses (not found)";
   "app.coronawarn.verification.controller.VerificationController" -> "java.lang.Class (java.base)";
   "app.coronawarn.verification.controller.VerificationController" -> "java.lang.NullPointerException (java.base)";
   "app.coronawarn.verification.controller.VerificationController" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.controller.VerificationController" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.controller.VerificationController" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.verification.controller.VerificationController" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.verification.controller.VerificationController" -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.verification.controller.VerificationController" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.verification.controller.VerificationController" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.verification.controller.VerificationController" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.verification.controller.VerificationController" -> "java.time.LocalDateTime (java.base)";
   "app.coronawarn.verification.controller.VerificationController" -> "java.util.Optional (java.base)";
   "app.coronawarn.verification.controller.VerificationController" -> "java.util.function.Function (java.base)";
   "app.coronawarn.verification.controller.VerificationController" -> "java.util.function.Predicate (java.base)";
   "app.coronawarn.verification.controller.VerificationController" -> "java.util.function.Supplier (java.base)";
   "app.coronawarn.verification.controller.VerificationController" -> "javax.validation.Valid (not found)";
   "app.coronawarn.verification.controller.VerificationController" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.verification.controller.VerificationController" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.verification.controller.VerificationController" -> "org.springframework.http.HttpStatus (not found)";
   "app.coronawarn.verification.controller.VerificationController" -> "org.springframework.http.ResponseEntity (not found)";
   "app.coronawarn.verification.controller.VerificationController" -> "org.springframework.http.ResponseEntity$BodyBuilder (not found)";
   "app.coronawarn.verification.controller.VerificationController" -> "org.springframework.validation.annotation.Validated (not found)";
   "app.coronawarn.verification.controller.VerificationController" -> "org.springframework.web.bind.annotation.PostMapping (not found)";
   "app.coronawarn.verification.controller.VerificationController" -> "org.springframework.web.bind.annotation.RequestBody (not found)";
   "app.coronawarn.verification.controller.VerificationController" -> "org.springframework.web.bind.annotation.RequestHeader (not found)";
   "app.coronawarn.verification.controller.VerificationController" -> "org.springframework.web.bind.annotation.RequestMapping (not found)";
   "app.coronawarn.verification.controller.VerificationController" -> "org.springframework.web.bind.annotation.RestController (not found)";
   "app.coronawarn.verification.controller.VerificationController$1" -> "app.coronawarn.verification.model.AppSessionSourceOfTrust (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.controller.VerificationController$1" -> "app.coronawarn.verification.model.RegistrationTokenKeyType (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.controller.VerificationController$1" -> "java.lang.NoSuchFieldError (java.base)";
   "app.coronawarn.verification.controller.VerificationController$1" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.controller.VerificationExceptionHandler" -> "app.coronawarn.verification.exception.VerificationServerException (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.controller.VerificationExceptionHandler" -> "java.lang.Class (java.base)";
   "app.coronawarn.verification.controller.VerificationExceptionHandler" -> "java.lang.Exception (java.base)";
   "app.coronawarn.verification.controller.VerificationExceptionHandler" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.controller.VerificationExceptionHandler" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.controller.VerificationExceptionHandler" -> "java.lang.Void (java.base)";
   "app.coronawarn.verification.controller.VerificationExceptionHandler" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.verification.controller.VerificationExceptionHandler" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.verification.controller.VerificationExceptionHandler" -> "org.springframework.http.HttpStatus (not found)";
   "app.coronawarn.verification.controller.VerificationExceptionHandler" -> "org.springframework.http.ResponseEntity (not found)";
   "app.coronawarn.verification.controller.VerificationExceptionHandler" -> "org.springframework.http.ResponseEntity$BodyBuilder (not found)";
   "app.coronawarn.verification.controller.VerificationExceptionHandler" -> "org.springframework.web.bind.annotation.ExceptionHandler (not found)";
   "app.coronawarn.verification.controller.VerificationExceptionHandler" -> "org.springframework.web.bind.annotation.ResponseStatus (not found)";
   "app.coronawarn.verification.controller.VerificationExceptionHandler" -> "org.springframework.web.bind.annotation.RestControllerAdvice (not found)";
   "app.coronawarn.verification.controller.VerificationExceptionHandler" -> "org.springframework.web.context.request.WebRequest (not found)";
   "app.coronawarn.verification.domain.VerificationAppSession" -> "app.coronawarn.verification.model.AppSessionSourceOfTrust (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.domain.VerificationAppSession" -> "java.io.Serializable (java.base)";
   "app.coronawarn.verification.domain.VerificationAppSession" -> "java.lang.Long (java.base)";
   "app.coronawarn.verification.domain.VerificationAppSession" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.domain.VerificationAppSession" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.domain.VerificationAppSession" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.verification.domain.VerificationAppSession" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.verification.domain.VerificationAppSession" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.verification.domain.VerificationAppSession" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.verification.domain.VerificationAppSession" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.verification.domain.VerificationAppSession" -> "java.time.LocalDateTime (java.base)";
   "app.coronawarn.verification.domain.VerificationAppSession" -> "javax.persistence.Column (not found)";
   "app.coronawarn.verification.domain.VerificationAppSession" -> "javax.persistence.Entity (not found)";
   "app.coronawarn.verification.domain.VerificationAppSession" -> "javax.persistence.Enumerated (not found)";
   "app.coronawarn.verification.domain.VerificationAppSession" -> "javax.persistence.GeneratedValue (not found)";
   "app.coronawarn.verification.domain.VerificationAppSession" -> "javax.persistence.Id (not found)";
   "app.coronawarn.verification.domain.VerificationAppSession" -> "javax.persistence.Table (not found)";
   "app.coronawarn.verification.domain.VerificationAppSession" -> "javax.persistence.Version (not found)";
   "app.coronawarn.verification.domain.VerificationTan" -> "app.coronawarn.verification.model.TanSourceOfTrust (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.domain.VerificationTan" -> "java.io.Serializable (java.base)";
   "app.coronawarn.verification.domain.VerificationTan" -> "java.lang.Long (java.base)";
   "app.coronawarn.verification.domain.VerificationTan" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.domain.VerificationTan" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.domain.VerificationTan" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.verification.domain.VerificationTan" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.verification.domain.VerificationTan" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.verification.domain.VerificationTan" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.verification.domain.VerificationTan" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.verification.domain.VerificationTan" -> "java.time.LocalDateTime (java.base)";
   "app.coronawarn.verification.domain.VerificationTan" -> "java.time.chrono.ChronoLocalDateTime (java.base)";
   "app.coronawarn.verification.domain.VerificationTan" -> "javax.persistence.Column (not found)";
   "app.coronawarn.verification.domain.VerificationTan" -> "javax.persistence.Entity (not found)";
   "app.coronawarn.verification.domain.VerificationTan" -> "javax.persistence.Enumerated (not found)";
   "app.coronawarn.verification.domain.VerificationTan" -> "javax.persistence.GeneratedValue (not found)";
   "app.coronawarn.verification.domain.VerificationTan" -> "javax.persistence.Id (not found)";
   "app.coronawarn.verification.domain.VerificationTan" -> "javax.persistence.Table (not found)";
   "app.coronawarn.verification.domain.VerificationTan" -> "javax.persistence.Version (not found)";
   "app.coronawarn.verification.exception.VerificationServerException" -> "java.lang.RuntimeException (java.base)";
   "app.coronawarn.verification.exception.VerificationServerException" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.exception.VerificationServerException" -> "org.springframework.http.HttpStatus (not found)";
   "app.coronawarn.verification.model.AppSessionSourceOfTrust" -> "java.lang.Class (java.base)";
   "app.coronawarn.verification.model.AppSessionSourceOfTrust" -> "java.lang.Enum (java.base)";
   "app.coronawarn.verification.model.AppSessionSourceOfTrust" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.model.AppSessionSourceOfTrust" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.model.AuthorizationRole" -> "java.lang.Class (java.base)";
   "app.coronawarn.verification.model.AuthorizationRole" -> "java.lang.Enum (java.base)";
   "app.coronawarn.verification.model.AuthorizationRole" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.model.AuthorizationRole" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.model.AuthorizationToken" -> "io.swagger.v3.oas.annotations.media.Schema (not found)";
   "app.coronawarn.verification.model.AuthorizationToken" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.model.AuthorizationToken" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.model.AuthorizationToken" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.verification.model.AuthorizationToken" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.verification.model.AuthorizationToken" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.verification.model.AuthorizationToken" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.verification.model.AuthorizationToken" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.verification.model.AuthorizationToken" -> "javax.validation.constraints.NotNull (not found)";
   "app.coronawarn.verification.model.Certs"          -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.model.Certs"          -> "java.lang.String (java.base)";
   "app.coronawarn.verification.model.Certs"          -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.verification.model.Certs"          -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.verification.model.Certs"          -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.verification.model.Certs"          -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.verification.model.Certs"          -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.verification.model.Certs"          -> "java.util.HashMap (java.base)";
   "app.coronawarn.verification.model.Certs"          -> "java.util.List (java.base)";
   "app.coronawarn.verification.model.Certs"          -> "java.util.Map (java.base)";
   "app.coronawarn.verification.model.HashedGuid"     -> "io.swagger.v3.oas.annotations.media.Schema (not found)";
   "app.coronawarn.verification.model.HashedGuid"     -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.model.HashedGuid"     -> "java.lang.String (java.base)";
   "app.coronawarn.verification.model.HashedGuid"     -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.verification.model.HashedGuid"     -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.verification.model.HashedGuid"     -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.verification.model.HashedGuid"     -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.verification.model.HashedGuid"     -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.verification.model.Key"            -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.model.Key"            -> "java.lang.String (java.base)";
   "app.coronawarn.verification.model.Key"            -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.verification.model.Key"            -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.verification.model.Key"            -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.verification.model.Key"            -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.verification.model.Key"            -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.verification.model.Key"            -> "java.util.HashMap (java.base)";
   "app.coronawarn.verification.model.Key"            -> "java.util.List (java.base)";
   "app.coronawarn.verification.model.Key"            -> "java.util.Map (java.base)";
   "app.coronawarn.verification.model.LabTestResult"  -> "io.swagger.v3.oas.annotations.media.Schema (not found)";
   "app.coronawarn.verification.model.LabTestResult"  -> "java.lang.Class (java.base)";
   "app.coronawarn.verification.model.LabTestResult"  -> "java.lang.Enum (java.base)";
   "app.coronawarn.verification.model.LabTestResult"  -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.model.LabTestResult"  -> "java.lang.String (java.base)";
   "app.coronawarn.verification.model.RegistrationToken" -> "io.swagger.v3.oas.annotations.media.Schema (not found)";
   "app.coronawarn.verification.model.RegistrationToken" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.model.RegistrationToken" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.model.RegistrationToken" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.verification.model.RegistrationToken" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.verification.model.RegistrationToken" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.verification.model.RegistrationToken" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.verification.model.RegistrationToken" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.verification.model.RegistrationToken" -> "javax.validation.constraints.NotNull (not found)";
   "app.coronawarn.verification.model.RegistrationToken" -> "javax.validation.constraints.Pattern (not found)";
   "app.coronawarn.verification.model.RegistrationTokenKeyType" -> "java.lang.Class (java.base)";
   "app.coronawarn.verification.model.RegistrationTokenKeyType" -> "java.lang.Enum (java.base)";
   "app.coronawarn.verification.model.RegistrationTokenKeyType" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.model.RegistrationTokenKeyType" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.model.RegistrationTokenRequest" -> "io.swagger.v3.oas.annotations.media.Schema (not found)";
   "app.coronawarn.verification.model.RegistrationTokenRequest" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.model.RegistrationTokenRequest" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.model.RegistrationTokenRequest" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.verification.model.RegistrationTokenRequest" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.verification.model.RegistrationTokenRequest" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.verification.model.RegistrationTokenRequest" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.verification.model.RegistrationTokenRequest" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.verification.model.RegistrationTokenRequest" -> "javax.validation.constraints.NotNull (not found)";
   "app.coronawarn.verification.model.Tan"            -> "io.swagger.v3.oas.annotations.media.Schema (not found)";
   "app.coronawarn.verification.model.Tan"            -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.model.Tan"            -> "java.lang.String (java.base)";
   "app.coronawarn.verification.model.Tan"            -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.verification.model.Tan"            -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.verification.model.Tan"            -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.verification.model.Tan"            -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.verification.model.Tan"            -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.verification.model.Tan"            -> "javax.validation.constraints.NotNull (not found)";
   "app.coronawarn.verification.model.Tan"            -> "javax.validation.constraints.Pattern (not found)";
   "app.coronawarn.verification.model.TanSourceOfTrust" -> "java.lang.Class (java.base)";
   "app.coronawarn.verification.model.TanSourceOfTrust" -> "java.lang.Enum (java.base)";
   "app.coronawarn.verification.model.TanSourceOfTrust" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.model.TanSourceOfTrust" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.model.TanType"        -> "io.swagger.v3.oas.annotations.media.Schema (not found)";
   "app.coronawarn.verification.model.TanType"        -> "java.lang.Class (java.base)";
   "app.coronawarn.verification.model.TanType"        -> "java.lang.Enum (java.base)";
   "app.coronawarn.verification.model.TanType"        -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.model.TanType"        -> "java.lang.String (java.base)";
   "app.coronawarn.verification.model.TeleTan"        -> "io.swagger.v3.oas.annotations.media.Schema (not found)";
   "app.coronawarn.verification.model.TeleTan"        -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.model.TeleTan"        -> "java.lang.String (java.base)";
   "app.coronawarn.verification.model.TeleTan"        -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.verification.model.TeleTan"        -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.verification.model.TeleTan"        -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.verification.model.TeleTan"        -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.verification.model.TeleTan"        -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.verification.model.TestResult"     -> "io.swagger.v3.oas.annotations.media.Schema (not found)";
   "app.coronawarn.verification.model.TestResult"     -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.model.TestResult"     -> "java.lang.String (java.base)";
   "app.coronawarn.verification.model.TestResult"     -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.verification.model.TestResult"     -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.verification.model.TestResult"     -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.verification.model.TestResult"     -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.verification.model.TestResult"     -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.verification.repository.VerificationAppSessionRepository" -> "app.coronawarn.verification.domain.VerificationAppSession (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.repository.VerificationAppSessionRepository" -> "java.lang.Long (java.base)";
   "app.coronawarn.verification.repository.VerificationAppSessionRepository" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.repository.VerificationAppSessionRepository" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.repository.VerificationAppSessionRepository" -> "java.time.LocalDateTime (java.base)";
   "app.coronawarn.verification.repository.VerificationAppSessionRepository" -> "java.util.Optional (java.base)";
   "app.coronawarn.verification.repository.VerificationAppSessionRepository" -> "org.springframework.data.jpa.repository.JpaRepository (not found)";
   "app.coronawarn.verification.repository.VerificationTanRepository" -> "app.coronawarn.verification.domain.VerificationTan (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.repository.VerificationTanRepository" -> "java.lang.Long (java.base)";
   "app.coronawarn.verification.repository.VerificationTanRepository" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.repository.VerificationTanRepository" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.repository.VerificationTanRepository" -> "java.time.LocalDateTime (java.base)";
   "app.coronawarn.verification.repository.VerificationTanRepository" -> "java.util.Optional (java.base)";
   "app.coronawarn.verification.repository.VerificationTanRepository" -> "org.springframework.data.jpa.repository.JpaRepository (not found)";
   "app.coronawarn.verification.service.AppSessionService" -> "app.coronawarn.verification.domain.VerificationAppSession (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.AppSessionService" -> "app.coronawarn.verification.model.AppSessionSourceOfTrust (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.AppSessionService" -> "app.coronawarn.verification.model.RegistrationToken (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.AppSessionService" -> "app.coronawarn.verification.model.RegistrationTokenKeyType (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.AppSessionService" -> "app.coronawarn.verification.repository.VerificationAppSessionRepository (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.AppSessionService" -> "java.lang.Class (java.base)";
   "app.coronawarn.verification.service.AppSessionService" -> "java.lang.NullPointerException (java.base)";
   "app.coronawarn.verification.service.AppSessionService" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.service.AppSessionService" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.service.AppSessionService" -> "java.time.LocalDateTime (java.base)";
   "app.coronawarn.verification.service.AppSessionService" -> "java.util.Optional (java.base)";
   "app.coronawarn.verification.service.AppSessionService" -> "java.util.UUID (java.base)";
   "app.coronawarn.verification.service.AppSessionService" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.verification.service.AppSessionService" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.verification.service.AppSessionService" -> "org.springframework.http.HttpStatus (not found)";
   "app.coronawarn.verification.service.AppSessionService" -> "org.springframework.http.ResponseEntity (not found)";
   "app.coronawarn.verification.service.AppSessionService" -> "org.springframework.http.ResponseEntity$BodyBuilder (not found)";
   "app.coronawarn.verification.service.AppSessionService" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.verification.service.AppSessionService$1" -> "app.coronawarn.verification.model.RegistrationTokenKeyType (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.AppSessionService$1" -> "java.lang.NoSuchFieldError (java.base)";
   "app.coronawarn.verification.service.AppSessionService$1" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.service.EntitiesCleanupService" -> "app.coronawarn.verification.config.VerificationApplicationConfig (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.EntitiesCleanupService" -> "app.coronawarn.verification.config.VerificationApplicationConfig$Entities (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.EntitiesCleanupService" -> "app.coronawarn.verification.config.VerificationApplicationConfig$Entities$Cleanup (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.EntitiesCleanupService" -> "app.coronawarn.verification.repository.VerificationAppSessionRepository (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.EntitiesCleanupService" -> "app.coronawarn.verification.repository.VerificationTanRepository (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.EntitiesCleanupService" -> "java.lang.Class (java.base)";
   "app.coronawarn.verification.service.EntitiesCleanupService" -> "java.lang.Integer (java.base)";
   "app.coronawarn.verification.service.EntitiesCleanupService" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.service.EntitiesCleanupService" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.service.EntitiesCleanupService" -> "java.time.LocalDateTime (java.base)";
   "app.coronawarn.verification.service.EntitiesCleanupService" -> "java.time.Period (java.base)";
   "app.coronawarn.verification.service.EntitiesCleanupService" -> "java.time.temporal.TemporalAmount (java.base)";
   "app.coronawarn.verification.service.EntitiesCleanupService" -> "javax.transaction.Transactional (not found)";
   "app.coronawarn.verification.service.EntitiesCleanupService" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.verification.service.EntitiesCleanupService" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.verification.service.EntitiesCleanupService" -> "org.springframework.scheduling.annotation.Scheduled (not found)";
   "app.coronawarn.verification.service.EntitiesCleanupService" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.verification.service.HashingService" -> "java.lang.CharSequence (java.base)";
   "app.coronawarn.verification.service.HashingService" -> "java.lang.Class (java.base)";
   "app.coronawarn.verification.service.HashingService" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.service.HashingService" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.service.HashingService" -> "java.util.regex.Matcher (java.base)";
   "app.coronawarn.verification.service.HashingService" -> "java.util.regex.Pattern (java.base)";
   "app.coronawarn.verification.service.HashingService" -> "org.apache.commons.codec.digest.DigestUtils (not found)";
   "app.coronawarn.verification.service.HashingService" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.verification.service.HashingService" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.verification.service.HashingService" -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.verification.service.JwtService"   -> "app.coronawarn.verification.client.IamClient (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.JwtService"   -> "app.coronawarn.verification.config.VerificationApplicationConfig (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.JwtService"   -> "app.coronawarn.verification.config.VerificationApplicationConfig$Jwt (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.JwtService"   -> "app.coronawarn.verification.model.AuthorizationRole (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.JwtService"   -> "app.coronawarn.verification.model.Certs (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.JwtService"   -> "app.coronawarn.verification.model.Key (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.JwtService"   -> "io.jsonwebtoken.Claims (not found)";
   "app.coronawarn.verification.service.JwtService"   -> "io.jsonwebtoken.Jws (not found)";
   "app.coronawarn.verification.service.JwtService"   -> "io.jsonwebtoken.JwtException (not found)";
   "app.coronawarn.verification.service.JwtService"   -> "io.jsonwebtoken.JwtParser (not found)";
   "app.coronawarn.verification.service.JwtService"   -> "io.jsonwebtoken.Jwts (not found)";
   "app.coronawarn.verification.service.JwtService"   -> "java.lang.Boolean (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.lang.Class (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.lang.NullPointerException (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.lang.String (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.security.GeneralSecurityException (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.security.Key (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.security.KeyFactory (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.security.NoSuchAlgorithmException (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.security.PublicKey (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.security.spec.InvalidKeySpecException (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.security.spec.KeySpec (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.security.spec.X509EncodedKeySpec (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.util.ArrayList (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.util.Base64 (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.util.Base64$Decoder (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.util.Iterator (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.util.List (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.util.Map (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "java.util.function.Function (java.base)";
   "app.coronawarn.verification.service.JwtService"   -> "org.slf4j.Logger (not found)";
   "app.coronawarn.verification.service.JwtService"   -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.verification.service.JwtService"   -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.verification.service.TanService"   -> "app.coronawarn.verification.config.VerificationApplicationConfig (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.TanService"   -> "app.coronawarn.verification.config.VerificationApplicationConfig$Tan (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.TanService"   -> "app.coronawarn.verification.config.VerificationApplicationConfig$Tan$Tele (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.TanService"   -> "app.coronawarn.verification.config.VerificationApplicationConfig$Tan$Tele$Valid (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.TanService"   -> "app.coronawarn.verification.config.VerificationApplicationConfig$Tan$Valid (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.TanService"   -> "app.coronawarn.verification.domain.VerificationTan (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.TanService"   -> "app.coronawarn.verification.model.TanSourceOfTrust (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.TanService"   -> "app.coronawarn.verification.model.TanType (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.TanService"   -> "app.coronawarn.verification.repository.VerificationTanRepository (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.TanService"   -> "java.lang.CharSequence (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.lang.Character (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.lang.Class (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.lang.NullPointerException (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.lang.String (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.lang.StringBuilder (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.security.SecureRandom (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.time.LocalDateTime (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.util.Optional (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.util.UUID (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.util.function.BiConsumer (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.util.function.BinaryOperator (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.util.function.Function (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.util.function.IntFunction (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.util.function.Supplier (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.util.regex.Matcher (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.util.regex.Pattern (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.util.stream.Collector (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.util.stream.Collector$Characteristics (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.util.stream.IntStream (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "java.util.stream.Stream (java.base)";
   "app.coronawarn.verification.service.TanService"   -> "org.slf4j.Logger (not found)";
   "app.coronawarn.verification.service.TanService"   -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.verification.service.TanService"   -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.verification.service.TanService$Holder" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.service.TanService$Holder" -> "java.security.SecureRandom (java.base)";
   "app.coronawarn.verification.service.TestResultServerService" -> "app.coronawarn.verification.client.TestResultServerClient (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.TestResultServerService" -> "app.coronawarn.verification.model.HashedGuid (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.TestResultServerService" -> "app.coronawarn.verification.model.TestResult (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.verification.service.TestResultServerService" -> "java.lang.Class (java.base)";
   "app.coronawarn.verification.service.TestResultServerService" -> "java.lang.NullPointerException (java.base)";
   "app.coronawarn.verification.service.TestResultServerService" -> "java.lang.Object (java.base)";
   "app.coronawarn.verification.service.TestResultServerService" -> "java.lang.String (java.base)";
   "app.coronawarn.verification.service.TestResultServerService" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.verification.service.TestResultServerService" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.verification.service.TestResultServerService" -> "org.springframework.stereotype.Component (not found)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.BufferedReader (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.FileInputStream (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.InputStreamReader (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.Reader (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.net.URISyntaxException (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.nio.charset.Charset (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.nio.charset.StandardCharsets (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.function.Function (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.stream.Collector (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.stream.Collectors (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.stream.Stream (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.Collection (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "org.springframework.boot.loader.archive.Archive (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "org.springframework.boot.loader.archive.Archive$Entry (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "org.springframework.boot.loader.archive.Archive$EntryFilter (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "org.springframework.boot.loader.archive.Archive (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.JarLauncher"      -> "org.springframework.boot.loader.archive.Archive$Entry (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.JarLauncher"      -> "org.springframework.boot.loader.archive.Archive$EntryFilter (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.JarLauncher"      -> "org.springframework.boot.loader.archive.ExplodedArchive (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.io.ByteArrayOutputStream (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.AssertionError (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.ClassNotFoundException (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Package (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.net.JarURLConnection (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.net.URLClassLoader (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.security.AccessControlContext (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.security.AccessController (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.security.PrivilegedActionException (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.security.PrivilegedExceptionAction (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.util.jar.JarFile (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "org.springframework.boot.loader.jar.Handler (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "org.springframework.boot.loader.jar.JarFile (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "org.springframework.boot.loader.jar.Handler (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.Launcher"         -> "java.io.File (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Deprecated (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Thread (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.security.CodeSource (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.security.ProtectionDomain (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.util.List (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "org.springframework.boot.loader.archive.Archive (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.Launcher"         -> "org.springframework.boot.loader.archive.ExplodedArchive (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.Launcher"         -> "org.springframework.boot.loader.archive.JarFileArchive (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.Launcher"         -> "org.springframework.boot.loader.jar.JarFile (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.Thread (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.reflect.Method (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.FileInputStream (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.PrintStream (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.UnsupportedEncodingException (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Boolean (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Character (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.NoSuchMethodException (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.reflect.Constructor (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.HttpURLConnection (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.URLDecoder (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Collection (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.LinkedHashSet (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Locale (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Properties (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Set (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.function.Supplier (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.regex.Matcher (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.regex.Pattern (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.archive.Archive (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.archive.Archive$EntryFilter (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.archive.ExplodedArchive (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.archive.JarFileArchive (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.util.SystemPropertyUtils (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.util.Assert (not found)";
   "org.springframework.boot.loader.PropertiesLauncher$1" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "org.springframework.boot.loader.archive.Archive (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "org.springframework.boot.loader.archive.Archive$Entry (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "org.springframework.boot.loader.archive.Archive$EntryFilter (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "org.springframework.boot.loader.archive.Archive (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "org.springframework.boot.loader.archive.Archive$Entry (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "org.springframework.boot.loader.archive.Archive$EntryFilter (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.WarLauncher"      -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.WarLauncher"      -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.WarLauncher"      -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.WarLauncher"      -> "org.springframework.boot.loader.archive.Archive (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.WarLauncher"      -> "org.springframework.boot.loader.archive.Archive$Entry (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.AutoCloseable (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.Deprecated (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.Iterable (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.util.List (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.archive.Archive$Entry" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.Archive$Entry" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.Archive$EntryFilter" -> "java.lang.FunctionalInterface (java.base)";
   "org.springframework.boot.loader.archive.Archive$EntryFilter" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.io.FileInputStream (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.Arrays (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.Collection (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.HashSet (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.Set (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.UnsupportedOperationException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Arrays (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Comparator (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Deque (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.LinkedList (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.NoSuchElementException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Set (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.function.Function (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$ArchiveIterator" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$ArchiveIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$EntryIterator" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$EntryIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.FileOutputStream (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.OutputStream (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.UUID (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "org.springframework.boot.loader.jar.JarFile (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.archive.JarFileArchive$AbstractIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$AbstractIterator" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$AbstractIterator" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$EntryIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$EntryIterator" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$EntryIterator" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$JarFileEntry" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$JarFileEntry" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$JarFileEntry" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.data.RandomAccessData" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessData" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.data.RandomAccessData" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.io.EOFException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.lang.IndexOutOfBoundsException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$1" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.lang.Math (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.lang.NullPointerException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.io.FileNotFoundException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.io.RandomAccessFile (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.IndexOutOfBoundsException (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.nio.charset.Charset (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.nio.charset.StandardCharsets (java.base)";
   "org.springframework.boot.loader.jar.Bytes"        -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.lang.Math (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "org.springframework.boot.loader.data.RandomAccessData (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$1" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64End" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64End" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64End" -> "org.springframework.boot.loader.data.RandomAccessData (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64Locator" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64Locator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64Locator" -> "org.springframework.boot.loader.data.RandomAccessData (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.CloneNotSupportedException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.Math (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.Instant (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.ZoneId (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.ZonedDateTime (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.temporal.ChronoField (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.temporal.ChronoUnit (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.temporal.TemporalUnit (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.temporal.ValueRange (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "org.springframework.boot.loader.data.RandomAccessData (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "org.springframework.boot.loader.data.RandomAccessData (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryVisitor" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryVisitor" -> "org.springframework.boot.loader.data.RandomAccessData (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.FileHeader"   -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.FileHeader"   -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.io.File (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.io.PrintStream (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.RuntimeException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.ref.SoftReference (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.URLStreamHandler (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.Map (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.concurrent.ConcurrentHashMap (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.logging.Level (java.logging)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.logging.Logger (java.logging)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.regex.Matcher (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.regex.Pattern (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.security.CodeSigner (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.security.cert.Certificate (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.jar.JarEntryFilter" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.io.File (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Error (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Iterable (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Runnable (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.RuntimeException (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.ref.SoftReference (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.URLStreamHandler (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.URLStreamHandlerFactory (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.Spliterator (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.Spliterators (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.function.Supplier (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.jar.JarFile (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.jar.JarInputStream (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.stream.Stream (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.stream.StreamSupport (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "org.springframework.boot.loader.data.RandomAccessData (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarFile"      -> "org.springframework.boot.loader.data.RandomAccessDataFile (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarFile$1"    -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile$1"    -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarFile$1"    -> "org.springframework.boot.loader.data.RandomAccessData (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarFile$JarEntryEnumeration" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarEntryEnumeration" -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarEntryEnumeration" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarEntryEnumeration" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarFileType" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarFileType" -> "java.lang.Enum (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarFileType" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarFileType" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Boolean (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Integer (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Iterable (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Runnable (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Runtime (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.reflect.Method (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.Arrays (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.Map (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.jar.Attributes$Name (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "org.springframework.boot.loader.data.RandomAccessData (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries$1" -> "java.lang.Integer (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$1" -> "java.util.LinkedHashMap (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$1" -> "java.util.Map (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$1" -> "java.util.Map$Entry (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.lang.Runnable (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.util.NoSuchElementException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.FileNotFoundException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.FilePermission (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.Boolean (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.Integer (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.ThreadLocal (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.net.JarURLConnection (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.net.URLStreamHandler (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.security.Permission (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.util.jar.JarFile (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "org.springframework.boot.loader.data.RandomAccessData (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "org.springframework.boot.loader.data.RandomAccessDataFile (cwa-verification-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection$1" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$1" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$1" -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$1" -> "java.net.URLStreamHandler (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.io.ByteArrayOutputStream (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.io.UnsupportedEncodingException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.Character (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.net.URLEncoder (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.lang.StringIndexOutOfBoundsException (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.util.Objects (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.io.EOFException (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.util.zip.Inflater (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.util.zip.InflaterInputStream (java.base)";
   "org.springframework.boot.loader.jarmode.JarMode"  -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jarmode.JarMode"  -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.io.PrintStream (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.Boolean (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "org.springframework.core.io.support.SpringFactoriesLoader (not found)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "org.springframework.util.ClassUtils (not found)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.io.PrintStream (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.util.Arrays (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.io.PrintStream (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.util.HashSet (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.util.Locale (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.util.Properties (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.util.Set (java.base)";
}
digraph "cwa-testresult-server-1.1.0-SNAPSHOT.jar" {
    // Path: cwa-testresult-server-1.1.0-SNAPSHOT.jar
   "app.coronawarn.testresult.TestResultApplication"  -> "java.lang.Class (java.base)";
   "app.coronawarn.testresult.TestResultApplication"  -> "java.lang.Object (java.base)";
   "app.coronawarn.testresult.TestResultApplication"  -> "java.lang.String (java.base)";
   "app.coronawarn.testresult.TestResultApplication"  -> "org.slf4j.Logger (not found)";
   "app.coronawarn.testresult.TestResultApplication"  -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.testresult.TestResultApplication"  -> "org.springframework.boot.SpringApplication (not found)";
   "app.coronawarn.testresult.TestResultApplication"  -> "org.springframework.boot.autoconfigure.SpringBootApplication (not found)";
   "app.coronawarn.testresult.TestResultApplication"  -> "org.springframework.context.ConfigurableApplicationContext (not found)";
   "app.coronawarn.testresult.TestResultApplication"  -> "org.springframework.data.jpa.repository.config.EnableJpaAuditing (not found)";
   "app.coronawarn.testresult.TestResultApplication"  -> "org.springframework.scheduling.annotation.EnableScheduling (not found)";
   "app.coronawarn.testresult.TestResultApplication"  -> "org.springframework.security.config.annotation.web.configuration.EnableWebSecurity (not found)";
   "app.coronawarn.testresult.TestResultCleanup"      -> "app.coronawarn.testresult.config.TestResultConfig (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.testresult.TestResultCleanup"      -> "app.coronawarn.testresult.config.TestResultConfig$Cleanup (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.testresult.TestResultCleanup"      -> "app.coronawarn.testresult.config.TestResultConfig$Scheduled (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.testresult.TestResultCleanup"      -> "app.coronawarn.testresult.entity.TestResultEntity (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.testresult.TestResultCleanup"      -> "app.coronawarn.testresult.entity.TestResultEntity$Result (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.testresult.TestResultCleanup"      -> "java.lang.Class (java.base)";
   "app.coronawarn.testresult.TestResultCleanup"      -> "java.lang.Integer (java.base)";
   "app.coronawarn.testresult.TestResultCleanup"      -> "java.lang.Object (java.base)";
   "app.coronawarn.testresult.TestResultCleanup"      -> "java.lang.String (java.base)";
   "app.coronawarn.testresult.TestResultCleanup"      -> "java.time.LocalDateTime (java.base)";
   "app.coronawarn.testresult.TestResultCleanup"      -> "java.time.Period (java.base)";
   "app.coronawarn.testresult.TestResultCleanup"      -> "java.time.temporal.TemporalAmount (java.base)";
   "app.coronawarn.testresult.TestResultCleanup"      -> "javax.transaction.Transactional (not found)";
   "app.coronawarn.testresult.TestResultCleanup"      -> "org.slf4j.Logger (not found)";
   "app.coronawarn.testresult.TestResultCleanup"      -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.testresult.TestResultCleanup"      -> "org.springframework.scheduling.annotation.Scheduled (not found)";
   "app.coronawarn.testresult.TestResultCleanup"      -> "org.springframework.stereotype.Component (not found)";
   "app.coronawarn.testresult.TestResultController"   -> "app.coronawarn.testresult.model.TestResult (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.testresult.TestResultController"   -> "app.coronawarn.testresult.model.TestResultList (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.testresult.TestResultController"   -> "app.coronawarn.testresult.model.TestResultRequest (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.testresult.TestResultController"   -> "app.coronawarn.testresult.model.TestResultResponse (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.testresult.TestResultController"   -> "io.swagger.v3.oas.annotations.Operation (not found)";
   "app.coronawarn.testresult.TestResultController"   -> "java.lang.Class (java.base)";
   "app.coronawarn.testresult.TestResultController"   -> "java.lang.Integer (java.base)";
   "app.coronawarn.testresult.TestResultController"   -> "java.lang.Object (java.base)";
   "app.coronawarn.testresult.TestResultController"   -> "java.lang.String (java.base)";
   "app.coronawarn.testresult.TestResultController"   -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.testresult.TestResultController"   -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.testresult.TestResultController"   -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.testresult.TestResultController"   -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.testresult.TestResultController"   -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.testresult.TestResultController"   -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.testresult.TestResultController"   -> "java.util.List (java.base)";
   "app.coronawarn.testresult.TestResultController"   -> "java.util.Objects (java.base)";
   "app.coronawarn.testresult.TestResultController"   -> "java.util.function.Consumer (java.base)";
   "app.coronawarn.testresult.TestResultController"   -> "javax.validation.Valid (not found)";
   "app.coronawarn.testresult.TestResultController"   -> "javax.validation.constraints.NotNull (not found)";
   "app.coronawarn.testresult.TestResultController"   -> "org.slf4j.Logger (not found)";
   "app.coronawarn.testresult.TestResultController"   -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.testresult.TestResultController"   -> "org.springframework.http.ResponseEntity (not found)";
   "app.coronawarn.testresult.TestResultController"   -> "org.springframework.http.ResponseEntity$HeadersBuilder (not found)";
   "app.coronawarn.testresult.TestResultController"   -> "org.springframework.validation.annotation.Validated (not found)";
   "app.coronawarn.testresult.TestResultController"   -> "org.springframework.web.bind.annotation.PostMapping (not found)";
   "app.coronawarn.testresult.TestResultController"   -> "org.springframework.web.bind.annotation.RequestBody (not found)";
   "app.coronawarn.testresult.TestResultController"   -> "org.springframework.web.bind.annotation.RestController (not found)";
   "app.coronawarn.testresult.TestResultRepository"   -> "app.coronawarn.testresult.entity.TestResultEntity (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.testresult.TestResultRepository"   -> "java.lang.Integer (java.base)";
   "app.coronawarn.testresult.TestResultRepository"   -> "java.lang.Long (java.base)";
   "app.coronawarn.testresult.TestResultRepository"   -> "java.lang.Object (java.base)";
   "app.coronawarn.testresult.TestResultRepository"   -> "java.lang.String (java.base)";
   "app.coronawarn.testresult.TestResultRepository"   -> "java.time.LocalDateTime (java.base)";
   "app.coronawarn.testresult.TestResultRepository"   -> "java.util.Optional (java.base)";
   "app.coronawarn.testresult.TestResultRepository"   -> "org.springframework.data.jpa.repository.JpaRepository (not found)";
   "app.coronawarn.testresult.TestResultRepository"   -> "org.springframework.data.jpa.repository.Modifying (not found)";
   "app.coronawarn.testresult.TestResultRepository"   -> "org.springframework.data.jpa.repository.Query (not found)";
   "app.coronawarn.testresult.TestResultService"      -> "app.coronawarn.testresult.entity.TestResultEntity (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.testresult.TestResultService"      -> "app.coronawarn.testresult.entity.TestResultEntity$Result (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.testresult.TestResultService"      -> "app.coronawarn.testresult.exception.TestResultException (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.testresult.TestResultService"      -> "app.coronawarn.testresult.model.TestResult (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "app.coronawarn.testresult.TestResultService"      -> "java.lang.Class (java.base)";
   "app.coronawarn.testresult.TestResultService"      -> "java.lang.Exception (java.base)";
   "app.coronawarn.testresult.TestResultService"      -> "java.lang.Integer (java.base)";
   "app.coronawarn.testresult.TestResultService"      -> "java.lang.Object (java.base)";
   "app.coronawarn.testresult.TestResultService"      -> "java.lang.String (java.base)";
   "app.coronawarn.testresult.TestResultService"      -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.testresult.TestResultService"      -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "app.coronawarn.testresult.TestResultService"      -> "java.lang.invoke.MethodHandle (java.base)";
   "app.coronawarn.testresult.TestResultService"      -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.testresult.TestResultService"      -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.testresult.TestResultService"      -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.testresult.TestResultService"      -> "java.time.LocalDateTime (java.base)";
   "app.coronawarn.testresult.TestResultService"      -> "java.util.Optional (java.base)";
   "app.coronawarn.testresult.TestResultService"      -> "java.util.function.Supplier (java.base)";
   "app.coronawarn.testresult.TestResultService"      -> "org.slf4j.Logger (not found)";
   "app.coronawarn.testresult.TestResultService"      -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.testresult.TestResultService"      -> "org.springframework.http.HttpStatus (not found)";
   "app.coronawarn.testresult.TestResultService"      -> "org.springframework.stereotype.Service (not found)";
   "app.coronawarn.testresult.config.OpenApiConfig"   -> "io.swagger.v3.oas.models.OpenAPI (not found)";
   "app.coronawarn.testresult.config.OpenApiConfig"   -> "io.swagger.v3.oas.models.info.Info (not found)";
   "app.coronawarn.testresult.config.OpenApiConfig"   -> "io.swagger.v3.oas.models.info.License (not found)";
   "app.coronawarn.testresult.config.OpenApiConfig"   -> "java.lang.Object (java.base)";
   "app.coronawarn.testresult.config.OpenApiConfig"   -> "java.lang.String (java.base)";
   "app.coronawarn.testresult.config.OpenApiConfig"   -> "org.springframework.boot.info.BuildProperties (not found)";
   "app.coronawarn.testresult.config.OpenApiConfig"   -> "org.springframework.context.annotation.Bean (not found)";
   "app.coronawarn.testresult.config.OpenApiConfig"   -> "org.springframework.context.annotation.Configuration (not found)";
   "app.coronawarn.testresult.config.SecurityConfig"  -> "java.lang.Exception (java.base)";
   "app.coronawarn.testresult.config.SecurityConfig"  -> "java.lang.Object (java.base)";
   "app.coronawarn.testresult.config.SecurityConfig"  -> "java.lang.String (java.base)";
   "app.coronawarn.testresult.config.SecurityConfig"  -> "java.util.Arrays (java.base)";
   "app.coronawarn.testresult.config.SecurityConfig"  -> "java.util.Collection (java.base)";
   "app.coronawarn.testresult.config.SecurityConfig"  -> "java.util.List (java.base)";
   "app.coronawarn.testresult.config.SecurityConfig"  -> "org.springframework.context.annotation.Bean (not found)";
   "app.coronawarn.testresult.config.SecurityConfig"  -> "org.springframework.context.annotation.Configuration (not found)";
   "app.coronawarn.testresult.config.SecurityConfig"  -> "org.springframework.http.HttpMethod (not found)";
   "app.coronawarn.testresult.config.SecurityConfig"  -> "org.springframework.security.config.annotation.web.HttpSecurityBuilder (not found)";
   "app.coronawarn.testresult.config.SecurityConfig"  -> "org.springframework.security.config.annotation.web.builders.HttpSecurity (not found)";
   "app.coronawarn.testresult.config.SecurityConfig"  -> "org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter (not found)";
   "app.coronawarn.testresult.config.SecurityConfig"  -> "org.springframework.security.config.annotation.web.configurers.CsrfConfigurer (not found)";
   "app.coronawarn.testresult.config.SecurityConfig"  -> "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer (not found)";
   "app.coronawarn.testresult.config.SecurityConfig"  -> "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$AuthorizedUrl (not found)";
   "app.coronawarn.testresult.config.SecurityConfig"  -> "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry (not found)";
   "app.coronawarn.testresult.config.SecurityConfig"  -> "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$MvcMatchersAuthorizedUrl (not found)";
   "app.coronawarn.testresult.config.SecurityConfig"  -> "org.springframework.security.web.firewall.HttpFirewall (not found)";
   "app.coronawarn.testresult.config.SecurityConfig"  -> "org.springframework.security.web.firewall.StrictHttpFirewall (not found)";
   "app.coronawarn.testresult.config.TestResultConfig" -> "java.lang.Object (java.base)";
   "app.coronawarn.testresult.config.TestResultConfig" -> "org.springframework.boot.context.properties.ConfigurationProperties (not found)";
   "app.coronawarn.testresult.config.TestResultConfig" -> "org.springframework.context.annotation.Configuration (not found)";
   "app.coronawarn.testresult.config.TestResultConfig$Cleanup" -> "java.lang.Object (java.base)";
   "app.coronawarn.testresult.config.TestResultConfig$Scheduled" -> "java.lang.Integer (java.base)";
   "app.coronawarn.testresult.config.TestResultConfig$Scheduled" -> "java.lang.Object (java.base)";
   "app.coronawarn.testresult.entity.TestResultEntity" -> "java.lang.Integer (java.base)";
   "app.coronawarn.testresult.entity.TestResultEntity" -> "java.lang.Long (java.base)";
   "app.coronawarn.testresult.entity.TestResultEntity" -> "java.lang.Object (java.base)";
   "app.coronawarn.testresult.entity.TestResultEntity" -> "java.lang.String (java.base)";
   "app.coronawarn.testresult.entity.TestResultEntity" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.testresult.entity.TestResultEntity" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.testresult.entity.TestResultEntity" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.testresult.entity.TestResultEntity" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.testresult.entity.TestResultEntity" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.testresult.entity.TestResultEntity" -> "java.time.LocalDateTime (java.base)";
   "app.coronawarn.testresult.entity.TestResultEntity" -> "javax.persistence.Column (not found)";
   "app.coronawarn.testresult.entity.TestResultEntity" -> "javax.persistence.Entity (not found)";
   "app.coronawarn.testresult.entity.TestResultEntity" -> "javax.persistence.EntityListeners (not found)";
   "app.coronawarn.testresult.entity.TestResultEntity" -> "javax.persistence.GeneratedValue (not found)";
   "app.coronawarn.testresult.entity.TestResultEntity" -> "javax.persistence.Id (not found)";
   "app.coronawarn.testresult.entity.TestResultEntity" -> "javax.persistence.Table (not found)";
   "app.coronawarn.testresult.entity.TestResultEntity" -> "javax.persistence.Version (not found)";
   "app.coronawarn.testresult.entity.TestResultEntity" -> "org.springframework.data.annotation.CreatedDate (not found)";
   "app.coronawarn.testresult.entity.TestResultEntity" -> "org.springframework.data.annotation.LastModifiedDate (not found)";
   "app.coronawarn.testresult.entity.TestResultEntity$Result" -> "java.lang.Class (java.base)";
   "app.coronawarn.testresult.entity.TestResultEntity$Result" -> "java.lang.Enum (java.base)";
   "app.coronawarn.testresult.entity.TestResultEntity$Result" -> "java.lang.Object (java.base)";
   "app.coronawarn.testresult.entity.TestResultEntity$Result" -> "java.lang.String (java.base)";
   "app.coronawarn.testresult.exception.TestResultException" -> "java.lang.RuntimeException (java.base)";
   "app.coronawarn.testresult.exception.TestResultException" -> "java.lang.String (java.base)";
   "app.coronawarn.testresult.exception.TestResultException" -> "org.springframework.http.HttpStatus (not found)";
   "app.coronawarn.testresult.exception.TestResultExceptionHandler" -> "java.lang.Class (java.base)";
   "app.coronawarn.testresult.exception.TestResultExceptionHandler" -> "java.lang.Object (java.base)";
   "app.coronawarn.testresult.exception.TestResultExceptionHandler" -> "java.lang.String (java.base)";
   "app.coronawarn.testresult.exception.TestResultExceptionHandler" -> "org.slf4j.Logger (not found)";
   "app.coronawarn.testresult.exception.TestResultExceptionHandler" -> "org.slf4j.LoggerFactory (not found)";
   "app.coronawarn.testresult.exception.TestResultExceptionHandler" -> "org.springframework.http.HttpStatus (not found)";
   "app.coronawarn.testresult.exception.TestResultExceptionHandler" -> "org.springframework.http.ResponseEntity (not found)";
   "app.coronawarn.testresult.exception.TestResultExceptionHandler" -> "org.springframework.http.ResponseEntity$BodyBuilder (not found)";
   "app.coronawarn.testresult.exception.TestResultExceptionHandler" -> "org.springframework.web.bind.annotation.ExceptionHandler (not found)";
   "app.coronawarn.testresult.exception.TestResultExceptionHandler" -> "org.springframework.web.bind.annotation.RestControllerAdvice (not found)";
   "app.coronawarn.testresult.model.TestResult"       -> "io.swagger.v3.oas.annotations.media.Schema (not found)";
   "app.coronawarn.testresult.model.TestResult"       -> "java.lang.Integer (java.base)";
   "app.coronawarn.testresult.model.TestResult"       -> "java.lang.Object (java.base)";
   "app.coronawarn.testresult.model.TestResult"       -> "java.lang.String (java.base)";
   "app.coronawarn.testresult.model.TestResult"       -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.testresult.model.TestResult"       -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.testresult.model.TestResult"       -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.testresult.model.TestResult"       -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.testresult.model.TestResult"       -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.testresult.model.TestResult"       -> "javax.validation.constraints.Max (not found)";
   "app.coronawarn.testresult.model.TestResult"       -> "javax.validation.constraints.Min (not found)";
   "app.coronawarn.testresult.model.TestResult"       -> "javax.validation.constraints.NotBlank (not found)";
   "app.coronawarn.testresult.model.TestResult"       -> "javax.validation.constraints.NotNull (not found)";
   "app.coronawarn.testresult.model.TestResult"       -> "javax.validation.constraints.Pattern (not found)";
   "app.coronawarn.testresult.model.TestResultList"   -> "io.swagger.v3.oas.annotations.media.Schema (not found)";
   "app.coronawarn.testresult.model.TestResultList"   -> "java.lang.Object (java.base)";
   "app.coronawarn.testresult.model.TestResultList"   -> "java.lang.String (java.base)";
   "app.coronawarn.testresult.model.TestResultList"   -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.testresult.model.TestResultList"   -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.testresult.model.TestResultList"   -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.testresult.model.TestResultList"   -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.testresult.model.TestResultList"   -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.testresult.model.TestResultList"   -> "java.util.List (java.base)";
   "app.coronawarn.testresult.model.TestResultList"   -> "javax.validation.constraints.NotEmpty (not found)";
   "app.coronawarn.testresult.model.TestResultList"   -> "javax.validation.constraints.NotNull (not found)";
   "app.coronawarn.testresult.model.TestResultRequest" -> "io.swagger.v3.oas.annotations.media.Schema (not found)";
   "app.coronawarn.testresult.model.TestResultRequest" -> "java.lang.Object (java.base)";
   "app.coronawarn.testresult.model.TestResultRequest" -> "java.lang.String (java.base)";
   "app.coronawarn.testresult.model.TestResultRequest" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.testresult.model.TestResultRequest" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.testresult.model.TestResultRequest" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.testresult.model.TestResultRequest" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.testresult.model.TestResultRequest" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.testresult.model.TestResultRequest" -> "javax.validation.constraints.NotBlank (not found)";
   "app.coronawarn.testresult.model.TestResultRequest" -> "javax.validation.constraints.Pattern (not found)";
   "app.coronawarn.testresult.model.TestResultResponse" -> "io.swagger.v3.oas.annotations.media.Schema (not found)";
   "app.coronawarn.testresult.model.TestResultResponse" -> "java.lang.Integer (java.base)";
   "app.coronawarn.testresult.model.TestResultResponse" -> "java.lang.Object (java.base)";
   "app.coronawarn.testresult.model.TestResultResponse" -> "java.lang.String (java.base)";
   "app.coronawarn.testresult.model.TestResultResponse" -> "java.lang.invoke.CallSite (java.base)";
   "app.coronawarn.testresult.model.TestResultResponse" -> "java.lang.invoke.MethodHandles (java.base)";
   "app.coronawarn.testresult.model.TestResultResponse" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "app.coronawarn.testresult.model.TestResultResponse" -> "java.lang.invoke.MethodType (java.base)";
   "app.coronawarn.testresult.model.TestResultResponse" -> "java.lang.invoke.StringConcatFactory (java.base)";
   "app.coronawarn.testresult.model.TestResultResponse" -> "javax.validation.constraints.Max (not found)";
   "app.coronawarn.testresult.model.TestResultResponse" -> "javax.validation.constraints.Min (not found)";
   "app.coronawarn.testresult.model.TestResultResponse" -> "javax.validation.constraints.NotNull (not found)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.BufferedReader (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.FileInputStream (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.InputStreamReader (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.io.Reader (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.net.URISyntaxException (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.nio.charset.Charset (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.nio.charset.StandardCharsets (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.function.Function (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.stream.Collector (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.stream.Collectors (java.base)";
   "org.springframework.boot.loader.ClassPathIndexFile" -> "java.util.stream.Stream (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.Collection (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "org.springframework.boot.loader.archive.Archive (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "org.springframework.boot.loader.archive.Archive$Entry (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.ExecutableArchiveLauncher" -> "org.springframework.boot.loader.archive.Archive$EntryFilter (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.JarLauncher"      -> "org.springframework.boot.loader.archive.Archive (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.JarLauncher"      -> "org.springframework.boot.loader.archive.Archive$Entry (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.JarLauncher"      -> "org.springframework.boot.loader.archive.Archive$EntryFilter (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.JarLauncher"      -> "org.springframework.boot.loader.archive.ExplodedArchive (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.io.ByteArrayOutputStream (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.AssertionError (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.ClassNotFoundException (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Package (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.net.JarURLConnection (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.net.URLClassLoader (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.security.AccessControlContext (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.security.AccessController (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.security.PrivilegedActionException (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.security.PrivilegedExceptionAction (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.util.jar.JarFile (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "org.springframework.boot.loader.jar.Handler (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.LaunchedURLClassLoader" -> "org.springframework.boot.loader.jar.JarFile (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.LaunchedURLClassLoader$UseFastConnectionExceptionsEnumeration" -> "org.springframework.boot.loader.jar.Handler (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.Launcher"         -> "java.io.File (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Deprecated (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.lang.Thread (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.security.CodeSource (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.security.ProtectionDomain (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "java.util.List (java.base)";
   "org.springframework.boot.loader.Launcher"         -> "org.springframework.boot.loader.archive.Archive (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.Launcher"         -> "org.springframework.boot.loader.archive.ExplodedArchive (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.Launcher"         -> "org.springframework.boot.loader.archive.JarFileArchive (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.Launcher"         -> "org.springframework.boot.loader.jar.JarFile (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.Thread (java.base)";
   "org.springframework.boot.loader.MainMethodRunner" -> "java.lang.reflect.Method (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.FileInputStream (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.PrintStream (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.io.UnsupportedEncodingException (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Boolean (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Character (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.NoSuchMethodException (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.lang.reflect.Constructor (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.HttpURLConnection (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.net.URLDecoder (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Collection (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.LinkedHashSet (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Locale (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Properties (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.Set (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.function.Supplier (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.regex.Matcher (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "java.util.regex.Pattern (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.archive.Archive (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.archive.Archive$EntryFilter (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.archive.ExplodedArchive (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.archive.JarFileArchive (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.boot.loader.util.SystemPropertyUtils (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher" -> "org.springframework.util.Assert (not found)";
   "org.springframework.boot.loader.PropertiesLauncher$1" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "org.springframework.boot.loader.archive.Archive (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "org.springframework.boot.loader.archive.Archive$Entry (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$ArchiveEntryFilter" -> "org.springframework.boot.loader.archive.Archive$EntryFilter (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "org.springframework.boot.loader.archive.Archive (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "org.springframework.boot.loader.archive.Archive$Entry (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.PropertiesLauncher$PrefixMatchingArchiveFilter" -> "org.springframework.boot.loader.archive.Archive$EntryFilter (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.WarLauncher"      -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.WarLauncher"      -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.WarLauncher"      -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.WarLauncher"      -> "org.springframework.boot.loader.archive.Archive (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.WarLauncher"      -> "org.springframework.boot.loader.archive.Archive$Entry (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.AutoCloseable (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.Deprecated (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.Iterable (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.util.List (java.base)";
   "org.springframework.boot.loader.archive.Archive"  -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.archive.Archive$Entry" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.Archive$Entry" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.Archive$EntryFilter" -> "java.lang.FunctionalInterface (java.base)";
   "org.springframework.boot.loader.archive.Archive$EntryFilter" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.io.FileInputStream (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.Arrays (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.Collection (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.HashSet (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.Set (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.UnsupportedOperationException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Arrays (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Comparator (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Deque (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.LinkedList (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.NoSuchElementException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.Set (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$AbstractIterator" -> "java.util.function.Function (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$ArchiveIterator" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$ArchiveIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$EntryIterator" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$EntryIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$FileEntry" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.ExplodedArchive$SimpleJarFileArchive" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.FileOutputStream (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.io.OutputStream (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.UUID (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive" -> "org.springframework.boot.loader.jar.JarFile (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.archive.JarFileArchive$AbstractIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$AbstractIterator" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$AbstractIterator" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$EntryIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$EntryIterator" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$EntryIterator" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$JarFileEntry" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$JarFileEntry" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$JarFileEntry" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.archive.JarFileArchive$NestedArchiveIterator" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.data.RandomAccessData" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessData" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.data.RandomAccessData" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.io.EOFException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.lang.IndexOutOfBoundsException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$1" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.lang.Math (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.lang.NullPointerException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$DataInputStream" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.io.FileNotFoundException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.io.RandomAccessFile (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.data.RandomAccessDataFile$FileAccess" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.IndexOutOfBoundsException (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.nio.charset.Charset (java.base)";
   "org.springframework.boot.loader.jar.AsciiBytes"   -> "java.nio.charset.StandardCharsets (java.base)";
   "org.springframework.boot.loader.jar.Bytes"        -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.lang.Math (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord" -> "org.springframework.boot.loader.data.RandomAccessData (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$1" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64End" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64End" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64End" -> "org.springframework.boot.loader.data.RandomAccessData (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64Locator" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64Locator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryEndRecord$Zip64Locator" -> "org.springframework.boot.loader.data.RandomAccessData (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.CloneNotSupportedException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.Math (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.Instant (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.ZoneId (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.ZonedDateTime (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.temporal.ChronoField (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.temporal.ChronoUnit (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.temporal.TemporalUnit (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "java.time.temporal.ValueRange (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryFileHeader" -> "org.springframework.boot.loader.data.RandomAccessData (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.util.ArrayList (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryParser" -> "org.springframework.boot.loader.data.RandomAccessData (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.CentralDirectoryVisitor" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.CentralDirectoryVisitor" -> "org.springframework.boot.loader.data.RandomAccessData (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.FileHeader"   -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.FileHeader"   -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.io.File (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.io.PrintStream (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.RuntimeException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.lang.ref.SoftReference (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.net.URLStreamHandler (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.Map (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.concurrent.ConcurrentHashMap (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.logging.Level (java.logging)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.logging.Logger (java.logging)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.regex.Matcher (java.base)";
   "org.springframework.boot.loader.jar.Handler"      -> "java.util.regex.Pattern (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.security.CodeSigner (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.security.cert.Certificate (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.jar.JarEntry"     -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.jar.JarEntryFilter" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.io.File (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Error (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Exception (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Iterable (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Runnable (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.RuntimeException (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.lang.ref.SoftReference (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.URI (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.URLStreamHandler (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.net.URLStreamHandlerFactory (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.Spliterator (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.Spliterators (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.function.Supplier (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.jar.JarFile (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.jar.JarInputStream (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.stream.Stream (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.stream.StreamSupport (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.jar.JarFile"      -> "org.springframework.boot.loader.data.RandomAccessData (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarFile"      -> "org.springframework.boot.loader.data.RandomAccessDataFile (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarFile$1"    -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile$1"    -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarFile$1"    -> "org.springframework.boot.loader.data.RandomAccessData (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarFile$JarEntryEnumeration" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarEntryEnumeration" -> "java.util.Enumeration (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarEntryEnumeration" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarEntryEnumeration" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarFileType" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarFileType" -> "java.lang.Enum (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarFileType" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFile$JarFileType" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Boolean (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Integer (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Iterable (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Runnable (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Runtime (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.CallSite (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.LambdaMetafactory (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.MethodHandle (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.MethodHandles (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.MethodHandles$Lookup (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.invoke.MethodType (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.lang.reflect.Method (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.Arrays (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.Collections (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.Map (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.jar.Attributes (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.jar.Attributes$Name (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.jar.Manifest (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries" -> "org.springframework.boot.loader.data.RandomAccessData (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarFileEntries$1" -> "java.lang.Integer (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$1" -> "java.util.LinkedHashMap (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$1" -> "java.util.Map (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$1" -> "java.util.Map$Entry (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.lang.Runnable (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jar.JarFileEntries$EntryIterator" -> "java.util.NoSuchElementException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.File (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.FileNotFoundException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.FilePermission (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.Boolean (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.Integer (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.ThreadLocal (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.net.JarURLConnection (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.net.MalformedURLException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.net.URLStreamHandler (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.security.Permission (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.util.jar.JarEntry (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.util.jar.JarFile (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "java.util.zip.ZipEntry (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "org.springframework.boot.loader.data.RandomAccessData (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection" -> "org.springframework.boot.loader.data.RandomAccessDataFile (cwa-testresult-server-1.1.0-SNAPSHOT.jar)";
   "org.springframework.boot.loader.jar.JarURLConnection$1" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$1" -> "java.net.URL (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$1" -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$1" -> "java.net.URLStreamHandler (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.io.ByteArrayOutputStream (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.io.UnsupportedEncodingException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.Character (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.IllegalStateException (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.net.URLConnection (java.base)";
   "org.springframework.boot.loader.jar.JarURLConnection$JarEntryName" -> "java.net.URLEncoder (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.lang.StringIndexOutOfBoundsException (java.base)";
   "org.springframework.boot.loader.jar.StringSequence" -> "java.util.Objects (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.io.EOFException (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.io.IOException (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.io.InputStream (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.util.zip.Inflater (java.base)";
   "org.springframework.boot.loader.jar.ZipInflaterInputStream" -> "java.util.zip.InflaterInputStream (java.base)";
   "org.springframework.boot.loader.jarmode.JarMode"  -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jarmode.JarMode"  -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.io.PrintStream (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.Boolean (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.Class (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.ClassLoader (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.util.Iterator (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "org.springframework.core.io.support.SpringFactoriesLoader (not found)";
   "org.springframework.boot.loader.jarmode.JarModeLauncher" -> "org.springframework.util.ClassUtils (not found)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.io.PrintStream (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.util.Arrays (java.base)";
   "org.springframework.boot.loader.jarmode.TestJarMode" -> "java.util.List (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.io.PrintStream (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.CharSequence (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.IllegalArgumentException (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.Object (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.String (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.StringBuilder (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.System (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.lang.Throwable (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.util.HashSet (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.util.Locale (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.util.Properties (java.base)";
   "org.springframework.boot.loader.util.SystemPropertyUtils" -> "java.util.Set (java.base)";
}
